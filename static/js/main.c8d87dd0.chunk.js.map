{"version":3,"sources":["fBase.js","components/Messaginginit.js","components/NoteFactory.js","components/Answer.js","components/Cheer.js","routes/Home.js","components/Login.js","routes/Auth.js","routes/MyAnswers.js","routes/QuestionDetail.js","routes/QuestionRegister.js","components/Question.js","components/Search.js","routes/Questions.js","routes/Navigation.js","routes/CheerRegister.js","routes/Settings.js","components/Friends.js","components/Reply.js","components/Note.js","components/Notes.js","routes/Community.js","routes/UserAnswers.js","routes/SignOut.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","authService","auth","dbService","firestore","storage","setToken","a","isSupported","console","log","getToken","then","token","catch","err","onMessage","payload","Container","styled","div","Title","NoteTextarea","textarea","IconBox","NoteFactory","answer","userObj","setNoteState","useState","noteContent","setNoteContent","value","onChange","e","target","onClick","preventDefault","noteId","uuidv4","noteObj","createdAt","Date","now","writer","uid","writerName","displayName","receiver","userId","collection","doc","set","alert","style","width","height","transform","Question","h1","InfoContainer","CreatedAt","span","WriterContainer","Writer","Content","EditInput","Answer","editState","setEditState","noteState","changedAnswer","setChangedAnswer","history","useHistory","lastTime","lastMinutes","Math","round","lastHours","lastDays","push","questionId","question","window","confirm","answerId","update","modifedAt","marginLeft","icon","faPencilAlt","delete","faTrashAlt","friends","includes","faUserPlus","userName","autoFocus","animated","CheerPhrase","Cheer","cheer","animation","useSpring","from","opacity","y","to","AddBtn","button","LastAnswer","Home","isLoading","setISLoading","cheerList","setCheerList","randNum","setRandNum","answers","setAnswers","currentPage","setCurrentPage","getData","get","snapShot","cheerArray","docs","map","id","cheerId","data","onSnapshot","snapshot","answerArray","sort","b","useEffect","number","floor","random","getRandNum","posts","currentPosts","slice","faPlusCircle","size","LoginContainer","LoginInput","input","LoginBtn","PasswordContainer","PasswordInput","PasswordBtn","Error","Login","setCodeState","codeState","code","setCode","password","setPassword","error","setError","onSubmit","signInWithEmailAndPassword","message","config","gentle","errorAni","type","Background","Notice","Welcome","Auth","authState","setAuthState","top","molasses","welcomeAni","MyAnswers","setIsLoading","myAnswers","setMyAnswers","getMyAnswers","where","myAnswerArray","myAnswer","QuestionDetail","useParams","getAnswers","answerData","QuestionName","h3","QuestionForm","form","QuestionInput","Submit","CodeContainer","CodeBtn","CodeDiv","QuestionRegister","questionName","setQuestionName","questionObj","answerUsers","publicAnswer","makeCode","chars","randomstring","i","rnum","substring","createUserWithEmailAndPassword","newUserObj","user","isPassword","initCode","AnswerContainer","AnswerInput","AnswerTextarea","PrivateLabel","label","AnswerBtn","isPrivate","setIsPrivate","setAnswer","longAnswer","setLongAnswer","answerValue","pathname","getAttribute","name","answerObj","editedAt","marginBottom","SearchInput","CloseBtn","SearchBtn","Search","searchWord","setSearchWord","searchState","setSearchState","faTimes","faSearch","LastQuestion","Questions","questionArray","questions","setQuestions","getQuestions","filter","NavComponent","NavBtn","NavCloseBtn","Navigation","navState","setNavState","reverse","default","reverseAnimation","onNavClick","textDecoration","faHome","faUserFriends","faQuestion","faEdit","faCog","signOut","faDoorOpen","faChevronUp","faBars","CheerName","CheerForm","CheerInput","CheerRegister","cheerName","setCheerName","cheerObj","ProfileContainer","ProfileLabel","ProfileForm","ProfileInput","ProfileSubmitBtn","LogOutBtn","QnaContainer","QnaLabel","QnaInput","QnaSubmitBtn","Settings","refreshUser","setDisplayName","email","setEmail","report","setReport","nameState","setNameState","emailState","setEmailState","passwordState","setPasswordState","displayname","updateProfile","onSubmitEmail","currentUser","updateEmail","onSubmitPassword","updatePassword","onReport","reportObj","add","required","marginTop","fontSize","Friend","FriendIcon","FriendName","FriendCode","Friends","setFriends","init","setInit","getFriends","friendArray","onClickUser","friend","toLowerCase","Reply","note","Column","NoteContainer","NoteTitle","NoteWriter","NoteAnswer","NoteIcon","DeleteIcon","Note","replyState","setReplyState","NoteBox","Notes","notes","setNotes","getNotes","querySnapshot","noteArray","Community","UserAnswers","SignOut","AppRouter","isLoggedIn","exact","path","GlobalStyle","createGlobalStyle","reset","App","setUserObj","requestToken","onAuthStateChanged","userData","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAgBKA,IAASC,KAAKC,OAGjBF,IAASG,MAFTH,IAASI,cAXY,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBASeX,IAEPA,IAASY,YAF3B,I,gSAGMC,GAAcb,IAASc,OACvBC,GAAYf,IAASgB,Y,IACJhB,IAASiB,U,OCzB1BC,GAAQ,uCAAG,8BAAAC,EAAA,0DACoB,IAArCnB,KAASY,UAAUQ,cADF,uBAEhBC,QAAQC,IAAI,gBAAiBtB,KAASY,UAAUQ,eAFhC,kBAGT,MAHS,cAMdR,EAAYZ,KAASY,YANP,SAOAA,EAAUW,WAC7BC,MAAK,SAAAC,GAAK,OACPA,KAEHC,OAAM,SAACC,GAEJ,OADAN,QAAQC,IAAI,WAAYK,GACjB,QAbS,cAOdF,EAPc,OAgBpBb,EAAUgB,WAAU,SAAAC,GAChBR,QAAQC,IAAIO,MAGhBR,QAAQC,IAAI,WAAYG,GApBJ,kBAqBbA,GArBa,4CAAH,qD,uECIfK,GAAYC,IAAOC,IAAV,4UAgBTC,GAAQF,IAAOC,IAAV,0BAELE,GAAeH,IAAOI,SAAV,mEAKZC,GAAUL,IAAOC,IAAV,iJAgDEK,GAvCK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aACnC,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KA0BA,OACI,gBAACb,GAAD,WACI,eAACG,GAAD,2BACA,wBACA,eAACC,GAAD,CAAcU,MAAOF,EAAaG,SA5BzB,SAAAC,GACbH,EAAeG,EAAEC,OAAOH,UA4BpB,eAACR,GAAD,CAASY,QAzBA,SAAAF,GAEb,GADAA,EAAEG,iBACEP,EAAa,CACb,IAAMQ,EAASC,eACTC,EAAU,CAChBV,cACAQ,SACAG,UAAWC,KAAKC,MAChBC,OAAQjB,EAAQkB,IAChBC,WAAYnB,EAAQoB,YACpBC,SAAUtB,EAAOuB,OACjBvB,OAAQA,EAAOA,QAEnBvB,GAAU+C,WAAW,SAASC,IAA9B,UAAqCb,IAAUc,IAAIZ,GACnDa,MAAM,6FACNzB,GAAa,GACbG,EAAe,MASX,SACI,eAAC,KAAD,CAAmBuB,MAAO,CAACC,MAAM,OAAQC,OAAO,OAAQC,UAAW,0BC9D7EvC,GAAYC,IAAOC,IAAV,4iBAsBTsC,GAAWvC,IAAOwC,GAAV,uPAaRC,GAAgBzC,IAAOC,IAAV,sOAYbyC,GAAY1C,IAAO2C,KAAV,4LAWTC,GAAkB5C,IAAOC,IAAV,oHAOf4C,GAAS7C,IAAO2C,KAAV,qNAYNG,GAAU9C,IAAOC,IAAV,sSAePI,GAAUL,IAAOC,IAAV,8JAUP8C,GAAY/C,IAAOI,SAAV,qFA0GA4C,GApGA,SAAC,GAAuB,IAAtBzC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QACvB,EAAkCE,oBAAS,GAA3C,mBAAOuC,EAAP,KAAkBC,EAAlB,KACA,EAAkCxC,oBAAS,GAA3C,mBAAOyC,EAAP,KAAkB1C,EAAlB,KACA,EAA0CC,mBAAS,IAAnD,mBAAO0C,EAAP,KAAsBC,EAAtB,KAEMC,EAAUC,eAEVC,GAAYjC,KAAKC,MAAQjB,EAAOe,WAAa,IAAO,GACpDmC,EAAcC,KAAKC,MAAMH,GACzBI,EAAYF,KAAKC,MAAMH,EAAW,IAClCK,EAAWH,KAAKC,MAAMC,EAAY,IA2CxC,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAU3C,QAhBQ,SAAAF,GACpBA,EAAEG,iBACFoC,EAAQQ,KAAR,oBAA0BvD,EAAOwD,cAc/B,SAAmCxD,EAAOyD,WAC1C,eAACvB,GAAD,UACGlC,EAAOuB,SAAWtB,EAAQkB,IAE3B,uCACE,eAAC,GAAD,CAAST,QAhDG,SAAAF,GAClBA,EAAEG,iBACEX,EAAOuB,SAAWtB,EAAQkB,MAC5BwB,GAAcD,GACXG,IAAkB7C,EAAOA,QAAuB,IAAd0C,GACnCgB,OAAOC,QAAQ,iDACZlF,GAAU+C,WAAW,WAAWC,IAAIzB,EAAO4D,UAAUC,OAAO,CAC7D7D,OAAQ6C,EACRiB,UAAW9C,KAAKC,UAwChB,SACE,eAAC,KAAD,CAAiBW,MAAO,CAACmC,WAAY,OAAQC,KAAMC,SAErD,eAAC,GAAD,CAASvD,QArCK,SAAAF,GACpBA,EAAEG,iBACEX,EAAOuB,SAAWtB,EAAQkB,KAC5BuC,OAAOC,QAAQ,uDACZlF,GAAU+C,WAAW,WAAWC,IAAIzB,EAAO4D,UAAUM,UAiCpD,SACE,eAAC,KAAD,CAAiBtC,MAAO,CAACmC,WAAY,OAAQC,KAAMG,YAKrD,uCACGlE,EAAQmE,UAAYnE,EAAQmE,QAAQC,SAASrE,EAAOuB,SACrD,eAAC,GAAD,UACE,eAAC,KAAD,CAAiByC,KAAMM,SAGzB,eAAC,GAAD,CAAS5D,QAzCC,SAAAF,GAClBA,EAAEG,iBACFT,GAAc0C,IAuCN,SACE,eAAC,KAAD,CAAUhB,MAAO,CAACC,MAAO,OAAQkC,WAAY,gBAKrD,eAAC5B,GAAD,UAAYe,EAAc,GAAd,UACLA,EADK,iBAERG,EAAY,GAAZ,UACKA,EADL,iCAEKC,EAFL,mBAIJ,eAACjB,GAAD,UACE,gBAACC,GAAD,CAAQ5B,QA5CM,SAAAF,GAClBA,EAAEG,iBACFoC,EAAQQ,KAAR,sBAA4BvD,EAAOuB,UA0C/B,eAAiCvB,EAAOuE,cAE1C,eAAChC,GAAD,UACGG,EACC,eAACF,GAAD,CAAWgC,WAAS,EAACjE,SA3CZ,SAAAC,GACfsC,EAAiBtC,EAAEC,OAAOH,QA0CqBA,MAAOuC,GAAgC7C,EAAOA,SACvFA,EAAOA,SAEV4C,GAAa,eAAC,GAAD,CAAa3C,QAASA,EAASD,OAAQA,EAAQE,aAAcA,Q,SChN3EV,GAAYC,YAAOgF,YAAS/E,IAAhBD,CAAH,+fAmBTiF,GAAcjF,IAAOC,IAAV,gQAgCFiF,GApBD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACNC,EAAYC,qBAAU,CACxBC,KAAM,CACFC,QAAS,EACTC,EAAG,IAEPC,GAAI,CACAF,QAAS,GACTC,EAAG,KAGX,OACI,eAAC,GAAD,CAAWrD,MAAOiD,EAAlB,SACI,eAACH,GAAD,UACKE,EAAMA,WCxCjBpF,GAAYC,IAAOC,IAAV,yJAQTyF,GAAS1F,IAAO2F,OAAV,kPAcNC,GAAa5F,IAAOC,IAAV,2FAoFC4F,GA9EJ,SAAC,GAAiB,IAAfrF,EAAc,EAAdA,QACd,EAAkCE,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBC,EAAlB,KACA,EAAkCrF,mBAAS,IAA3C,mBAAOsF,EAAP,KAAkBC,EAAlB,KACA,EAA8BvF,mBAAS,MAAvC,mBAAOwF,EAAP,KAAgBC,EAAhB,KACA,EAA8BzF,mBAAS,IAAvC,mBAAO0F,EAAP,KAAgBC,EAAhB,KACA,EAAsC3F,mBAAS,GAA/C,mBAAO4F,EAAP,KAAoBC,EAApB,KAaMC,EAAO,uCAAG,sBAAApH,EAAA,sEACRJ,GAAU+C,WAAW,UAAU0E,MACpChH,MAAK,SAAAiH,GACJ,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAA7E,GAAG,qBACtC8E,GAAI9E,EAAI+E,SACL/E,EAAIgF,WAEXf,EAAaU,MAPC,uBAUR3H,GAAU+C,WAAW,WAAWkF,YAAW,SAAAC,GAC/C,IAAMC,EAAcD,EAASN,KAAKC,KAAI,SAAA7E,GAAG,qBACvC8E,GAAG9E,EAAImC,UACJnC,EAAIgF,WAETG,EAAYC,MAAK,SAAChI,EAAGiI,GACnB,OAAGjI,EAAEkC,UAAY+F,EAAE/F,WAAmB,EACnClC,EAAEkC,YAAc+F,EAAE/F,UAAkB,EACpClC,EAAEkC,UAAY+F,EAAE/F,UAAkB,OAArC,KAEF+E,EAAWc,GACXpB,GAAa,MArBD,2CAAH,qDAkCX,OALFuB,qBAAU,WACRd,IAnCiB,WACjB,IAAMe,EAAS7D,KAAK8D,MAAsB,EAAhB9D,KAAK+D,UAC/BtB,EAAWoB,GAkCXG,KACC,IAGC,eAAC,GAAD,UACG5B,EAAY,aAEX,uCACGE,GAAa,eAAC,GAAD,CAAwCb,MAAOa,EAAUE,IAA7CF,EAAUE,GAASa,SAC5CX,GAnDU,SAACuB,GACpB,IAAIC,EAAe,EAEnB,OADAA,EAAeD,EAAME,MAAM,EAAiB,EAAdvB,GACvBsB,EAgDaA,CAAaxB,GAASS,KAAI,SAAAtG,GAAM,OAC1C,eAAC,GAAD,CAA8BC,QAASA,EAASD,OAAQA,GAA3CA,EAAO4D,aAGT,EAAZmC,GAAiBF,EAAQjI,OAE1B,eAACuH,GAAD,CAAQzE,QArBH,SAAAF,GACbwF,EAAeD,EAAc,IAoBrB,SACE,eAAC,KAAD,CAAiB/B,KAAMuD,KAAcC,KAAK,SAE1C,eAACnC,GAAD,uE,SC/FR7F,GAAYC,YAAOgF,YAAS/E,IAAhBD,CAAH,4JASTgI,GAAiBhI,IAAOC,IAAV,0HAOdgI,GAAajI,IAAOkI,MAAV,wHAOVC,GAAWnI,IAAOC,IAAV,2PAcRmI,GAAoBpI,IAAOC,IAAV,0BAEjBoI,GAAgBrI,IAAOkI,MAAV,0BAEbI,GAActI,IAAOC,IAAV,iJAUXsI,GAAQvI,YAAOgF,YAASrC,KAAhB3C,CAAH,gOAoFIwI,GAxED,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAC5B,EAAwBhI,mBAAS,IAAjC,mBAAOiI,EAAP,KAAaC,EAAb,KACA,EAAgClI,mBAAS,IAAzC,mBAAOmI,EAAP,KAAiBC,EAAjB,KACA,EAA0BpI,mBAAS,IAAnC,mBAAOqI,EAAP,KAAcC,EAAd,KAEMC,EAAQ,uCAAG,WAAOlI,GAAP,SAAA3B,EAAA,6DACf2B,EAAEG,iBADa,kBAGPpC,GAAYoK,2BAClBP,EAAME,GAAsBF,GAJf,OAKbC,EAAQ,IALK,gDAOS,0CAAlB,KAAMO,QACRH,EAAS,4DACkB,8FAAlB,KAAMG,QACfH,EAAS,8GAGTA,EAAS,KAAMG,SAbJ,yDAAH,sDA0BR/D,EAAYC,qBAAU,CACxBC,KAAO,CACHC,QAAU,GAEdE,GAAI,CACAF,QAAS,GAEb6D,OAAQA,KAAOC,SAGbC,EAAWjE,qBAAU,CACzBE,QAASwD,EAAQ,EAAI,EACrBK,OAAQA,KAAOC,SAGjB,OACE,gBAAC,GAAD,CAAWlH,MAAOiD,EAAlB,UACE,eAACkD,GAAD,CAAarH,QAAS,WACpBwH,GAAcC,IADhB,SAGGA,EACC,uEACA,6DAGJ,eAACV,GAAD,UACE,eAACC,GAAD,CAAYnH,SAlCD,SAAAC,GACf6H,EAAQ7H,EAAEC,OAAOH,QAiCmBA,MAAO8H,EAAMY,KAAK,WAEnDb,GACC,eAACN,GAAD,UACE,eAACC,GAAD,CAAexH,MAAOgI,EAAU/H,SAlCf,SAAAC,GACvB+H,EAAY/H,EAAEC,OAAOH,QAiC6C0I,KAAK,eAGrE,eAAChB,GAAD,CAAOpG,MAAOmH,EAAd,SAAyBP,IACzB,eAACZ,GAAD,CAAUlH,QAASgI,EAAnB,0CCnIAlJ,GAAYC,IAAOC,IAAV,2LAUTuJ,GAAaxJ,IAAOC,IAAV,2IAUVC,GAAQF,YAAOgF,YAASxC,GAAhBxC,CAAH,+IAQLyJ,GAASzJ,IAAO2C,KAAV,qJAUN+G,GAAU1J,YAAOgF,YAAS/E,IAAhBD,CAAH,mHAwCI2J,GAjCJ,WACT,MAAkCjJ,oBAAS,GAA3C,mBAAOkJ,EAAP,KAAkBC,EAAlB,KACA,EAAkCnJ,oBAAS,GAA3C,mBAAOgI,EAAP,KAAkBD,EAAlB,KAEMrD,EAAYC,qBAAU,CAC1ByE,IAAKF,EAAY,QAAU,QAC3BR,OAAQA,KAAOW,WAGXC,EAAa3E,qBAAU,CAC3BE,SAAUqE,GAAa,EACvBR,OAAQA,KAAOW,WAOjB,OACE,gBAAC,GAAD,WACE,eAACP,GAAD,CAAYvI,QANA,WACd4I,GAAcD,MAMZ,eAAC,GAAD,CAAOzH,MAAOiD,EAAd,yDACCwE,EAED,uCACA,eAACH,GAAD,CAAQxI,QAAS,WAAOwH,GAAcC,IAAtC,sEACA,eAAC,GAAD,CAAOD,aAAcA,EAAcC,UAAWA,OAE1C,eAACgB,GAAD,CAASvH,MAAO6H,EAAhB,4FCxENjK,GAAYC,IAAOC,IAAV,kOAWTC,GAAQF,IAAOC,IAAV,8KASLyF,GAAS1F,IAAO2F,OAAV,kPAcNC,GAAa5F,IAAOC,IAAV,2FA8DCgK,GAxDC,SAAC,GAAe,IAAdzJ,EAAa,EAAbA,QAChB,EAAkCE,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBoE,EAAlB,KACA,EAAkCxJ,mBAAS,MAA3C,mBAAOyJ,EAAP,KAAkBC,EAAlB,KACA,EAAsC1J,mBAAS,GAA/C,mBAAO4F,EAAP,KAAoBC,EAApB,KAYM8D,EAAY,uCAAG,sBAAAjL,EAAA,sEACXJ,GAAU+C,WAAW,WAAWuI,MAAM,SAAU,KAAhD,UAAyD9J,EAAQkB,MAAO+E,MAC7EhH,MAAK,SAAAyH,GACF,IAAMqD,EAAgBrD,EAASN,KAAKC,KAAI,SAAA7E,GAAG,qBACvC8E,GAAI9E,EAAImC,UACLnC,EAAIgF,WAEXoD,EAAaG,GACbL,GAAcpE,MARD,2CAAH,qDAgBlB,OAJAwB,qBAAU,WACN+C,MACD,IAGC,eAAC,GAAD,UACKvE,EACC,aAEF,uCACI,eAAC,GAAD,8CAhCS,SAAC6B,GAClB,IAAIC,EAAe,EAEnB,OADAA,EAAeD,EAAME,MAAM,EAAiB,EAAdvB,GACvBsB,EAgCEA,CAAauC,GAAWtD,KAAI,SAAA2D,GAAQ,OAAI,eAAC,GAAD,CAAgCjK,OAAQiK,EAAUhK,QAASA,GAA9CgK,EAASrG,aAClD,EAAZmC,GAAiB6D,EAAUhM,OAE5B,eAAC,GAAD,CAAQ8C,QAhCF,WACdsF,EAAeD,EAAc,IA+BrB,SACI,eAAC,KAAD,CAAiB/B,KAAMuD,KAAcC,KAAK,SAE5C,eAAC,GAAD,uECrFZhI,GAAYC,IAAOC,IAAV,mKASTsC,GAAWvC,IAAOC,IAAV,6MAWRyF,GAAS1F,IAAO2F,OAAV,kPAcNC,GAAa5F,IAAOC,IAAV,2FA4DCwK,GAtDM,SAAC,GAAe,IAAdjK,EAAa,EAAbA,QACvB,EAAkCE,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBoE,EAAlB,KACA,EAA8BxJ,mBAAS,IAAvC,mBAAO0F,EAAP,KAAgBC,EAAhB,KACQS,EAAO4D,eAAP5D,GACR,EAAsCpG,mBAAS,GAA/C,mBAAO4F,EAAP,KAAoBC,EAApB,KAYMoE,EAAU,uCAAG,sBAAAvL,EAAA,sEACXJ,GAAU+C,WAAW,WAAWuI,MAAM,aAAc,KAApD,UAA6DxD,IAAML,MACxEhH,MAAK,SAAAiH,GACJ,IAAMkE,EAAalE,EAASE,KAAKC,KAAI,SAAA7E,GAAG,uBACnCA,EAAIgF,WAETX,EAAWuE,GACXV,GAAa,MAPE,2CAAH,qDAgBhB,OAJA5C,qBAAU,WACRqD,OAIA,eAAC,GAAD,UACG7E,EAAY,aAEb,uCACA,eAAC,GAAD,UAAWM,EAAQ,GAAGpC,WA/BL,SAAC2D,GAClB,IAAIC,EAAe,EAEnB,OADAA,EAAeD,EAAME,MAAM,EAAiB,EAAdvB,GACvBsB,EA6BNA,CAAaxB,GAASS,KAAI,SAAAtG,GAAM,OAAI,eAAC,GAAD,CAAQA,OAAQA,EAAQC,QAASA,OACzD,EAAZ8F,GAAiBF,EAAQjI,OAE1B,eAAC,GAAD,CAAQ8C,QA7BM,WACdsF,EAAeD,EAAc,IA4B7B,SACI,eAAC,KAAD,CAAiB/B,KAAMuD,KAAcC,KAAK,SAE5C,eAAC,GAAD,uECvFFhI,GAAYC,IAAOC,IAAV,gMAUT4K,GAAe7K,IAAO8K,GAAV,8EAKZC,GAAe/K,IAAOgL,KAAV,0GAMZC,GAAgBjL,IAAOkI,MAAV,8BAGbgD,GAASlL,IAAO2F,OAAV,8BAGNwF,GAAgBnL,IAAOC,IAAV,8JAQbmL,GAAUpL,IAAO2F,OAAV,4BAEP0F,GAAUrL,IAAOC,IAAV,qDA0EEqL,GAtEU,WACrB,MAAwC5K,mBAAS,IAAjD,mBAAO6K,EAAP,KAAqBC,EAArB,KACA,EAAwB9K,mBAAS,IAAjC,mBAAOiI,EAAP,KAAaC,EAAb,KAMMK,EAAQ,uCAAG,WAAOlI,GAAP,mBAAA3B,EAAA,yDACb2B,EAAEG,kBACEqK,EAFS,uBAGHxH,EAAa3C,eAEbqK,EAAc,CAChBzH,SAFEA,EAAWuH,EAGbxH,aACA2H,YAAa,GACbC,aAAc,IATT,SAWH3M,GAAU+C,WAAW,aAAaC,IAAIgC,GAAU/B,IAAIwJ,GAXjD,OAYTD,EAAgB,IAZP,2CAAH,sDAgBRI,EAAQ,uCAAG,WAAO7K,GAAP,qBAAA3B,EAAA,sDAMb,IALA2B,EAAEG,iBAEI2K,EAAQ,gEACO,EACjBC,EAAe,GACVC,EAAI,EAAGA,EAFK,EAEaA,IACxBC,EAAOtI,KAAK8D,MAAM9D,KAAK+D,SAAWoE,EAAM1N,QAC9C2N,GAAgBD,EAAMI,UAAUD,EAAMA,EAAO,GARpC,gBAWPlN,GAAYoN,+BAAZ,UACCJ,EADD,0BAECA,EAFD,iBAGLrM,KAHK,+BAAAL,EAAA,MAGA,WAAO4H,GAAP,eAAA5H,EAAA,6DACI+M,EAAa,CACfzK,IAAKsF,EAAKoF,KAAK1K,IACfE,YAAa,eACbyK,YAAY,EACZC,SAAS,GAAD,OAAKR,EAAL,iBALV,SAOI9M,GAAU+C,WAAW,SAASC,IAA9B,UAAqCgF,EAAKoF,KAAK1K,MAAOO,IAAIkK,GAAY1M,KAAKyC,MAAM,0CAPrF,2CAHA,uDAXO,OAuBb0G,EAAQ,GAAD,OAAIkD,EAAJ,iBAvBM,2CAAH,sDA0Bd,OACI,gBAAC,GAAD,WACI,eAACjB,GAAD,2FAGA,gBAACE,GAAD,WACI,eAACE,GAAD,CAAenK,SApDV,SAACC,GACdyK,EAAgBzK,EAAEC,OAAOH,QAmDkBA,MAAO0K,EAAchC,KAAK,SAC7D,eAAC2B,GAAD,CAAQjK,QAASgI,EAAjB,yCAEJ,gBAACkC,GAAD,WACI,eAACN,GAAD,8CAGA,eAACO,GAAD,CAASnK,QAAS2K,EAAlB,sCACA,eAACP,GAAD,UAAU1C,GAAQA,WCvG5B5I,GAAYC,IAAOC,IAAV,mjBAqBTC,GAAQF,IAAOC,IAAV,6VAgBLsM,GAAkBvM,IAAOC,IAAV,oIAOfuM,GAAcxM,IAAOkI,MAAV,0HAOXuE,GAAiBzM,IAAOI,SAAV,4BAEdsM,GAAe1M,IAAO2M,MAAV,mHAMZC,GAAY5M,IAAOC,IAAV,4RAuFEsC,GAzEA,SAAC,GAAyB,IAAxB/B,EAAuB,EAAvBA,QAASwD,EAAc,EAAdA,SAClBV,EAAUC,eAChB,EAAkC7C,oBAAS,GAA3C,mBAAOmM,EAAP,KAAkBC,EAAlB,KACA,EAA4BpM,mBAAS,IAArC,mBAAOH,EAAP,KAAewM,EAAf,KACA,EAAoCrM,oBAAS,GAA7C,mBAAOsM,EAAP,KAAmBC,EAAnB,KA+BMnM,EAAW,SAACC,GACd,IAAMmM,EAAcnM,EAAEC,OAAOH,MAC7BkM,EAAUG,IAWd,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAOjM,QA5CS,SAACF,GACrBuC,EAAQQ,KAAK,CACTqJ,SAAS,aAAD,OAAepM,EAAEC,OAAOoM,aAAa,YA0CZC,KAAMrJ,EAASD,WAAhD,SACKC,EAASA,WAEd,gBAACuI,GAAD,WACKS,EACG,eAACP,GAAD,CAAgB3L,SAAUA,EAAUD,MAAON,EAAQ8M,KAAMrJ,EAASA,SAAUe,WAAS,IAEzF,eAACyH,GAAD,CAAa1L,SAAUA,EAAUD,MAAON,EAAQ8M,KAAMrJ,EAASA,SAAUuF,KAAK,SAE9E,eAACqD,GAAD,CAAW3L,QA/CN,SAACF,GAEd,GADAA,EAAEG,iBACEX,EAAQ,CACR,IAAM4D,EAAW/C,eACXkM,EAAY,CAClBtJ,SAAUA,EAASA,SACnBD,WAAYC,EAASD,WACrBjC,OAAQtB,EAAQkB,IAChBoD,SAAUtE,EAAQoB,YAClBuC,WACA5D,SACAe,UAAWC,KAAKC,MAChB+L,SAAU,KACVV,aAEJ7N,GAAU+C,WAAW,WAAWC,IAAhC,UAAuCmC,IAAYlC,IAAIqL,GAAW7N,KAC9DyC,MAAM,qEACRvC,OAAM,SAACoJ,GACLzJ,QAAQyJ,MAAM,kBAAmBA,MAErCgE,EAAU,MA2BF,SACI,eAAC,KAAD,SAGR,gBAACR,GAAD,CAAiBpK,MAAO,CAACqL,aAAc,KAAvC,UACI,eAAChB,GAAD,CAAa1L,SApBE,WACvBmM,GAAeD,IAmBoCzD,KAAK,aAChD,eAACmD,GAAD,wCACA,eAACF,GAAD,CAAa1L,SA1BA,WACrBgM,GAAcD,IAyBmCtD,KAAK,aAC9C,eAACmD,GAAD,iEC9IV3M,GAAYC,IAAOC,IAAV,0VAiBTC,GAAQF,IAAOwC,GAAV,2KAQLiL,GAAczN,IAAOkI,MAAV,+HAQXwF,GAAW1N,IAAO2F,OAAV,2LAYRgI,GAAY3N,IAAO2F,OAAV,2LAuCAiI,GA3BA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAC1B,EAAsCpN,oBAAS,GAA/C,mBAAOqN,EAAP,KAAoBC,EAApB,KAMM/M,EAAU,WACd+M,GAAgBD,IAGlB,OACE,qCACCA,EACC,gBAAC,GAAD,WACA,eAAC,GAAD,8EACA,eAACN,GAAD,CAAa3M,SAbA,SAACC,GAChB+M,EAAc/M,EAAEC,OAAOH,QAYYA,MAAOgN,IACxC,eAACH,GAAD,CAAUzM,QAASA,EAAnB,SAA4B,eAAC,KAAD,CAAiBsD,KAAM0J,KAASlG,KAAK,YAEjE,eAAC4F,GAAD,CAAW1M,QAASA,EAApB,SACE,eAAC,KAAD,CAAiBsD,KAAM2J,KAAUnG,KAAK,YC3E1ChI,GAAYC,IAAOC,IAAV,gLASTyF,GAAS1F,IAAO2F,OAAV,iPAcNwI,GAAenO,IAAOC,IAAV,6FA6DDmO,GAvDC,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,cAAe7N,EAAa,EAAbA,QAC/B,EAAkCE,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBoE,EAAlB,KACA,EAAkCxJ,mBAAS,IAA3C,mBAAO4N,EAAP,KAAkBC,EAAlB,KACA,EAAoC7N,mBAAS,IAA7C,mBAAOmN,EAAP,KAAmBC,EAAnB,KACA,EAAsCpN,mBAAS,GAA/C,mBAAO4F,EAAP,KAAoBC,EAApB,KAQMiI,EAAY,uCAAG,sBAAApP,EAAA,sDAObmP,EAAaF,EAAcjH,MAAK,kBAAM1D,KAAK+D,SAAW,OACtDyC,GAAcpE,GARD,2CAAH,qDAoBlB,OAJAwB,qBAAU,WACNkH,MACD,IAGC,eAAC,GAAD,UACK1I,EACC,aAEF,uCA/Ba,SAAC6B,GACpB,IAAIC,EAAe,EAEnB,OADAA,EAAeD,EAAME,MAAM,EAAiB,EAAdvB,GACvBsB,EA6BIA,CAAa0G,EAAUG,QAAO,SAAAzK,GAAQ,OAAIA,EAASA,SAASY,SAASiJ,OAAchH,KAAI,SAAA7C,GAAQ,OAAI,eAAC,GAAD,CAAoCxD,QAASA,EAASwD,SAAUA,GAAjDA,EAASD,eAC5H,eAAC,GAAD,CAAQ8J,WAAYA,EAAYC,cAAeA,IAClC,EAAZxH,GAAiBgI,EAAUnQ,OAE5B,eAAC,GAAD,CAAQ8C,QAlBJ,SAAAF,GACZwF,EAAeD,EAAc,IAiBrB,SACI,eAAC,KAAD,CAAiB/B,KAAMuD,KAAcC,KAAK,SAE5C,eAACoG,GAAD,uECzEZpO,GAAYC,YAAOgF,YAAS/E,IAAhBD,CAAH,uPAYT0O,GAAe1O,IAAOC,IAAV,iOAaZ0O,GAAS3O,YAAOgF,YAASW,OAAhB3F,CAAH,8OAcN4O,GAAc5O,IAAOC,IAAV,oPAmFF4O,GAtEI,WACf,MAAgCnO,oBAAS,GAAzC,mBAAOoO,EAAP,KAAiBC,EAAjB,KAEM3J,EAAYC,qBAAU,CACxBE,QAAUuJ,EAAW,EAAI,EACzBtJ,EAAGsJ,EAAW,GAAK,GACnBE,SAAUF,EACV1F,OAAQA,UAAO6F,UAGbC,EAAmB7J,qBAAU,CAC/BE,QAAUuJ,EAAW,EAAI,EACzBtJ,EAAGsJ,GAAY,GAAK,EACpBE,QAASF,EACT1F,OAAQA,UAAO6F,UAGbE,EAAa,WACfJ,GAAaD,IAOjB,OACI,qCACKA,EACD,gBAAC,GAAD,CAAW3M,MAAOiD,EAAlB,UACI,eAAC,KAAD,CAAMK,GAAI,IAAKtD,MAAO,CAACiN,eAAgB,OAAQ9K,WAAY,QAA3D,SACI,eAACoK,GAAD,UACI,eAAC,KAAD,CAAiBnK,KAAM8K,WAG/B,eAAC,KAAD,CAAM5J,GAAI,aAActD,MAAO,CAACiN,eAAgB,QAAhD,SACI,eAACV,GAAD,UACI,eAAC,KAAD,CAAiBnK,KAAM+K,WAG/B,eAAC,KAAD,CAAM7J,GAAI,aAActD,MAAO,CAACiN,eAAgB,QAAhD,SACI,eAACV,GAAD,UACI,eAAC,KAAD,CAAiBnK,KAAMgL,WAG/B,eAAC,KAAD,CAAM9J,GAAI,aAActD,MAAO,CAACiN,eAAgB,QAAhD,SACI,eAACV,GAAD,UACA,eAAC,KAAD,CAAiBnK,KAAMiL,WAG3B,eAAC,KAAD,CAAM/J,GAAI,YAAatD,MAAO,CAACiN,eAAgB,QAA/C,SACI,eAACV,GAAD,UACI,eAAC,KAAD,CAAiBnK,KAAMkL,WAG/B,eAACf,GAAD,CAAczN,QAjCJ,WAClBnC,GAAY4Q,WAgCJ,SACI,eAAC,KAAD,CAAiBnL,KAAMoL,SAE3B,eAACf,GAAD,CAAazM,OAAK,EAAClB,QAASkO,EAA5B,SACI,eAAC,KAAD,CAAiB5K,KAAMqL,YAI/B,eAACjB,GAAD,CAAQxM,MAAO+M,EAAkBjO,QAASkO,EAA1C,SACI,eAAC,KAAD,CAAiB5K,KAAMsL,KAAQ9H,KAAK,YCtH9ChI,GAAYC,IAAOC,IAAV,gMAUT6P,GAAY9P,IAAO8K,GAAV,8EAKTiF,GAAY/P,IAAOgL,KAAV,0GAMTgF,GAAahQ,IAAOkI,MAAV,8BAGVgD,GAASlL,IAAO2F,OAAV,8BAqCGsK,GAlCO,WAClB,MAAkCvP,mBAAS,IAA3C,mBAAOwP,EAAP,KAAkBC,EAAlB,KAMMlH,EAAQ,uCAAG,WAAOlI,GAAP,iBAAA3B,EAAA,yDACb2B,EAAEG,kBACEgP,EAFS,uBAGHnJ,EAAU3F,eAEVgP,EAAW,CACbjL,MAFU+K,EAGVnJ,WAPK,SASH/H,GAAU+C,WAAW,UAAUC,IAAIkO,GAAWjO,IAAImO,GAT/C,OAUTD,EAAa,IAVJ,2CAAH,sDAcd,OACI,gBAAC,GAAD,WACI,eAACL,GAAD,2FAGA,gBAACC,GAAD,WACI,eAACC,GAAD,CAAYlP,SAxBP,SAACC,GACdoP,EAAapP,EAAEC,OAAOH,QAuBkBA,MAAOqP,EAAW3G,KAAK,SACvD,eAAC,GAAD,CAAQtI,QAASgI,EAAjB,6CCxDVlJ,GAAYC,IAAOC,IAAV,6LASToQ,GAAmBrQ,IAAOC,IAAV,wWAehBC,GAAQF,IAAOC,IAAV,2IAQLqQ,GAAetQ,IAAO2M,MAAV,iGAOZ4D,GAAcvQ,IAAOgL,KAAV,uIAOXwF,GAAexQ,IAAOkI,MAAV,mEAIZuI,GAAmBzQ,IAAOkI,MAAV,yTAchBwI,GAAY1Q,IAAO2F,OAAV,gTAcTgL,GAAe3Q,IAAOC,IAAV,qPAWZ2Q,GAAU5Q,IAAO2M,MAAT,wDAIRkE,GAAW7Q,IAAOI,SAAV,wFAMR0Q,GAAe9Q,IAAO2F,OAAV,0TAyKDoL,GA3JA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaxQ,EAAc,EAAdA,QAC7B,EAAsCE,mBAAS,IAA/C,mBAAOkB,EAAP,KAAoBqP,EAApB,KACA,EAA0BvQ,mBAAS,IAAnC,mBAAOwQ,EAAP,KAAcC,EAAd,KACA,EAAgCzQ,mBAAS,IAAzC,mBAAOmI,EAAP,KAAiBC,EAAjB,KACA,EAA4BpI,mBAAS,IAArC,mBAAO0Q,EAAP,KAAeC,EAAf,KACA,EAAkC3Q,oBAAS,GAA3C,mBAAO4Q,EAAP,KAAkBC,EAAlB,KACA,EAAoC7Q,oBAAS,GAA7C,mBAAO8Q,EAAP,KAAmBC,EAAnB,KACA,EAA0C/Q,oBAAS,GAAnD,mBAAOgR,EAAP,KAAsBC,EAAtB,KAEM7Q,EAAW,SAAAC,GACyB,SAAlCA,EAAEC,OAAOoM,aAAa,SACtB6D,EAAelQ,EAAEC,OAAOH,OAEU,UAAlCE,EAAEC,OAAOoM,aAAa,SACtB+D,EAASpQ,EAAEC,OAAOH,OAEgB,aAAlCE,EAAEC,OAAOoM,aAAa,SACtBtE,EAAY/H,EAAEC,OAAOH,QAQvBoI,EAAQ,uCAAG,WAAOlI,GAAP,SAAA3B,EAAA,yDACb2B,EAAEG,kBACEU,GAAepB,EAAQoR,cAAgBhQ,EAF9B,gCAGHpB,EAAQqR,cAAc,CACxBjQ,gBAJK,OAMT5C,GAAU+C,WAAW,SAASC,IAA9B,UAAqCxB,EAAQkB,MAAOO,IAAI,CACpDP,IAAKlB,EAAQkB,IACbE,YAAapB,EAAQoB,cACtBnC,KACCyC,MAAM,oGAEV8O,IACAC,EAAe,IAbN,kDAAH,sDAiBRa,EAAa,uCAAG,WAAO/Q,GAAP,SAAA3B,EAAA,yDAClB2B,EAAEG,kBACE+C,OAAOC,QAAP,UAAkBgN,EAAlB,yJAFc,gCAGZpS,GAAYiT,YAAYC,YAAYd,GAAOzR,MAAK,WAClDT,GAAU+C,WAAW,SAASC,IAA9B,UAAqCxB,EAAQkB,MAAO0C,OAAO,CACvDiI,YAAY,IACb5M,MAAK,WACJyC,MAAM,wEAAkBgP,GACxBF,IACAG,EAAS,UATC,2CAAH,sDAcbc,EAAgB,uCAAG,WAAOlR,GAAP,SAAA3B,EAAA,sDACrB2B,EAAEG,iBACE+C,OAAOC,QAAQ,mEACnBpF,GAAYiT,YAAYG,eAAerJ,GAAUpJ,MAAK,WAClDyC,MAAM,qFACN8O,IACAlI,EAAY,OANK,2CAAH,sDAUhBqJ,EAAQ,uCAAG,WAAMpR,GAAN,eAAA3B,EAAA,sDACb2B,EAAEG,iBACEkQ,IACMgB,EAAY,CAClBhB,SACAtP,OAAStB,EAAQkB,IACjBJ,UAAYC,KAAKC,OAErBxC,GAAU+C,WAAW,WAAWsQ,IAAID,GACpClQ,MAAM,gHACNmP,EAAU,KAVG,2CAAH,sDAcRpQ,EAAU,SAAAF,GACZA,EAAEG,iBACoC,SAAlCH,EAAEC,OAAOoM,aAAa,SACtBmE,GAAcD,GAEoB,UAAlCvQ,EAAEC,OAAOoM,aAAa,SACtBqE,GAAeD,GAEmB,aAAlCzQ,EAAEC,OAAOoM,aAAa,SACtBuE,GAAkBD,IAS1B,OACI,gBAAC,GAAD,WACI,gBAAC,GAAD,WACKlR,EAAQoB,YADb,+BAIA,gBAACyO,GAAD,aACOmB,EAAaE,IAChB,uCACA,eAACpB,GAAD,CAAcjD,KAAK,OAAOpM,QAASA,EAAnC,6CACA,qBAAIkB,MAAO,CAACC,MAAM,MAAOmD,QAAQ,YAGhC+L,GACD,gBAACf,GAAD,CAAatH,SAAUA,EAAvB,UACI,eAACuH,GAAD,CAAc8B,UAAQ,EAACjF,KAAK,OAAOvM,SAAUA,EAAUD,MAAOe,EAAa2H,KAAK,SAChF,eAAC+G,GAAD,CAAcnO,MAAO,CAACoQ,UAAW,MAAOC,SAAS,QAAjD,qJACA,eAAC/B,GAAD,CAAkB5P,MAAM,2BAAO0I,KAAK,SAAS8D,KAAK,YAGpD7M,EAAQ6L,WAKR,OALuBiF,EAAYI,IACrC,uCACA,eAACpB,GAAD,CAAcjD,KAAK,QAAQpM,QAASA,EAApC,mDACA,qBAAIkB,MAAO,CAACC,MAAM,MAAOmD,QAAQ,YAIhCiM,GACD,gBAACjB,GAAD,CAAatH,SAAU6I,EAAvB,UACI,eAACtB,GAAD,CAAc8B,UAAQ,EAACjF,KAAK,QAAQvM,SAAUA,EAAUD,MAAOqQ,EAAO3H,KAAK,UAC3E,eAACkH,GAAD,CAAkB5P,MAAM,2BAAO0I,KAAK,SAAS8D,KAAK,eAGnDiE,EAAYE,IACf,uCACI,eAAClB,GAAD,CAAcjD,KAAK,WAAWpM,QAASA,EAAvC,SAAiDT,EAAQ6L,WAAa,sDAAgB,wDACrFqF,GAAiB,qBAAIvP,MAAO,CAACC,MAAM,MAAOmD,QAAQ,YAGtDmM,GACD,gBAACnB,GAAD,CAAatH,SAAUgJ,EAAvB,UACI,eAACzB,GAAD,CAAc8B,UAAQ,EAACjF,KAAK,WAAWvM,SAAUA,EAAUD,MAAOgI,EAAUU,KAAK,aACjF,eAACkH,GAAD,CAAkB5P,MAAM,2BAAO0I,KAAK,SAAS8D,KAAK,mBAK1D,gBAACsD,GAAD,WACI,eAACC,GAAD,wEACA,eAACC,GAAD,CAAU/P,SA9HC,SAAAC,GACnBsQ,EAAUtQ,EAAEC,OAAOH,QA6HyBA,MAAOuQ,EAAO7H,KAAK,SACvD,eAACuH,GAAD,CAAc7P,QAASkR,EAAvB,yCAEJ,eAACzB,GAAD,CAAWzP,QAzDF,SAACF,GACdA,EAAEG,iBACFpC,GAAY4Q,WAuDR,wBCpQN3P,GAAYC,IAAOC,IAAV,wKAQTC,GAAQF,IAAOwC,GAAV,iDAILiQ,GAASzS,IAAOC,IAAV,iIAONyS,GAAa1S,IAAOC,IAAV,4FAMV0S,GAAa3S,IAAOC,IAAV,mIASV2S,GAAa5S,IAAOC,IAAV,4BAmDD4S,GAjDC,SAAC,GAAe,IAAdrS,EAAa,EAAbA,QACd,EAA8BE,mBAAS,IAAvC,mBAAOiE,EAAP,KAAgBmO,EAAhB,KACA,EAAwBpS,oBAAS,GAAjC,mBAAOqS,EAAP,KAAaC,EAAb,KACM1P,EAAUC,eAEV0P,EAAU,uCAAG,sBAAA7T,EAAA,sEACTJ,GAAU+C,WAAW,SAASuI,MAAM,MAAO,KAAM9J,EAAQmE,SAAS8B,MAAMhH,MAC1E,SAAAyH,GACI,IAAMgM,EAAchM,EAASN,KAAKC,KAAI,SAAA7E,GAAG,uBAASA,EAAIgF,WAEtD8L,EAAWI,MALJ,OAQfF,GAAQ,GARO,2CAAH,qDAWVG,EAAc,SAACpS,GACjBuC,EAAQQ,KAAR,sBAA4B/C,EAAEC,OAAO8F,MAMzC,OAHAQ,qBAAU,WACN2L,MACD,IAEC,eAAC,GAAD,UACKF,EACD,uCACA,eAAC,GAAD,iCACA,wBACCpO,EAAQkC,KAAI,SAAAuM,GAAM,OACf,gBAACX,GAAD,WACI,eAACE,GAAD,CAAY7L,GAAIsM,EAAO1R,IAAKT,QAASkS,EAArC,SACKC,EAAOxR,cAEZ,gBAAC8Q,GAAD,uCAAqC,gBAACE,GAAD,eAC/BQ,EAAO1R,IAAImG,OAAO,GAAGwL,iBAEvB,eAAC,KAAD,CAAiB9O,KAAMG,KAAYqD,KAAK,YAPnCqL,EAAO1R,WAatB,gBChFR3B,GAAYC,IAAOC,IAAV,8UAgBTE,GAAeH,IAAOI,SAAV,qEAKZC,GAAUL,IAAOC,IAAV,mJA6CEqT,GApCD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAM/S,EAAa,EAAbA,QAClB,EAAsCE,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAyBA,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAcC,MAAOF,EAAaG,SAzBzB,SAAAC,GACbH,EAAeG,EAAEC,OAAOH,UAyBpB,eAAC,GAAD,CAASI,QAtBA,SAAAF,GAEb,GADAA,EAAEG,iBACEP,EAAa,CACb,IAAMQ,EAASC,eACTC,EAAU,CAChBV,cACAQ,SACAG,UAAWC,KAAKC,MAChBC,OAAQjB,EAAQkB,IAChBC,WAAYnB,EAAQoB,YACpBC,SAAU0R,EAAK9R,OACflB,OAAQgT,EAAK5S,aAEjB3B,GAAU+C,WAAW,SAASC,IAA9B,UAAqCb,IAAUc,IAAIZ,GACnDa,MAAM,6FACNtB,EAAe,MAOX,SACI,eAAC,KAAD,CAAmBuB,MAAO,CAACC,MAAM,OAAQC,OAAO,OAAQC,UAAW,0BC3D7EkR,GAASxT,IAAOC,IAAV,6NAWNwT,GAAgBzT,IAAOC,IAAV,mIAObyT,GAAY1T,IAAOC,IAAV,iKAST0T,GAAa3T,IAAO2C,KAAV,kJAQViR,GAAa5T,IAAO2C,KAAV,6EAKVkR,GAAW7T,IAAOC,IAAV,yIAOR6T,GAAa9T,IAAOC,IAAV,+IA0CD8T,GAlCF,SAAC,GAAqB,IAApBR,EAAmB,EAAnBA,KAAM/S,EAAa,EAAbA,QACjB,EAAoCE,oBAAS,GAA7C,mBAAOsT,EAAP,KAAmBC,EAAnB,KAWA,OACI,gBAACT,GAAD,WACI,gBAACI,GAAD,eAAcL,EAAKhT,OAAnB,0DAEA,gBAACkT,GAAD,WACI,eAACC,GAAD,CAAWzS,QARF,WACjBgT,GAAeD,IAOP,SACKT,EAAK5S,cAEV,gBAACkT,GAAD,WACI,gBAACF,GAAD,gBACOJ,EAAK5R,cAEZ,eAACmS,GAAD,UACE,eAAC,KAAD,CAAiB7S,QAtBb,SAACF,GACfkD,OAAOC,QAAQ,oCACflF,GAAU+C,WAAW,SAASC,IAA9B,UAAqCuR,EAAKpS,SAAUsD,UAoBDF,KAAMG,KAAYqD,KAAK,eAIzEiM,GAAc,eAAC,GAAD,CAAOT,KAAMA,EAAM/S,QAASA,MAhBlC+S,EAAKpS,SCtEpBpB,GAAYC,IAAOC,IAAV,kMASTC,GAAQF,IAAOwC,GAAV,iDAIL0R,GAAUlU,IAAOC,IAAV,wGAkDEkU,GA5CD,SAAC,GAAe,IAAd3T,EAAa,EAAbA,QACZ,EAA0BE,mBAAS,IAAnC,mBAAO0T,EAAP,KAAcC,EAAd,KACA,EAAkC3T,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBoE,EAAlB,KAEMoK,EAAQ,uCAAG,sBAAAlV,EAAA,sEACPJ,GAAU+C,WAAW,SAASuI,MAAM,WAAY,KAAhD,UAAyD9J,EAAQkB,MAAOuF,YAAW,SAAAsN,GACrF,IAAMC,EAAYD,EAAc3N,KAAKC,KAAI,SAAA7E,GAAG,qBACxC8E,GAAI9E,EAAIb,QACLa,EAAIgF,WAEXqN,EAASG,GACTtK,GAAa,MAPJ,2CAAH,qDAcd,OAHA5C,qBAAU,WACNgN,MACD,IAEC,eAAC,GAAD,UACKxO,EACC,aAEF,uCACI,eAAC,GAAD,iCACA,wBAEkB,IAAjBsO,EAAMjW,OACL,eAAC+V,GAAD,8EAEF,qCACCE,EAAMvN,KAAI,SAAA0M,GAAI,OACX,eAAC,GAAD,CAAM/S,QAASA,EAAS+S,KAAMA,eCnD5CxT,GAAYC,IAAOC,IAAV,6KAkBAwU,GATG,SAAC,GAAe,IAAdjU,EAAa,EAAbA,QAChB,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAOA,QAASA,IAChB,eAAC,GAAD,CAASA,QAASA,Q,SCTxBT,GAAYC,IAAOC,IAAV,+HAOT4C,GAAS7C,IAAOC,IAAV,oMAUNyF,GAAS1F,IAAO2F,OAAV,oPAcNC,GAAa5F,IAAOC,IAAV,6FA4DDyU,GAtDK,SAAC,GAAe,IAAdlU,EAAa,EAAbA,QAClB,EAAkCE,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBoE,EAAlB,KACA,EAA8BxJ,mBAAS,IAAvC,mBAAO0F,EAAP,KAAgBC,EAAhB,KACQS,EAAO4D,eAAP5D,GACR,EAAsCpG,mBAAS,GAA/C,mBAAO4F,EAAP,KAAoBC,EAApB,KAYMoE,EAAU,uCAAG,sBAAAvL,EAAA,sEACTJ,GAAU+C,WAAW,WAAWuI,MAAM,SAAU,KAAhD,UAAyDxD,IAAML,MACpEhH,MAAK,SAAAiH,GACJ,IAAMkE,EAAalE,EAASE,KAAKC,KAAI,SAAA7E,GAAG,uBACnCA,EAAIgF,WAETX,EAAWuE,GACXV,GAAa,MAPA,2CAAH,qDAgBhB,OAJE5C,sBAAU,WACRqD,OAIA,eAAC,GAAD,UACC7E,EAAY,aAEb,uCACA,gBAAC,GAAD,WAASM,EAAQ,GAAGtB,SAApB,+BA/BiB,SAAC6C,GAClB,IAAIC,EAAe,EAEnB,OADAA,EAAeD,EAAME,MAAM,EAAiB,EAAdvB,GACvBsB,EA6BNA,CAAaxB,GAASS,KAAI,SAAAtG,GAAM,OAAI,eAAC,GAAD,CAAQA,OAAQA,EAAQC,QAASA,OACzD,EAAZ8F,GAAiBF,EAAQjI,OAE1B,eAAC,GAAD,CAAQ8C,QA7BM,WACdsF,EAAeD,EAAc,IA4B7B,SACI,eAAC,KAAD,CAAiB/B,KAAMuD,KAAcC,KAAK,SAE5C,eAAC,GAAD,uEC7EK4M,GATC,WAIZ,OAHArN,sBAAU,WACNxI,GAAY4Q,YACb,IAEC,WCgEOkF,GAzDG,SAAC,GAAyD,IAAvDvG,EAAsD,EAAtDA,cAAewG,EAAuC,EAAvCA,WAAYrU,EAA2B,EAA3BA,QAASwQ,EAAkB,EAAlBA,YACrD,OACI,eAAC,KAAD,UACK6D,EACC,uCACE,eAAC,GAAD,IACA,gBAAC,KAAD,WACI,eAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,eAAC,GAAD,CAAMvU,QAASA,MAEnB,eAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,QAAlB,SACI,eAAC,GAAD,MAEJ,eAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACI,eAAC,GAAD,CAAWvU,QAASA,MAExB,eAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,aAAlB,SACI,eAAC,GAAD,CAAW1G,cAAeA,EAAe7N,QAASA,MAEtD,eAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,aAAlB,SACI,eAAC,GAAD,CAAW1G,cAAeA,EAAe7N,QAASA,MAEtD,eAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,gBAAlB,SACI,eAAC,GAAD,CAAgBvU,QAASA,MAE7B,eAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,kBAAlB,SACI,eAAC,GAAD,CAAavU,QAASA,MAE1B,eAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,YAAlB,SACI,eAAC,GAAD,CAAU/D,YAAaA,EAAaxQ,QAASA,MAEjD,eAAC,KAAD,CAAOsU,OAAK,EAACC,KAAK,WAAlB,SACI,eAAC,GAAD,SAGR,gBAAC,KAAD,WACI,eAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACI,eAAC,GAAD,MAEJ,eAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,iBAAlB,SACI,eAAC,GAAD,YAKZ,uCACI,eAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACI,eAAC,GAAD,MAEJ,eAAC,KAAD,CAAUzP,KAAK,IAAIG,GAAG,YC1DhCuP,GAAcC,YAAH,qCACbC,KAGEnV,GAAYC,IAAOC,IAAV,6JAkPAkV,OA1Of,WACE,MAAwBzU,oBAAS,GAAjC,mBAAOqS,EAAP,KAAaC,EAAb,KACA,EAA8BtS,mBAAS,MAAvC,mBAAOF,EAAP,KAAgB4U,EAAhB,KAqLQC,EAAY,uCAAG,4BAAAjW,EAAA,sEACCD,KADD,OACbO,EADa,OAEjBJ,QAAQC,IAAI,aAAcG,GAFT,2CAAH,qDAyCpB,OApCA4H,qBAAU,WACRxI,GAAYwW,oBAAmB,SAAClJ,GAC1BA,GACFiJ,IACArW,GAAU+C,WAAW,SAASC,IAA9B,UAAqCoK,EAAK1K,MAAO+E,MAChDhH,MAAK,SAAAyH,GACF,IAAMqO,EAAUrO,EAASF,OACzBoO,EAAW,CACP1T,IAAK0K,EAAK1K,IACViD,QAAW4Q,EAAS5Q,QACd4Q,EAAS5Q,QACT,KACN0H,WAAakJ,EAASlJ,WACtBzK,YAAcwK,EAAKxK,YAAcwK,EAAKxK,YAAc,eACpDiQ,cAAe,SAAC2D,GAAD,OAAUpJ,EAAKyF,cAAc2D,MAEhDxC,GAAQ,QAGZoC,EAAW,MACXpC,GAAQ,SAGX,IAcD,gBAAC,GAAD,WACE,eAACgC,GAAD,IACCjC,EAAO,eAAC,GAAD,CAAW1E,cA/ND,CACpB,CACIrK,SAAW,sDACXD,WAAa,wCAEjB,CACIC,SAAU,4BACVD,WAAY,wCAEhB,CACIC,SAAU,kCACVD,WAAY,wCAEhB,CACIC,SAAU,0EACVD,WAAY,wCAEhB,CACIC,SAAU,mCACVD,WAAY,wCAEhB,CACIC,SAAU,0JACVD,WAAY,wCAEhB,CACIC,SAAU,iIACVD,WAAY,wCAEhB,CACIC,SAAU,kCACVD,WAAY,wCAEhB,CACIC,SAAU,wEACVD,WAAY,wCAEhB,CACIC,SAAU,wEACVD,WAAY,wCAEhB,CACIC,SAAU,kEACVD,WAAY,wCAEhB,CACIC,SAAU,qDACVD,WAAY,wCAEhB,CACIC,SAAU,kGACVD,WAAY,wCAEhB,CACIC,SAAU,kEACVD,WAAY,wCAEhB,CACIC,SAAU,kCACVD,WAAY,wCAEhB,CACIC,SAAU,yCACVD,WAAY,wCAEhB,CACIC,SAAU,kEACVD,WAAY,wCAEhB,CACIC,SAAU,+CACVD,WAAY,wCAEhB,CACIC,SAAU,yCACVD,WAAY,wCAEhB,CACIC,SAAU,2DACVD,WAAY,wCAEhB,CACIC,SAAU,+CACVD,WAAY,wCAEhB,CACIC,SAAU,iEACVD,WAAY,wCAEhB,CACIC,SAAU,8GACVD,WAAY,wCAEhB,CACIC,SAAU,kCACVD,WAAY,wCAEhB,CACIC,SAAU,6GACVD,WAAY,wCAEhB,CACIC,SAAU,wGACVD,WAAY,wCAEhB,CACIC,SAAU,4FACVD,WAAY,wCAEhB,CACIC,SAAU,+EACVD,WAAY,wCAEhB,CACIC,SAAU,gDACVD,WAAY,wCAEhB,CACIC,SAAU,2DACVD,WAAY,wCAEhB,CACIC,SAAU,2DACVD,WAAY,wCAEhB,CACIC,SAAU,+CACVD,WAAY,wCAEhB,CACIC,SAAU,4DACVD,WAAY,wCAEhB,CACIC,SAAU,4DACVD,WAAY,wCAEhB,CACIC,SAAU,kEACVD,WAAY,wCAEhB,CACIC,SAAU,8EACVD,WAAY,wCAEhB,CACIC,SAAU,0EACVD,WAAY,wCAEhB,CACIC,SAAU,mEACVD,WAAY,wCAEhB,CACIC,SAAU,gFACVD,WAAY,wCAEhB,CACIC,SAAU,yCACVD,WAAY,wCAEhB,CACIC,SAAU,gDACVD,WAAY,wCAEhB,CACIC,SAAU,yEACVD,WAAY,wCAEhB,CACIC,SAAU,+EACVD,WAAY,wCAEhB,CACIC,SAAU,8GACVD,WAAY,yCAgDmC8Q,WAAYY,QAAQjV,GAAUA,QAASA,EAASwQ,YAdjF,WAClB,IAAM5E,EAAOtN,GAAYiT,YACzBqD,EAAW,CACTxT,YAAYwK,EAAKxK,YACjBF,IAAI0K,EAAK1K,IACT2K,WAAYD,EAAKC,WACjB1H,QAASyH,EAAKzH,QACdkN,cAAe,SAAC2D,GAAD,OAAUpJ,EAAKyF,cAAc2D,SAQ1C,iB,MClPRE,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8d87dd0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp6H94uOjFnuEvgDEoTt2V_PLtt0DBnrs\",\r\n  authDomain: \"answercommunity-328ec.firebaseapp.com\",\r\n  projectId: \"answercommunity-328ec\",\r\n  storageBucket: \"answercommunity-328ec.appspot.com\",\r\n  messagingSenderId: \"471754929471\",\r\n  appId: \"1:471754929471:web:76a974475f1d82dbf54f8a\",\r\n  measurementId: \"G-KJV9NQRBNJ\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app();\r\n}\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const messaging = firebase.messaging();\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import firebase from \"firebase\"\r\n\r\nexport const setToken = async () => {\r\n    if(firebase.messaging.isSupported() === false) {\r\n        console.log(\"isSupported: \", firebase.messaging.isSupported())\r\n        return null;\r\n    }\r\n\r\n    const messaging = firebase.messaging();\r\n    const token = await messaging.getToken()\r\n    .then(token => \r\n        token\r\n    )\r\n    .catch((err) => {\r\n        console.log('error : ', err);\r\n        return null;\r\n    })\r\n\r\n    messaging.onMessage(payload => {\r\n        console.log(payload)\r\n    })\r\n\r\n    console.log('token : ', token)\r\n    return token;\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div``;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 95%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NoteFactory = ({answer, userObj, setNoteState}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: answer.userId,\r\n            answer: answer.answer\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        alert(\"쪽지가 성공적으로 보내졌습니다 :)\")\r\n        setNoteState(false);\r\n        setNoteContent('');\r\n        \r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Title>쪽지</Title>\r\n            <hr />\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={onSubmit}>\r\n                <PaperAirplaneIcon style={{width:\"16px\", height:\"16px\", transform: \"rotateZ(45deg)\"}} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoteFactory;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailIcon } from \"@heroicons/react/outline\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"../fBase\";\r\nimport NoteFactory from \"./NoteFactory\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 15px 30px 15px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: white;\r\n  border-radius: 10px;\r\n  background-color: var(--main-color);\r\n  margin: 10px;\r\n  :hover {\r\n      color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst Question = styled.h1`\r\nline-height: 20px;\r\n  text-align: center;\r\n  word-break: keep-all;\r\n  transition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s all ease-in-out;\r\n  color: inherit;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst WriterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst Writer = styled.span`\r\n  transition: 0.3s all ease-in-out;\r\n  text-align: right;\r\n  width: auto;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n  font-size: 10px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  word-break: keep-all;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n  line-height: 17px;\r\n  font-size: 10px;\r\n  width: 90%;\r\n`;\r\n\r\nconst Answer = ({answer, userObj}) => {\r\n  const [editState, setEditState] = useState(false);\r\n  const [noteState, setNoteState] = useState(false);\r\n  const [changedAnswer, setChangedAnswer] = useState('');\r\n  \r\n  const history = useHistory();\r\n\r\n  const lastTime = (Date.now() - answer.createdAt) / 1000 / 60\r\n  const lastMinutes = Math.round(lastTime)\r\n  const lastHours = Math.round(lastTime / 60)\r\n  const lastDays = Math.round(lastHours / 24)\r\n\r\n  const onClickEdit = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      setEditState(!editState);\r\n      if(changedAnswer !== answer.answer & editState === true) {\r\n        window.confirm(\"내용을 바꿀까요?\") \r\n        && dbService.collection(\"answers\").doc(answer.answerId).update({\r\n          answer: changedAnswer,\r\n          modifedAt: Date.now()\r\n        }) \r\n      }\r\n    }\r\n  }\r\n\r\n  const onClickDelete = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      window.confirm(\"정말 지우실건가요?\") \r\n      && dbService.collection(\"answers\").doc(answer.answerId).delete(); \r\n    }\r\n  }\r\n  \r\n  const onClickNote = e => {\r\n    e.preventDefault();\r\n    setNoteState(!noteState);\r\n  }\r\n\r\n  const onClickDetail = e => {\r\n    e.preventDefault();\r\n    history.push(`/question/${answer.questionId}`)\r\n  }\r\n\r\n  const onClickUser = e => {\r\n    e.preventDefault();\r\n    history.push(`/useranswer/${answer.userId}`)\r\n  }\r\n\r\n  const onChange = e => {\r\n    setChangedAnswer(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Question onClick={onClickDetail}>{answer.question}</Question>\r\n      <InfoContainer>\r\n        {answer.userId === userObj.uid \r\n        ? (\r\n        <>\r\n          <IconBox onClick={onClickEdit}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faPencilAlt} />\r\n          </IconBox>\r\n          <IconBox onClick={onClickDelete}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faTrashAlt} />\r\n          </IconBox>\r\n        </>\r\n          )\r\n        : (\r\n          <>\r\n            {userObj.friends && !userObj.friends.includes(answer.userId) && \r\n            <IconBox>\r\n              <FontAwesomeIcon icon={faUserPlus} />\r\n            </IconBox>\r\n            }\r\n            <IconBox onClick={onClickNote}>\r\n              <MailIcon style={{width: \"15px\", marginLeft: \"5px\"}} />\r\n            </IconBox>\r\n          </>\r\n        )}\r\n      </InfoContainer>\r\n      <CreatedAt>{lastMinutes < 60 \r\n        ? `${lastMinutes}분 전` \r\n        : lastHours < 24 \r\n          ? `${lastHours}시간 전`\r\n          : `${lastDays}일 전`\r\n        }</CreatedAt>\r\n      <WriterContainer>\r\n        <Writer onClick={onClickUser}>- {answer.userName}</Writer>\r\n      </WriterContainer>\r\n      <Content>\r\n        {editState \r\n        ? <EditInput autoFocus onChange={onChange} value={changedAnswer ? changedAnswer : answer.answer} />\r\n        : answer.answer}\r\n      </Content>\r\n      {noteState && <NoteFactory userObj={userObj} answer={answer} setNoteState={setNoteState} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: relative;\r\n    margin-top: 50px;\r\n    margin-bottom: 15px;\r\n    width: 90%; \r\n    height: 130px;\r\n    padding: 30px 0;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 50%;\r\n    border-radius: 10px;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nconst CheerPhrase = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    word-break: keep-all;\r\n    line-height: 25px;\r\n    font-size: 18px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Cheer = ({cheer}) => {\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            opacity: 0.5,\r\n            y: 0\r\n        }\r\n    })\r\n    return (\r\n        <Container style={animation}>\r\n            <CheerPhrase>\r\n                {cheer.cheer}\r\n            </CheerPhrase>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cheer;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Cheer from \"../components/Cheer\";\r\nimport useNotification from \"../components/useNotification\";\r\nimport { authService, dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [isLoading, setISLoading] = useState(true);\r\n  const [cheerList, setCheerList] = useState([]);\r\n  const [randNum, setRandNum] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n    let currentPosts = 0;\r\n    currentPosts = posts.slice(0, currentPage * 5)\r\n    return currentPosts\r\n  }\r\n\r\n  const getRandNum = () => {\r\n    const number = Math.floor(Math.random() * 5);\r\n    setRandNum(number)\r\n  }\r\n\r\n  const getData = async () => {\r\n    await dbService.collection(\"cheers\").get()\r\n    .then(snapShot => {\r\n      const cheerArray = snapShot.docs.map(doc => ({\r\n        id: doc.cheerId,\r\n        ...doc.data()\r\n    }))\r\n    setCheerList(cheerArray)\r\n    })\r\n\r\n    await dbService.collection(\"answers\").onSnapshot(snapshot => {\r\n      const answerArray = snapshot.docs.map(doc => ({\r\n        id:doc.answerId,\r\n        ...doc.data(),\r\n      }));\r\n      answerArray.sort((a, b) => {\r\n        if(a.createdAt > b.createdAt) return -1;\r\n        if(a.createdAt === b.createdAt) return 0;\r\n        if(a.createdAt < b.createdAt) return 1;\r\n      });\r\n      setAnswers(answerArray)\r\n      setISLoading(false)\r\n    });\r\n  };\r\n\r\n  const addBtn = e => {\r\n    setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getRandNum();\r\n  }, [])\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading ? \"Loading...\" \r\n        : (\r\n          <>\r\n            {cheerList && <Cheer key={cheerList[randNum].cheerId} cheer={cheerList[randNum]} />}\r\n            {answers && currentPosts(answers).map(answer => (\r\n              <Answer key={answer.answerId} userObj={userObj} answer={answer} />\r\n            ))\r\n            }\r\n            {currentPage*5 <= answers.length \r\n            ? \r\n            <AddBtn onClick={addBtn}>\r\n              <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n            </AddBtn>\r\n            : <LastAnswer>\r\n                    마지막 대답입니다.\r\n            </LastAnswer>\r\n            }\r\n          </>\r\n        )\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { authService } from \"../fBase\";\r\nimport { useState } from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\n\r\nconst Container = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 9;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst LoginBtn = styled.div`\r\n  color: var(--gold);\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: white;\r\n    }\r\n    :active {\r\n      transform: scale(0.9);\r\n    }\r\n`;\r\n\r\nconst PasswordContainer = styled.div``;\r\n\r\nconst PasswordInput = styled.input``;\r\n\r\nconst PasswordBtn = styled.div`\r\n  color: white;\r\n  opacity: 70%;\r\n  margin-bottom: 10px;\r\n  font-size: 10px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Error = styled(animated.span)`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 5px;\r\n  color: var(--gold);\r\n  word-break: keep-all;\r\n  width: 80%;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Login = ({setCodeState, codeState}) => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(\r\n      code, password ? password : code) \r\n      setCode(\"\");\r\n    } catch (error) {\r\n      if (error.message === \"The email address is badly formatted.\") {\r\n        setError(\"코드를 확인해주세요.\")\r\n      } else if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n        setError(\"정확한 코드를 입력했는지 확인해주세요.\")\r\n      }\r\n      else {\r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setCode(e.target.value)\r\n  }\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const animation = useSpring({\r\n      from : {\r\n          opacity : 0\r\n      },\r\n      to: {\r\n          opacity: 1\r\n      },\r\n      config: config.gentle\r\n  })\r\n\r\n  const errorAni = useSpring({\r\n    opacity: error ? 1 : 0,\r\n    config: config.gentle\r\n  })\r\n\r\n  return (\r\n    <Container style={animation}>\r\n      <PasswordBtn onClick={() => {\r\n        setCodeState(!codeState)\r\n      }}>\r\n        {codeState \r\n        ? \"저는 비밀번호가 없습니다\" \r\n        : \"저는 코드만 있습니다\"\r\n        }\r\n      </PasswordBtn>\r\n      <LoginContainer>\r\n        <LoginInput onChange={onChange} value={code} type=\"text\" />\r\n      </LoginContainer>\r\n      {codeState && \r\n        <PasswordContainer>\r\n          <PasswordInput value={password} onChange={onChangePassword} type=\"password\" />\r\n        </PasswordContainer>\r\n      }\r\n      <Error style={errorAni}>{error}</Error>\r\n      <LoginBtn onClick={onSubmit}>\r\n          들어가기\r\n      </LoginBtn>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport Login from \"../components/Login\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled(animated.h1)`\r\n  position: absolute;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n  font-size: 25px;\r\n  font-family: Jeju Myeongjo;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n  color: var(--gold);\r\n  margin-bottom: 15px;\r\n  font-size: 14px;\r\n  z-index: 9;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Welcome = styled(animated.div)`\r\n  color: white;\r\n  font-size: 14px;\r\n  opacity: 0;\r\n  transition: 1s all ease-in-out;\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [authState, setAuthState] = useState(false);\r\n    const [codeState, setCodeState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n      top: authState ? \"150px\" : \"200px\",\r\n      config: config.molasses\r\n    })\r\n\r\n    const welcomeAni = useSpring({\r\n      opacity: !authState && 1,\r\n      config: config.molasses\r\n    })\r\n\r\n    const onClick = () => {\r\n      setAuthState(!authState)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Background onClick={onClick} />\r\n        <Title style={animation}>누군가의 서랍장</Title>\r\n        {authState \r\n        ? (\r\n        <>\r\n        <Notice onClick={() => {setCodeState(!codeState)}}>코드를 입력해주세요.</Notice>\r\n        <Login setCodeState={setCodeState} codeState={codeState} />\r\n        </>\r\n        ) : <Welcome style={welcomeAni}>입장하시려면 터치해주세요.</Welcome>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 90vh;\r\n    width: 100%;\r\n    margin-top: 30px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst MyAnswers = ({userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [myAnswers, setMyAnswers] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n\r\n      const addPage = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const getMyAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${userObj.uid}`).get()\r\n        .then(snapshot => {\r\n            const myAnswerArray = snapshot.docs.map(doc => ({\r\n                id: doc.answerId,\r\n                ...doc.data()    \r\n            }))\r\n            setMyAnswers(myAnswerArray)\r\n            setIsLoading(!isLoading)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? \"Loading...\"\r\n            : ( \r\n            <>\r\n                <Title>\r\n                    나의 대답들\r\n                </Title>\r\n                {currentPosts(myAnswers).map(myAnswer => <Answer key={myAnswer.answerId} answer={myAnswer} userObj={userObj}/>)}\r\n                {currentPage*5 <= myAnswers.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastAnswer>\r\n                    마지막 대답입니다.\r\n                </LastAnswer>\r\n                }\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default MyAnswers;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  font-size: 18px;\r\n  word-break: keep-all;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  width: 70%;\r\n  color: white;\r\n  font-family: Jeju myeongjo;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst QuestionDetail = ({userObj}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const { id } = useParams();\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n\r\n    const addPage = () => {\r\n      setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  const getAnswers = async () => {\r\n    await dbService.collection(\"answers\").where(\"questionId\", \"==\", `${id}`).get()\r\n    .then(snapShot => {\r\n      const answerData = snapShot.docs.map(doc => ({\r\n        ...doc.data()\r\n      }))\r\n      setAnswers(answerData)\r\n      setIsLoading(false);\r\n    }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAnswers();\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? \"Loading...\"\r\n      :\r\n      <>\r\n      <Question>{answers[0].question}</Question>\r\n      {currentPosts(answers).map(answer => <Answer answer={answer} userObj={userObj} />)}\r\n      {currentPage*5 <= answers.length \r\n      ?\r\n      <AddBtn onClick={addPage}>\r\n          <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n      </AddBtn>\r\n      : <LastAnswer>\r\n          마지막 대답입니다.\r\n      </LastAnswer>\r\n      }\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n  }\r\n\r\n  export default QuestionDetail;\r\n    ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    color: white;\r\n`;\r\n\r\nconst QuestionName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst QuestionForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CodeContainer = styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CodeBtn = styled.button``;\r\n\r\nconst CodeDiv = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst QuestionRegister = () => {\r\n    const [questionName, setQuestionName] = useState('');\r\n    const [code, setCode] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        setQuestionName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (questionName) {\r\n            const questionId = uuidv4();\r\n            const question = questionName;\r\n            const questionObj = {\r\n                question,\r\n                questionId,\r\n                answerUsers: [],\r\n                publicAnswer: [],\r\n            }\r\n            await dbService.collection(\"questions\").doc(question).set(questionObj)\r\n            setQuestionName(\"\");\r\n        }\r\n    }\r\n\r\n    const makeCode = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'\r\n        const stringLength = 6\r\n        let randomstring = ''\r\n        for (let i = 0; i < stringLength; i++) {\r\n            const rnum = Math.floor(Math.random() * chars.length)\r\n            randomstring += chars.substring(rnum, rnum + 1)\r\n        }\r\n\r\n        await authService.createUserWithEmailAndPassword(\r\n            `${randomstring}@drawer.book`, \r\n            `${randomstring}@drawer.book`)\r\n        .then(async (data) => {\r\n            const newUserObj = {\r\n                uid: data.user.uid,\r\n                displayName: \"익명\",\r\n                isPassword: false,\r\n                initCode: `${randomstring}@drawer.book`,\r\n            }\r\n            await dbService.collection(\"users\").doc(`${data.user.uid}`).set(newUserObj).then(alert(\"성공했습니다.\"))\r\n        })\r\n        setCode(`${randomstring}@drawer.book`)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <QuestionName>\r\n                무슨 질문을 추가하실 건가요?\r\n            </QuestionName>\r\n            <QuestionForm>\r\n                <QuestionInput onChange={onChange} value={questionName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </QuestionForm>\r\n            <CodeContainer>\r\n                <QuestionName>\r\n                    코드 생성기\r\n                </QuestionName>\r\n                <CodeBtn onClick={makeCode}>생성하기</CodeBtn>\r\n                <CodeDiv>{code && code}</CodeDiv>\r\n            </CodeContainer>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default QuestionRegister;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    border: 1px solid black;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    color: white;\r\n    border-radius: 10px;\r\n    background-color: var(--main-color);\r\n    margin: 10px;\r\n    :focus-within {\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    transition: 0.3s all ease-in-out;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    font-family: Jeju Myeongjo;\r\n    font-size: 14px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst AnswerContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst AnswerInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerTextarea = styled.textarea``;\r\n\r\nconst PrivateLabel = styled.label`\r\n    transition: 0.3s all ease-in-out;\r\n    font-size: 10px;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst AnswerBtn = styled.div`\r\n    margin-left: 5px;\r\n    width: 20px;\r\n    height: 20px;\r\n    transform: rotateZ(45deg);\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        background-color: var(--main-color);\r\n        transform: scale(0.9) rotateZ(45deg);\r\n    }\r\n`;\r\n\r\nconst Question = ({userObj, question}) => {\r\n    const history = useHistory();\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [answer, setAnswer] = useState('');\r\n    const [longAnswer, setLongAnswer] = useState(false);\r\n\r\n    const onClickQuestion = (e) => {\r\n        history.push({\r\n            pathname: `/question/${e.target.getAttribute('name')}`,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer) {\r\n            const answerId = uuidv4();\r\n            const answerObj = {\r\n            question: question.question,\r\n            questionId: question.questionId,\r\n            userId: userObj.uid,\r\n            userName: userObj.displayName,\r\n            answerId,\r\n            answer,\r\n            createdAt: Date.now(),\r\n            editedAt: null,\r\n            isPrivate,\r\n        }\r\n        dbService.collection(\"answers\").doc(`${answerId}`).set(answerObj).then(\r\n            alert(\"답변이 저장되었습니다 :)\")\r\n        ).catch((error) => {\r\n            console.error(\"Submit Error : \", error)\r\n        });\r\n        setAnswer(\"\");}\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const answerValue = e.target.value\r\n        setAnswer(answerValue)\r\n    }\r\n\r\n    const onChangeCheckbox = () => {\r\n        setIsPrivate(!isPrivate)\r\n    }\r\n\r\n    const onChangeAnswerType = () => {\r\n        setLongAnswer(!longAnswer)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title onClick={onClickQuestion} name={question.questionId}>\r\n                {question.question}\r\n            </Title>\r\n            <AnswerContainer>\r\n                {longAnswer \r\n                ? ( <AnswerTextarea onChange={onChange} value={answer} name={question.question} autoFocus />\r\n                ) : (\r\n                <AnswerInput onChange={onChange} value={answer} name={question.question} type=\"text\" />\r\n                )}\r\n                <AnswerBtn onClick={onSubmit}>\r\n                    <PaperAirplaneIcon />\r\n                </AnswerBtn>\r\n            </AnswerContainer>\r\n            <AnswerContainer style={{marginBottom: \"0\"}}>\r\n                <AnswerInput onChange={onChangeAnswerType} type=\"checkbox\"/>\r\n                <PrivateLabel>길게 쓰기</PrivateLabel>\r\n                <AnswerInput onChange={onChangeCheckbox} type=\"checkbox\" />\r\n                <PrivateLabel>답변 비공개하기</PrivateLabel>\r\n            </AnswerContainer>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Question;\r\n  ","import { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 75px;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  transition: 0.3s all ease-in-out;\r\n  background-color: rgba(0,0,0,0.3);\r\n  :hover, :focus-within {\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`  \r\n  font-family: Kyobo Handwriting;\r\n  font-size: 14px;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  transition: 0.3s all ease-in-out;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 200px;\r\n  transition: 0.3s all ease-in-out;\r\n  :focus {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Search = ({ searchWord, setSearchWord }) => {\r\n    const [searchState, setSearchState] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n      setSearchWord(e.target.value)      \r\n    }\r\n\r\n    const onClick = () => {\r\n      setSearchState(!searchState)\r\n    }\r\n\r\n    return (\r\n      <>\r\n      {searchState ? \r\n        <Container>\r\n        <Title>찾으시는 질문이 있나요?</Title>\r\n        <SearchInput onChange={onChange} value={searchWord} />\r\n        <CloseBtn onClick={onClick}><FontAwesomeIcon icon={faTimes} size=\"lg\" /></CloseBtn>\r\n      </Container>\r\n      : <SearchBtn onClick={onClick}>\r\n          <FontAwesomeIcon icon={faSearch} size=\"lg\" />\r\n        </SearchBtn>\r\n      }\r\n      </>\r\n    );\r\n}\r\n  \r\nexport default Search;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Question from \"../components/Question\";\r\nimport Search from \"../components/Search\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastQuestion = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst Questions = ({questionArray, userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([]);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n  \r\n    const getQuestions = async () => {\r\n    //     await dbService.collection(\"questions\").get()\r\n    //     .then(querySnapshot => {\r\n    //         const questionArray = querySnapshot.docs.map(doc => ({\r\n    //             id: doc.questionId,\r\n    //             ...doc.data()\r\n    //         }))\r\n            setQuestions(questionArray.sort(() => Math.random() - 0.5))\r\n            setIsLoading(!isLoading)\r\n    //     })\r\n    }\r\n\r\n    const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? \"Loading...\" \r\n            : (\r\n            <>\r\n                {currentPosts(questions.filter(question => question.question.includes(searchWord))).map(question => <Question key={question.questionId} userObj={userObj} question={question} /> )}\r\n                <Search searchWord={searchWord} setSearchWord={setSearchWord} />\r\n                {currentPage*5 <= questions.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastQuestion>\r\n                    마지막 질문입니다.\r\n                </LastQuestion>\r\n                }\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Questions;\r\n  ","import { faBars, faChevronUp, faCog, faDoorOpen, faEdit, faHome, faQuestion, faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\"\r\nimport { authService } from \"../fBase\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100vw;\r\n    height: auto;\r\n    z-index: 9;\r\n    box-sizing: border-box;\r\n    background-color: rgba(0,0,0, 0.2);\r\n`;\r\n\r\nconst NavComponent = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 40px;\r\n    color: white;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavBtn = styled(animated.button)`\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavCloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin: 10px;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Navigation = () => {\r\n    const [navState, setNavState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n        opacity : navState ? 1 : 0, \r\n        y: navState ? 0 : -10,\r\n        reverse: !navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const reverseAnimation = useSpring({\r\n        opacity : navState ? 0 : 1, \r\n        y: navState ? -10 : 0,\r\n        reverse: navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const onNavClick = () => {\r\n        setNavState(!navState)\r\n    }\r\n\r\n    const onClickLogout = () => {\r\n        authService.signOut();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {navState ?(\r\n            <Container style={animation}>\r\n                <Link to={\"/\"} style={{textDecoration: \"none\", marginLeft: \"20px\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/community\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faUserFriends} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/questions\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faQuestion} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/myanswers\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/settings\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faCog} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <NavComponent onClick={onClickLogout}>\r\n                    <FontAwesomeIcon icon={faDoorOpen} />\r\n                </NavComponent>\r\n                <NavCloseBtn style onClick={onNavClick}>\r\n                    <FontAwesomeIcon icon={faChevronUp} />\r\n                </NavCloseBtn>\r\n            </Container>\r\n            ) : (\r\n            <NavBtn style={reverseAnimation} onClick={onNavClick}>\r\n                <FontAwesomeIcon icon={faBars} size=\"lg\" />\r\n            </NavBtn>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    z-index: 999;\r\n`;\r\n\r\nconst CheerName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CheerForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CheerInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CheerRegister = () => {\r\n    const [cheerName, setCheerName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setCheerName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (cheerName) {\r\n            const cheerId = uuidv4();\r\n            const cheer = cheerName;\r\n            const cheerObj = {\r\n                cheer,\r\n                cheerId,\r\n            }\r\n            await dbService.collection(\"cheers\").doc(cheerName).set(cheerObj)\r\n            setCheerName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CheerName>\r\n                무슨 응원을 추가하실 건가요?\r\n            </CheerName>\r\n            <CheerForm>\r\n                <CheerInput onChange={onChange} value={cheerName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </CheerForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default CheerRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 20px 0px;\r\n    box-sizing: border-box;\r\n    transition: 1s all ease-in-out;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ProfileLabel = styled.label`\r\n    margin: 5px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileInput = styled.input`\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileSubmitBtn = styled.input`\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    margin-top: 5px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst QnaContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 200px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst QnaLabel =styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst QnaInput = styled.textarea`\r\n    font-size: 12px;\r\n    width: 70%;\r\n    height: 50px;\r\n`;\r\n\r\nconst QnaSubmitBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Settings = ({ refreshUser, userObj }) => {\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [report, setReport] = useState('');\r\n    const [nameState, setNameState] = useState(false);\r\n    const [emailState, setEmailState] = useState(false);\r\n    const [passwordState, setPasswordState] = useState(false);\r\n\r\n    const onChange = e => {\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setDisplayName(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmail(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPassword(e.target.value)\r\n        }\r\n    }\r\n\r\n    const onChangeReport = e => {\r\n        setReport(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (displayName && userObj.displayname !== displayName) {\r\n            await userObj.updateProfile({\r\n                displayName\r\n            })\r\n            dbService.collection(\"users\").doc(`${userObj.uid}`).set({\r\n                uid: userObj.uid,\r\n                displayName: userObj.displayName\r\n            }).then(\r\n                alert(\"이름이 성공적으로 변경되었습니다 :)\")\r\n            )\r\n            refreshUser();\r\n            setDisplayName(\"\");\r\n        };\r\n    };\r\n\r\n    const onSubmitEmail = async (e) => {\r\n        e.preventDefault();\r\n        if (window.confirm(`${email}로 로그인 코드를 변경할까요? 더 이상 변경하실 수 없어요.`)) {\r\n        await authService.currentUser.updateEmail(email).then(()=>{\r\n            dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n                isPassword: true\r\n            }).then(()=>{\r\n                alert(\"코드 변경에 성공했습니다.\", email)\r\n                refreshUser();\r\n                setEmail(\"\");\r\n            })\r\n        })}\r\n    }\r\n\r\n    const onSubmitPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (window.confirm(\"비밀번호를 변경할까요?\")) \r\n        authService.currentUser.updatePassword(password).then(()=>{\r\n            alert(\"비밀번호 변경에 성공했습니다.\")\r\n            refreshUser();\r\n            setPassword(\"\");\r\n        })\r\n    }\r\n\r\n    const onReport = async e => {\r\n        e.preventDefault();\r\n        if (report) { \r\n            const reportObj = {\r\n            report,\r\n            userId : userObj.uid,\r\n            createdAt : Date.now()\r\n        }\r\n        dbService.collection(\"reports\").add(reportObj)\r\n        alert(\"성공적으로 제출되었습니다. 감사합니다 :)\")\r\n        setReport('');\r\n    }\r\n    }\r\n\r\n    const onClick = e =>{\r\n        e.preventDefault();\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setNameState(!nameState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmailState(!emailState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPasswordState(!passwordState)\r\n        }\r\n    }\r\n    \r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>\r\n                {userObj.displayName}의 서랍장\r\n            </Title>\r\n\r\n            <ProfileContainer>\r\n                {!(emailState | passwordState) && \r\n                <> \r\n                <ProfileLabel name=\"name\" onClick={onClick}>이름 바꾸기</ProfileLabel>\r\n                <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                </>\r\n                }\r\n                {nameState &&\r\n                <ProfileForm onSubmit={onSubmit}>\r\n                    <ProfileInput required name=\"name\" onChange={onChange} value={displayName} type=\"text\" />\r\n                    <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\"}}>이름을 바꿔도, 친구들은 이전 이름을 알 수 있습니다.</ProfileLabel>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"name\" />\r\n                </ProfileForm>\r\n                }\r\n                {!userObj.isPassword ? !(nameState | passwordState) && \r\n                <>\r\n                <ProfileLabel name=\"email\" onClick={onClick}>이메일 만들기</ProfileLabel>\r\n                <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                </>\r\n                : null\r\n                }\r\n                {emailState &&\r\n                <ProfileForm onSubmit={onSubmitEmail}>\r\n                    <ProfileInput required name=\"email\" onChange={onChange} value={email} type=\"email\" />\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"email\" />\r\n                </ProfileForm>\r\n                }\r\n                {!(nameState | emailState) && \r\n                <>\r\n                    <ProfileLabel name=\"password\" onClick={onClick}>{userObj.isPassword ? \"2차 비밀번호 바꾸기\" : \"2차 비밀번호 만들기\"}</ProfileLabel>\r\n                    {passwordState && <hr style={{width:\"70%\", opacity:\"70%\"}} />}\r\n                </>\r\n                }\r\n                {passwordState &&\r\n                <ProfileForm onSubmit={onSubmitPassword}>\r\n                    <ProfileInput required name=\"password\" onChange={onChange} value={password} type=\"password\" />\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"password\" />\r\n                </ProfileForm>\r\n                }\r\n            </ProfileContainer>\r\n\r\n            <QnaContainer>\r\n                <QnaLabel>문의하기 & 버그리포트</QnaLabel>\r\n                <QnaInput onChange={onChangeReport} value={report}type=\"text\" />\r\n                <QnaSubmitBtn onClick={onReport} >문의하기</QnaSubmitBtn>\r\n            </QnaContainer>\r\n            <LogOutBtn onClick={onLogOut}>Logout</LogOutBtn>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Settings;\r\n  ","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst Friend = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: white;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FriendIcon = styled.div`\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n`;\r\n\r\nconst FriendName = styled.div`\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98)\r\n    }\r\n`;\r\n\r\nconst FriendCode = styled.div``;\r\n\r\nconst Friends = ({userObj}) => {\r\n    const [friends, setFriends] = useState([]);\r\n    const [init, setInit] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const getFriends = async () => {\r\n        await dbService.collection(\"users\").where(\"uid\", \"in\", userObj.friends).get().then(\r\n            snapshot => {\r\n                const friendArray = snapshot.docs.map(doc => ({...doc.data()})\r\n                )\r\n                setFriends(friendArray)\r\n            }\r\n        )\r\n        setInit(true);\r\n    }\r\n\r\n    const onClickUser = (e) => {\r\n        history.push(`/useranswer/${e.target.id}`)\r\n    }\r\n      \r\n    useEffect(() => {\r\n        getFriends();\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            {init ? \r\n            <>\r\n            <Title>친구들</Title>\r\n            <hr />\r\n            {friends.map(friend => (\r\n                <Friend key={friend.uid}>\r\n                    <FriendName id={friend.uid} onClick={onClickUser}>\r\n                        {friend.displayName}\r\n                    </FriendName>\r\n                    <FriendIcon>                         <FriendCode>\r\n                        #{friend.uid.slice(-4).toLowerCase()}\r\n                        </FriendCode>\r\n                        <FontAwesomeIcon icon={faTrashAlt} size=\"sm\" />\r\n                    </FriendIcon>\r\n\r\n                </Friend>\r\n            ))}\r\n            </>\r\n            : \"Loading...\"\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 95%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Reply = ({note, userObj}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: note.writer,\r\n            answer: note.noteContent\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        alert(\"쪽지가 성공적으로 보내졌습니다 :)\")\r\n        setNoteContent('');\r\n        \r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={onSubmit}>\r\n                <PaperAirplaneIcon style={{width:\"16px\", height:\"16px\", transform: \"rotateZ(45deg)\"}} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Reply;","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport Reply from \"./Reply\";\r\n\r\nconst Column = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n    color: rgba(0,0,0,0.5);\r\n    transition: 0.5s all ease-in-out;\r\n    :focus-within {\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst NoteContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\n\r\nconst NoteTitle = styled.div`\r\n    transition: 0.5s all ease-in-out;\r\n    font-size: 12px;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst NoteWriter = styled.span`\r\n    text-align: right;\r\n    width: 50px;\r\n    word-break: keep-all;\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst NoteAnswer = styled.span`\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst NoteIcon = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n`;\r\n\r\nconst DeleteIcon = styled.div`\r\n    :hover {\r\n        cursor: pointer;\r\n        color: black;\r\n        transition: 0.5s all ease-in-out;\r\n    }\r\n`;\r\n\r\nconst Note = ({note, userObj}) => {\r\n    const [replyState, setReplyState] = useState(false);\r\n\r\n    const onDeleteClick = (e) => {\r\n        if (window.confirm(\"삭제할까요?\")) {\r\n            dbService.collection(\"notes\").doc(`${note.noteId}`).delete()\r\n        } \r\n    }\r\n\r\n    const onClickReply = () => {\r\n        setReplyState(!replyState)\r\n    }\r\n    return (\r\n        <Column key={note.noteId}>\r\n            <NoteAnswer>'{note.answer}'에서 온 쪽지입니다.\r\n            </NoteAnswer>\r\n            <NoteContainer>\r\n                <NoteTitle onClick={onClickReply}>\r\n                    {note.noteContent}\r\n                </NoteTitle>\r\n                <NoteIcon>\r\n                    <NoteWriter>\r\n                        - {note.writerName}\r\n                    </NoteWriter>\r\n                    <DeleteIcon>\r\n                      <FontAwesomeIcon onClick={onDeleteClick} icon={faTrashAlt} size=\"sm\" />\r\n                    </DeleteIcon>\r\n                </NoteIcon>\r\n            </NoteContainer>\r\n            {replyState && <Reply note={note} userObj={userObj} />}\r\n        </Column>\r\n    )\r\n}\r\n\r\nexport default Note;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport Note from \"./Note\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst NoteBox = styled.div`\r\n    color: rgba(0,0,0,0.5);\r\n    margin-top: 15px;\r\n    font-size: 14px;\r\n`;\r\n\r\nconst Notes = ({userObj}) => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const getNotes = async () => {\r\n        await dbService.collection(\"notes\").where(\"receiver\", \"==\", `${userObj.uid}`).onSnapshot(querySnapshot => {\r\n            const noteArray = querySnapshot.docs.map(doc => ({\r\n                id: doc.noteId,\r\n                ...doc.data(),\r\n            }))\r\n            setNotes(noteArray);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? \"Loading...\"\r\n            : (\r\n            <>\r\n                <Title>쪽지함</Title>\r\n                <hr />\r\n\r\n                {notes.length === 0 \r\n                ? <NoteBox>표시할 쪽지가 없습니다.</NoteBox>\r\n                : (\r\n                <>\r\n                {notes.map(note => (\r\n                    <Note userObj={userObj} note={note} />\r\n                ))}\r\n                </>\r\n                )\r\n                }\r\n            </>\r\n                )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notes;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Friends from \"../components/Friends\";\r\nimport Notes from \"../components/Notes\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Community = ({userObj}) => {\r\n    return (\r\n        <Container>\r\n            <Notes userObj={userObj} />\r\n            <Friends userObj={userObj} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Community;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Writer = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-family: Jeju myeongjo;\r\n    margin-top: 50px;\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst UserAnswers = ({userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [answers, setAnswers] = useState([]);\r\n    const { id } = useParams();\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n  \r\n      const addPage = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n    \r\n    const getAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${id}`).get()\r\n        .then(snapShot => {\r\n          const answerData = snapShot.docs.map(doc => ({\r\n            ...doc.data()\r\n          }))\r\n          setAnswers(answerData)\r\n          setIsLoading(false);\r\n        }\r\n        )\r\n      }\r\n    \r\n      useEffect(() => {\r\n        getAnswers();\r\n      })\r\n\r\n    return (\r\n        <Container>\r\n        {isLoading ? \"Loading...\"\r\n        :\r\n        <>\r\n        <Writer>{answers[0].userName}의 대답들</Writer>\r\n        {currentPosts(answers).map(answer => <Answer answer={answer} userObj={userObj} />)}\r\n        {currentPage*5 <= answers.length \r\n        ?\r\n        <AddBtn onClick={addPage}>\r\n            <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n        </AddBtn>\r\n        : <LastAnswer>\r\n            마지막 대답입니다.\r\n        </LastAnswer>\r\n        }\r\n        </>\r\n        }\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default UserAnswers;","import React from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { authService } from \"../fBase\";\r\n\r\nconst SignOut = () => {\r\n    useEffect(() => {\r\n        authService.signOut();\r\n    }, [])\r\n    return (\r\n        \"Signout\"\r\n    )\r\n}\r\n\r\nexport default SignOut;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport MyAnswers from \"../routes/MyAnswers\";\r\nimport AnswerDetail from \"../routes/AnswerDetail\";\r\nimport QuestionDetail from \"../routes/QuestionDetail\";\r\nimport QuestionRegister from \"../routes/QuestionRegister\";\r\nimport Questions from \"../routes/Questions\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport CheerRegister from \"../routes/CheerRegister\";\r\nimport Settings from \"../routes/Settings\";\r\nimport Community from \"../routes/Community\";\r\nimport UserAnswers from \"../routes/UserAnswers\";\r\nimport SignOut from \"../routes/SignOut\";\r\n\r\nconst AppRouter = ({ questionArray, isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? \r\n            ( <> \r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\" >\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route exact path=\"/community\" >\r\n                        <Community userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/myanswers\" >\r\n                        <MyAnswers questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/questions\" >\r\n                        <Questions questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/question/:id\" >\r\n                        <QuestionDetail userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/useranswer/:id\" >\r\n                        <UserAnswers userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\" >\r\n                        <Settings refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/signout\" >\r\n                        <SignOut />\r\n                    </Route>\r\n                </Switch>\r\n                <Switch>\r\n                    <Route exact path=\"/questionregister\" >\r\n                        <QuestionRegister />\r\n                    </Route>\r\n                    <Route exact path=\"/cheerregister\" >\r\n                        <CheerRegister />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { authService, dbService } from \"../fBase\";\nimport { setToken } from \"./Messaginginit\";\nimport AppRouter from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: Kyobo Handwriting;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const questionArray = [\n    {\n        question : \"결정을 잘 하시나요?\",\n        questionId : \"b8f300df-0fff-4fd0-a066-3c5bafe6d024\"\n    }, \n    {\n        question: \"괜찮아요?\",\n        questionId: \"ce35b720-8cbf-43af-aae6-914403c99789\"\n    },\n    {\n        question: \"그리운가요?\",\n        questionId: \"9428cfbc-2a42-48aa-8e2f-42700e928af4\"\n    },\n    {\n        question: \"꼭 가보고 싶은 곳이 있나요?\",\n        questionId: \"16a9a4c6-d1d9-4977-97ec-1fca76dc7b9c\"\n    },\n    {\n        question: \"꿈이 있나요?\",\n        questionId: \"00d1e249-bd6a-452c-81a4-458b30640945\"\n    },\n    {\n        question: \"누군가에게 말하기 어려운 것이 있다면 여기에 적어보세요.\",\n        questionId: \"f08c3f4a-13b7-4d6a-bf2b-901df73e5751\"\n    },\n    {\n        question: \"느낌을 사기위해 무언가를 지불해본 적이 있나요?\",\n        questionId: \"09770edd-b174-44de-a314-95a83eaa613e\"\n    },\n    {\n        question: \"답답한가요?\",\n        questionId: \"840ce86f-8a9e-444d-b1c1-8dd589c200ab\"\n    },\n    {\n        question: \"당신께 사랑은 무엇인가요?\",\n        questionId: \"4adc09d4-5a43-45b9-a525-d77454fa70a5\"\n    },\n    {\n        question: \"당신께 행복은 무엇인가요?\",\n        questionId: \"4f24a89a-3155-435b-84cb-82c731037942\"\n    },\n    {\n        question: \"당신께도 질문이 있나요?\",\n        questionId: \"88b121a4-e8ab-4d2d-99d3-7fec0876d439\"\n    },\n    {\n        question: \"당신은 누구인가요?\",\n        questionId: \"fa92f9e9-853a-4332-8bc6-79567fa23db5\"\n    },\n    {\n        question: \"당신은 어떤 답장을 쓰고 싶으신가요?\",\n        questionId: \"38beaf3b-90f3-4463-bfed-b5f416459280\"\n    },\n    {\n        question: \"대화가 힘들때가 있나요?\",\n        questionId: \"e459723f-00cb-43c5-8486-6d021433aea1\"\n    },\n    {\n        question: \"두려운가요?\",\n        questionId: \"e4741c08-ad4b-4328-952f-755db960fd38\"\n    },\n    {\n        question: \"모순이 있나요?\",\n        questionId: \"f8e4799a-aa4a-4b04-8e9d-667fb1a1d512\"\n    },\n    {\n        question: \"무엇이라 불리고 싶나요?\",\n        questionId: \"b6e8e867-1483-4249-89c1-9bb4a32517a8\"\n    },\n    {\n        question: \"밤을 좋아하나요?\",\n        questionId: \"d1e623a3-1d3e-45fb-9f3a-e737d9675766\"\n    },\n    {\n        question: \"번외가 있나요?\",\n        questionId: \"c7209c46-b4c0-40d5-ad1c-c420ccb0b9dc\"\n    },\n    {\n        question: \"사랑이란 무엇일까요?\",\n        questionId: \"2075b151-ed2d-4813-953e-a59a1f2d5bc6\"\n    },\n    {\n        question: \"사랑하고 있나요?\",\n        questionId: \"a06a2a77-1d1d-434c-a25d-38b6b4a5d2da\"\n    },\n    {\n        question: \"사랑한다고 말해보세요.\",\n        questionId: \"085e6ddd-7498-4a67-a894-1c42acc1c36a\"\n    },\n    {\n        question: \"생각보다 중요하지 않았던 것이 있었나요?\",\n        questionId: \"1f726ded-2c33-4803-9c5c-23cb63045667\"\n    },\n    {\n        question: \"솔직한가요?\",\n        questionId: \"109366f3-5429-4764-af23-e941e06b6e56\"\n    },\n    {\n        question: \"어리광부리고 싶다면 여기에 부려보세요.\",\n        questionId: \"d79dcd7f-e346-4b8d-9c96-50e8841efe54\"\n    },\n    {\n        question: \"어릴 때 무얼하고 놀았는지 기억나나요?\",\n        questionId: \"4303d851-1cb9-4e99-bfa5-a8735da2914a\"\n    },\n    {\n        question: \"얼었던 것이 녹으면 무엇이 되나요?\",\n        questionId: \"02a8706b-03c3-446c-9500-df3dc8fae4b1\"\n    },\n    {\n        question: \"오늘 하늘은 무슨 색이었나요?\",\n        questionId: \"55b33e10-36a5-4d24-af30-c8fa8bf13113\"\n    },\n    {\n        question: \"용서할 수 있나요?\",\n        questionId: \"640d40e5-8bee-49a8-ac49-f0879defa381\"\n    },\n    {\n        question: \"이끌려본적이 있나요?\",\n        questionId: \"ca706d16-6248-42f2-9826-77a9d8f7f94e\"\n    },\n    {\n        question: \"이상형을 그려보세요.\",\n        questionId: \"f11f02b9-88fb-4632-bdde-f824df368199\"\n    },\n    {\n        question: \"이해받고 있나요?\",\n        questionId: \"69b10746-2ee8-4941-b4d6-b943d6af7960\"\n    },\n    {\n        question: \"잊었던 단어가 있나요?\",\n        questionId: \"2d6d5007-4a8b-4176-8b1b-9556d66a2b05\"\n    },\n    {\n        question: \"정말 소통하고 있나요?\",\n        questionId: \"5dc5d43e-9642-4272-a2cc-5724ef9e95f2\"\n    },\n    {\n        question: \"좋아하는 공간이 있나요?\",\n        questionId: \"5690fbae-3972-4dfc-a21c-d6a3be147b9c\"\n    },\n    {\n        question: \"즐거웠던 순간을 적어보세요.\",\n        questionId: \"4e996e57-2dd3-47a2-b34d-d996678d3f25\"\n    },\n    {\n        question: \"지금, 무슨 생각을 하시나요?\",\n        questionId: \"e57084db-75c3-419c-b34b-fc42088e8d48\"\n    },\n    {\n        question: \"지금, 무엇을 원하시나요?\",\n        questionId: \"4ddb5a9b-415a-44f6-83a6-c86455b2ca7a\"\n    },\n    {\n        question: \"지금, 어떤 감정을 느끼시나요?\",\n        questionId: \"1fe19a57-445c-49ec-bc6b-d5e4aaed4410\"\n    },\n    {\n        question: \"쫓기고 있나요?\",\n        questionId: \"b1d88547-3c58-4a79-a4a1-a9cca797b06f\"\n    },\n    {\n        question: \"큰 일이 닥친다면?\",\n        questionId: \"c483234f-4d47-4786-b28d-29633b1f7644\"\n    },\n    {\n        question: \"편지를 받은 기억이 있나요?\",\n        questionId: \"88b4306d-91b8-43cc-ae82-67457d41d4e3\"\n    },\n    {\n        question: \"표현하지 못하는 것이 있나요?\",\n        questionId: \"a4be7cc2-a279-4715-bbbd-7e5a72f9d20c\"\n    },\n    {\n        question: \"힘들었던 순간은 여기에 두고 가도록해요.\",\n        questionId: \"e7ffd573-2901-45d5-9c79-42bebaa1ea4b\"\n    },\n]\n\n    const requestToken = async () => {\n        let token = await setToken();\n        console.log('token === ', token)\n    }\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        requestToken();\n        dbService.collection(\"users\").doc(`${user.uid}`).get()\n        .then(snapshot => {\n            const userData= snapshot.data()\n            setUserObj({\n                uid: user.uid,\n                friends : (userData.friends \n                    ? userData.friends \n                    : null),\n                isPassword : userData.isPassword,\n                displayName: (user.displayName ? user.displayName : \"익명\"),\n                updateProfile: (args) => user.updateProfile(args),\n              })\n            setInit(true)\n        })\n      } else {\n        setUserObj(null)\n        setInit(true)\n      }\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      friends: user.friends,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <Container>\n      <GlobalStyle />\n      {init ? <AppRouter questionArray={questionArray} isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser = {refreshUser} />\n      : \"Loading...\"\n        }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}