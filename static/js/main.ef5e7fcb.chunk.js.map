{"version":3,"sources":["fBase.js","components/Answer.js","components/Cheer.js","routes/Home.js","components/Login.js","routes/Auth.js","routes/MyAnswers.js","routes/AnswerDetail.js","components/Question.js","routes/QuestionDetail.js","routes/QuestionRegister.js","components/Search.js","routes/Questions.js","routes/Navigation.js","routes/CheerRegister.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","enablePersistence","authService","auth","dbService","storage","Container","styled","div","Question","h1","CreatedAt","span","Writer","Content","Answer","answer","lastTime","Date","now","createdAt","lastMinutes","Math","round","lastHours","lastDays","question","userName","animated","CheerPhrase","Cheer","cheer","animation","useSpring","from","opacity","y","to","style","AddBtn","button","Home","useState","isLoading","setISLoading","cheerList","setCheerList","randNum","setRandNum","answers","setAnswers","currentPage","setCurrentPage","currentPosts","posts","slice","getData","a","collection","get","then","snapShot","cheerArray","docs","map","doc","id","cheerId","data","onSnapshot","snapshot","answerArray","answerId","sort","b","useEffect","number","floor","random","getRandNum","onClick","e","LoginContainer","LoginInput","input","LoginBtn","Error","Login","code","setCode","error","setError","onSubmit","preventDefault","signInWithEmailAndPassword","message","config","gentle","errorAni","onChange","target","value","type","Background","Title","Welcome","Auth","authState","setAuthState","top","molasses","ProfileContainer","LogOutBtn","MyAnswers","userObj","setIsLoading","myAnswers","setMyAnswers","getMyAnswers","where","uid","myAnswerArray","signOut","myAnswer","AnswerDetail","AnswerContainer","AnswerInput","AnswerTextarea","textarea","PrivateLabel","label","AnswerBtn","history","useHistory","isPrivate","setIsPrivate","setAnswer","longAnswer","setLongAnswer","answerValue","push","pathname","getAttribute","name","questionId","autoFocus","uuidv4","answerObj","userId","displayName","set","console","log","catch","marginBottom","QuestionDetail","setQuestion","questionID","useParams","getQuestion","questionData","QuestionName","h3","QuestionForm","form","QuestionInput","Submit","QuestionRegister","questionName","setQuestionName","questionObj","answerUsers","publicAnswer","SearchInput","Search","searchWord","setSearchWord","Questions","questions","setQuestions","getQuestions","querySnapshot","questionArray","filter","includes","icon","faPlusCircle","size","NavComponent","NavBtn","NavCloseBtn","Navigation","navState","setNavState","x","reverse","reverseAnimation","onNavClick","textDecoration","faHome","faChevronRight","faBars","CheerName","CheerForm","CheerInput","CheerRegister","cheerName","setCheerName","cheerObj","AppRouter","isLoggedIn","exact","path","GlobalStyle","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef5e7fcb.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp6H94uOjFnuEvgDEoTt2V_PLtt0DBnrs\",\r\n  authDomain: \"answercommunity-328ec.firebaseapp.com\",\r\n  projectId: \"answercommunity-328ec\",\r\n  storageBucket: \"answercommunity-328ec.appspot.com\",\r\n  messagingSenderId: \"471754929471\",\r\n  appId: \"1:471754929471:web:76a974475f1d82dbf54f8a\",\r\n  measurementId: \"G-KJV9NQRBNJ\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().enablePersistence();\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 80%;\r\n  padding: 25px 30px 20px 30px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: white;\r\n  border-radius: 10px;\r\n  background-color: var(--main-color);\r\n  margin: 10px;\r\n  :hover {\r\n      color: var(--gold);\r\n      cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Question = styled.h1`\r\ntransition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  color: white;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Writer = styled.span``;\r\n\r\nconst Content = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 14px;\r\n  opacity: 70%;\r\n  color: black;\r\n`;\r\n\r\nconst Answer = ({answer}) => {\r\n  const lastTime = (Date.now() - answer.createdAt) / 1000 / 60\r\n  const lastMinutes = Math.round(lastTime)\r\n  const lastHours = Math.round(lastTime / 60)\r\n  const lastDays = Math.round(lastHours / 24)\r\n  return (\r\n    <Container>\r\n      <Question>{answer.question}</Question>\r\n      <CreatedAt>{lastMinutes < 60 \r\n      ? `${lastMinutes}분 전` \r\n      : lastHours < 24 \r\n        ? `${lastHours}시간 전`\r\n        : `${lastDays}일 전`\r\n      }</CreatedAt>\r\n      <Writer>{answer.userName}</Writer>\r\n      <Content>{answer.answer}</Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: relative;\r\n    margin-top: 50px;\r\n    margin-bottom: 15px;\r\n    width: 80%; \r\n    height: 130px;\r\n    padding: 30px 0;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 50%;\r\n    border-radius: 10px;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nconst CheerPhrase = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    word-break: keep-all;\r\n    line-height: 25px;\r\n    font-size: 18px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Cheer = ({cheer}) => {\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            opacity: 0.5,\r\n            y: 0\r\n        }\r\n    })\r\n    return (\r\n        <Container style={animation}>\r\n            <CheerPhrase>\r\n                {cheer.cheer}\r\n            </CheerPhrase>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cheer;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Cheer from \"../components/Cheer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst AddBtn = styled.button``;\r\n\r\nconst Home = () => {\r\n  const [isLoading, setISLoading] = useState(true);\r\n  const [cheerList, setCheerList] = useState([]);\r\n  const [randNum, setRandNum] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n    let currentPosts = 0;\r\n    currentPosts = posts.slice(0, currentPage * 5)\r\n    return currentPosts\r\n  }\r\n\r\n  const getRandNum = () => {\r\n    const number = Math.floor(Math.random() * 5);\r\n    setRandNum(number)\r\n  }\r\n\r\n  const getData = async () => {\r\n    await dbService.collection(\"cheers\").get()\r\n    .then(snapShot => {\r\n      const cheerArray = snapShot.docs.map(doc => ({\r\n        id: doc.cheerId,\r\n        ...doc.data()\r\n    }))\r\n    setCheerList(cheerArray)\r\n    })\r\n\r\n    await dbService.collection(\"answers\").onSnapshot(snapshot => {\r\n      const answerArray = snapshot.docs.map(doc => ({\r\n        id:doc.answerId,\r\n        ...doc.data(),\r\n      }));\r\n      answerArray.sort((a, b) => {\r\n        if(a.createdAt > b.createdAt) return -1;\r\n        if(a.createdAt === b.createdAt) return 0;\r\n        if(a.createdAt < b.createdAt) return 1;\r\n      });\r\n      setAnswers(answerArray)\r\n      setISLoading(false)\r\n    });\r\n  };\r\n\r\n  const addBtn = e => {\r\n    setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getRandNum();\r\n  }, [])\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading ? \"Loading...\" \r\n        : (\r\n          <>\r\n            {cheerList && <Cheer key={cheerList[randNum].cheerId} cheer={cheerList[randNum]} />}\r\n            {answers && currentPosts(answers).map(answer => (\r\n              <Answer key={answer.answerId} answer={answer} />\r\n            ))\r\n            }\r\n          </>\r\n        )\r\n        }\r\n        {currentPosts(answers) > 5 && <AddBtn onClick={addBtn}></AddBtn>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { authService } from \"../fBase\";\r\nimport { useState } from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Container = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 9;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst LoginBtn = styled.button`\r\n    font-family: Jeju Myeongjo;\r\n    padding: 3px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Error = styled(animated.span)`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--gold);\r\n  word-break: keep-all;\r\n  width: 80%;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(\r\n      code, code) \r\n      setCode(\"\");\r\n    } catch (error) {\r\n      if (error.message === \"The email address is badly formatted.\") {\r\n        setError(\"이메일 형식을 확인해주세요.\")\r\n      } else if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n        setError(\"정확한 코드를 입력했는지 확인해주세요.\")\r\n      }\r\n      else {\r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setCode(e.target.value)\r\n  }\r\n\r\n  const animation = useSpring({\r\n      from : {\r\n          opacity : 0\r\n      },\r\n      to: {\r\n          opacity: 1\r\n      },\r\n      config: config.gentle\r\n  })\r\n\r\n  const errorAni = useSpring({\r\n    opacity: error ? 1 : 0,\r\n    config: config.gentle\r\n  })\r\n\r\n  return (\r\n    <Container style={animation}>\r\n      <LoginContainer>\r\n        <LoginInput onChange={onChange} value={code} type=\"text\" />\r\n          <LoginBtn onClick={onSubmit}>입장하기</LoginBtn>\r\n      </LoginContainer>\r\n          <Error style={errorAni}>{error}</Error>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport Login from \"../components/Login\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled(animated.h1)`\r\n  position: absolute;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  font-size: 25px;\r\n  font-family: Jeju Myeongjo;\r\n`;\r\n\r\nconst Welcome = styled.div``;\r\n\r\nconst Auth = () => {\r\n    const [authState, setAuthState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n      top: authState ? \"120px\" : \"170px\",\r\n      config: config.molasses\r\n    })\r\n\r\n    const onClick = e => {\r\n      setAuthState(!authState)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Background onClick={onClick} />\r\n        <Title style={animation}>누군가의 서랍장</Title>\r\n        {authState \r\n        ? <Login />\r\n        : <Welcome></Welcome>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  ","import React from \"react\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport { authService, dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n    width: 100%;\r\n    height: 150px;\r\n    background-color: rgba(255,255,255,0.7);\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n\r\n`;\r\n\r\nconst LogOutBtn = styled.button``;\r\n\r\nconst MyAnswers = ({userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [myAnswers, setMyAnswers] = useState(null);\r\n\r\n    const getMyAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${userObj.uid}`).get()\r\n        .then(snapshot => {\r\n            const myAnswerArray = snapshot.docs.map(doc => ({\r\n                id: doc.answerId,\r\n                ...doc.data()    \r\n            }))\r\n            setMyAnswers(myAnswerArray)\r\n            setIsLoading(!isLoading)\r\n        })\r\n    }\r\n\r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? \"Loading...\"\r\n            : ( \r\n            <>\r\n                <Title>\r\n                    나의 답변들\r\n                </Title>\r\n                <ProfileContainer>\r\n\r\n                </ProfileContainer>\r\n                <LogOutBtn onClick={onLogOut}>LogOut</LogOutBtn>\r\n                {myAnswers.map(myAnswer => <Answer answer={myAnswer} />)}\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default MyAnswers;\r\n  ","import React from \"react\";\r\n\r\nconst AnswerDetail = () => {\r\n    return (\r\n      \"AnswerDetail\"\r\n    );\r\n  }\r\n  \r\n  export default AnswerDetail;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    padding: 30px;\r\n    box-sizing: border-box;\r\n    border: 1px solid black;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    color: white;\r\n    border-radius: 10px;\r\n    background-color: var(--main-color);\r\n    margin: 10px;\r\n    :focus-within {\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    transition: 0.3s all ease-in-out;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    font-family: Jeju Myeongjo;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst AnswerContainer = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst AnswerInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerTextarea = styled.textarea``;\r\n\r\nconst PrivateLabel = styled.label`\r\n    transition: 0.3s all ease-in-out;\r\n    font-size: 10px;\r\n`;\r\n\r\nconst AnswerBtn = styled.button`\r\n    margin: 0;\r\n    margin-left: 1px;\r\n    padding: 3px 7px;\r\n    border-end-end-radius: 10px;\r\n    border-start-end-radius: 10px;\r\n    background-color: rgba(255,255,255);\r\n    font-family: Jeju Myeongjo;\r\n    :active {\r\n        background-color: var(--main-color);\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst Question = ({userObj, question}) => {\r\n    const history = useHistory();\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [answer, setAnswer] = useState('');\r\n    const [longAnswer, setLongAnswer] = useState(false);\r\n\r\n    const onClickQuestion = (e) => {\r\n        history.push({\r\n            pathname: `/question/${e.target.getAttribute('name')}`,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer) {\r\n            const answerId = uuidv4();\r\n            const answerObj = {\r\n            question: question.question,\r\n            questionId: question.questionId,\r\n            userId: userObj.uid,\r\n            userName: userObj.displayName,\r\n            answerId,\r\n            answer,\r\n            createdAt: Date.now(),\r\n            isPrivate,\r\n        }\r\n        dbService.collection(\"answers\").doc(`${answerId}`).set(answerObj).then(\r\n            console.log(\"Submit Success\")\r\n        ).catch((error) => {\r\n            console.error(\"Submit Error : \", error)\r\n        });\r\n        setAnswer(\"\");}\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const answerValue = e.target.value\r\n        setAnswer(answerValue)\r\n    }\r\n\r\n    const onChangeCheckbox = () => {\r\n        setIsPrivate(!isPrivate)\r\n    }\r\n\r\n    const onChangeAnswerType = () => {\r\n        setLongAnswer(!longAnswer)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title onClick={onClickQuestion} name={question.questionId}>\r\n                {question.question}\r\n            </Title>\r\n            <AnswerContainer>\r\n                {longAnswer \r\n                ? ( <AnswerTextarea onChange={onChange} value={answer} name={question.question} autoFocus />\r\n                ) : (\r\n                <AnswerInput onChange={onChange} value={answer} name={question.question} type=\"text\" />\r\n                )}\r\n                <AnswerBtn onClick={onSubmit}>답변</AnswerBtn>\r\n            </AnswerContainer>\r\n            <AnswerContainer style={{marginBottom: \"0\"}}>\r\n                <AnswerInput onChange={onChangeAnswerType} type=\"checkbox\"/>\r\n                <PrivateLabel>길게 쓰기</PrivateLabel>\r\n                <AnswerInput onChange={onChangeCheckbox} type=\"checkbox\" />\r\n                <PrivateLabel>답변 비공개하기</PrivateLabel>\r\n            </AnswerContainer>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Question;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Question from \"../components/Question\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst QuestionDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const questionID = useParams().id;\r\n  const getQuestion = async () => {\r\n    await dbService.collection(\"questions\").where(\"questionId\", \"==\", `${questionID}`).get()\r\n    .then(snapShot => {\r\n      const questionData = snapShot.docs.map(doc => ({\r\n        ...doc.data()\r\n      }))\r\n      setQuestion(questionData)\r\n      setIsLoading(false);\r\n    }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion();\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? \"Loading...\"\r\n      : <Question question={question[0]} />\r\n      }\r\n    </Container>\r\n  );\r\n  }\r\n\r\n  export default QuestionDetail;\r\n    ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst QuestionName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst QuestionForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst QuestionRegister = () => {\r\n    const [questionName, setQuestionName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setQuestionName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (questionName) {\r\n            const questionId = uuidv4();\r\n            const question = questionName;\r\n            const questionObj = {\r\n                question,\r\n                questionId,\r\n                answerUsers: [],\r\n                publicAnswer: [],\r\n            }\r\n            await dbService.collection(\"questions\").doc(question).set(questionObj)\r\n            setQuestionName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <QuestionName>\r\n                무슨 질문을 추가하실 건가요?\r\n            </QuestionName>\r\n            <QuestionForm>\r\n                <QuestionInput onChange={onChange} value={questionName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </QuestionForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default QuestionRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  height: 120px;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  transition: 0.3s all ease-in-out;\r\n  background-color: var(--main-color);\r\n  :hover, :focus-within {\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`  \r\n  font-family: Kyobo Handwriting;\r\n  font-size: 20px;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  transition: 0.3s all ease-in-out;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 200px;\r\n  transition: 0.3s all ease-in-out;\r\n  :focus {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst Search = ({ searchWord, setSearchWord }) => {\r\n    const onChange = (e) => {\r\n      setSearchWord(e.target.value)      \r\n    }\r\n    return (\r\n      <Container>\r\n        <Title>어떤 질문을 찾고 있나요?</Title>\r\n        <SearchInput onChange={onChange} value={searchWord} />\r\n      </Container>\r\n    );\r\n}\r\n  \r\nexport default Search;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Question from \"../components/Question\";\r\nimport Search from \"../components/Search\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 130px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst Questions = ({userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([]);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n  \r\n    const getQuestions = async () => {\r\n        await dbService.collection(\"questions\").get()\r\n        .then(querySnapshot => {\r\n            const questionArray = querySnapshot.docs.map(doc => ({\r\n                id: doc.questionId,\r\n                ...doc.data()\r\n            }))\r\n            setQuestions(questionArray)\r\n            setIsLoading(!isLoading)\r\n        })\r\n    }\r\n\r\n    const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? \"Loading...\" \r\n            : (\r\n            <>\r\n                { currentPosts(questions.filter(question => question.question.includes(searchWord))).map(question => <Question key={question.questionId} userObj={userObj} question={question} /> )}\r\n                <Search searchWord={searchWord} setSearchWord={setSearchWord} />\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"3x\" />\r\n                </AddBtn>\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Questions;\r\n  ","import { faBars, faChevronRight, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\"\r\n\r\nconst Container = styled(animated.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: auto;\r\n    width: 50px;\r\n    z-index: 9;\r\n`;\r\n\r\nconst NavComponent = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    color: white;\r\n    background-color: rgba(0,0,0, 0.2);\r\n    opacity: 1;\r\n    z-index: 9;\r\n`;\r\n\r\nconst NavBtn = styled(animated.button)`\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavCloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin: 10px;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Navigation = () => {\r\n    const [navState, setNavState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n        opacity : navState ? 1 : 0, \r\n        x: navState ? 0 : 100,\r\n        reverse: !navState,\r\n        config: config.gentle,\r\n    })\r\n\r\n    const reverseAnimation = useSpring({\r\n        opacity : navState ? 0 : 1, \r\n        x: navState ? 100 : 0,\r\n        reverse: navState,\r\n        config: config.gentle,\r\n    })\r\n\r\n    const onNavClick = () => {\r\n        setNavState(!navState)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {navState ?(\r\n            <Container style={animation}>\r\n                <Link to={\"/\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/questions\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>Q</NavComponent>\r\n                </Link>\r\n                <Link to={\"/myanswers\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>A</NavComponent>\r\n                </Link> \r\n                <NavCloseBtn style onClick={onNavClick}>\r\n                    <FontAwesomeIcon icon={faChevronRight} />\r\n                </NavCloseBtn>\r\n            </Container>\r\n            ) : (\r\n            <NavBtn style={reverseAnimation} onClick={onNavClick}>\r\n                <FontAwesomeIcon icon={faBars} size=\"lg\" />\r\n            </NavBtn>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    z-index: 999;\r\n`;\r\n\r\nconst CheerName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CheerForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CheerInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CheerRegister = () => {\r\n    const [cheerName, setCheerName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setCheerName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (cheerName) {\r\n            const cheerId = uuidv4();\r\n            const cheer = cheerName;\r\n            const cheerObj = {\r\n                cheer,\r\n                cheerId,\r\n            }\r\n            await dbService.collection(\"cheers\").doc(cheerName).set(cheerObj)\r\n            setCheerName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CheerName>\r\n                무슨 응원을 추가하실 건가요?\r\n            </CheerName>\r\n            <CheerForm>\r\n                <CheerInput onChange={onChange} value={cheerName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </CheerForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default CheerRegister;\r\n  ","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport MyAnswers from \"../routes/MyAnswers\";\r\nimport AnswerDetail from \"../routes/AnswerDetail\";\r\nimport QuestionDetail from \"../routes/QuestionDetail\";\r\nimport QuestionRegister from \"../routes/QuestionRegister\";\r\nimport Questions from \"../routes/Questions\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport CheerRegister from \"../routes/CheerRegister\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? \r\n            ( <> \r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\" >\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route exact path=\"/myanswers\" >\r\n                        <MyAnswers userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/questions\" >\r\n                        <Questions userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/question/:id\" >\r\n                        <QuestionDetail />\r\n                    </Route>\r\n                    <Route exact path=\"/answer/:id\" >\r\n                        <AnswerDetail />\r\n                    </Route>\r\n                </Switch>\r\n                <Switch>\r\n                    <Route exact path=\"/questionregister\" >\r\n                        <QuestionRegister />\r\n                    </Route>\r\n                    <Route exact path=\"/cheerregister\" >\r\n                        <CheerRegister />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { authService } from \"../fBase\";\nimport AppRouter from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: Kyobo Handwriting;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user)\n      } else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  })\n  return (\n    <Container>\n      <GlobalStyle />\n      {init ? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} />\n      : \"Loading...\"\n        }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}