{"version":3,"sources":["fBase.js","components/NoteFactory.js","components/Answer.js","components/Cheer.js","routes/Home.js","components/Login.js","routes/Auth.js","components/MyAnswer.js","routes/MyAnswers.js","routes/QuestionDetail.js","routes/QuestionRegister.js","components/Question.js","components/Search.js","routes/Questions.js","routes/Navigation.js","routes/CheerRegister.js","routes/Settings.js","components/Friends.js","components/Reply.js","components/Note.js","components/Notes.js","routes/Community.js","routes/UserAnswers.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","enablePersistence","authService","auth","dbService","storage","Container","styled","div","Title","NoteTextarea","textarea","IconBox","NoteFactory","answer","userObj","setNoteState","useState","noteContent","setNoteContent","value","onChange","e","target","onClick","preventDefault","noteId","uuidv4","noteObj","createdAt","Date","now","writer","uid","writerName","displayName","receiver","userId","collection","doc","set","alert","style","width","height","transform","Question","h1","InfoContainer","CreatedAt","span","Writer","Content","EditInput","Answer","editState","setEditState","noteState","changedAnswer","setChangedAnswer","history","useHistory","lastTime","lastMinutes","Math","round","lastHours","lastDays","push","questionId","question","window","confirm","answerId","update","modifedAt","marginLeft","icon","faPencilAlt","delete","faTrashAlt","faUserPlus","userName","autoFocus","animated","CheerPhrase","Cheer","cheer","animation","useSpring","from","opacity","y","to","AddBtn","button","Home","isLoading","setISLoading","cheerList","setCheerList","randNum","setRandNum","answers","setAnswers","currentPage","setCurrentPage","getData","a","get","then","snapShot","cheerArray","docs","map","id","cheerId","data","onSnapshot","snapshot","answerArray","sort","b","useEffect","number","floor","random","getRandNum","posts","currentPosts","slice","faPlusCircle","size","LoginContainer","LoginInput","input","LoginBtn","Error","Login","code","setCode","error","setError","onSubmit","signInWithEmailAndPassword","message","config","gentle","errorAni","type","Background","Notice","Welcome","Auth","authState","setAuthState","top","molasses","welcomeAni","MyAnswer","createdTime","Year","getFullYear","Month","getMonth","DateTime","getDate","MyAnswers","questionArray","setIsLoading","myAnswers","setMyAnswers","getMyAnswers","where","myAnswerArray","myAnswer","QuestionDetail","useParams","getAnswers","answerData","QuestionName","h3","QuestionForm","form","QuestionInput","Submit","QuestionRegister","questionName","setQuestionName","questionObj","answerUsers","publicAnswer","AnswerContainer","AnswerInput","AnswerTextarea","PrivateLabel","label","AnswerBtn","isPrivate","setIsPrivate","setAnswer","longAnswer","setLongAnswer","answerValue","pathname","getAttribute","name","answerObj","editedAt","catch","console","marginBottom","SearchInput","CloseBtn","SearchBtn","Search","searchWord","setSearchWord","searchState","setSearchState","faTimes","faSearch","Questions","questions","setQuestions","getQuestions","filter","includes","NavComponent","NavBtn","NavCloseBtn","Navigation","navState","setNavState","x","reverse","reverseAnimation","onNavClick","textDecoration","faHome","faUserFriends","faQuestion","faEdit","faCog","signOut","faDoorOpen","faChevronRight","faBars","CheerName","CheerForm","CheerInput","CheerRegister","cheerName","setCheerName","cheerObj","ProfileContainer","ProfileLabel","ProfileInput","ProfileSubmitBtn","LogOutBtn","QnaContainer","QnaLabel","QnaInput","QnaSubmitBtn","Settings","refreshUser","setDisplayName","report","setReport","displayname","updateProfile","onReport","reportObj","add","marginTop","fontSize","Friends","Reply","note","Column","NoteContainer","NoteTitle","NoteWriter","NoteAnswer","Note","replyState","setReplyState","Notes","notes","setNotes","getNotes","querySnapshot","noteArray","Community","UserAnswers","AppRouter","isLoggedIn","exact","path","GlobalStyle","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","friendArray","friends","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fb8b215.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp6H94uOjFnuEvgDEoTt2V_PLtt0DBnrs\",\r\n  authDomain: \"answercommunity-328ec.firebaseapp.com\",\r\n  projectId: \"answercommunity-328ec\",\r\n  storageBucket: \"answercommunity-328ec.appspot.com\",\r\n  messagingSenderId: \"471754929471\",\r\n  appId: \"1:471754929471:web:76a974475f1d82dbf54f8a\",\r\n  measurementId: \"G-KJV9NQRBNJ\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().enablePersistence();\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div``;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 95%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NoteFactory = ({answer, userObj, setNoteState}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: answer.userId,\r\n            answer: answer.answer\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        alert(\"쪽지가 성공적으로 보내졌습니다 :)\")\r\n        setNoteState(false);\r\n        setNoteContent('');\r\n        \r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Title>쪽지</Title>\r\n            <hr />\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={onSubmit}>\r\n                <PaperAirplaneIcon style={{width:\"16px\", height:\"16px\", transform: \"rotateZ(45deg)\"}} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoteFactory;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailIcon } from \"@heroicons/react/outline\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"../fBase\";\r\nimport NoteFactory from \"./NoteFactory\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 15px 30px 15px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: white;\r\n  border-radius: 10px;\r\n  background-color: var(--main-color);\r\n  margin: 10px;\r\n  :hover {\r\n      color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst Question = styled.h1`\r\nline-height: 20px;\r\n  text-align: center;\r\n  word-break: keep-all;\r\n  transition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s all ease-in-out;\r\n  color: inherit;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Writer = styled.span`\r\n  transition: 0.3s all ease-in-out;\r\n  text-align: right;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n  font-size: 10px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  word-break: keep-all;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n  line-height: 17px;\r\n  font-size: 10px;\r\n  width: 90%;\r\n`;\r\n\r\nconst Answer = ({answer, userObj}) => {\r\n  const [editState, setEditState] = useState(false);\r\n  const [noteState, setNoteState] = useState(false);\r\n  const [changedAnswer, setChangedAnswer] = useState('');\r\n  \r\n  const history = useHistory();\r\n\r\n  const lastTime = (Date.now() - answer.createdAt) / 1000 / 60\r\n  const lastMinutes = Math.round(lastTime)\r\n  const lastHours = Math.round(lastTime / 60)\r\n  const lastDays = Math.round(lastHours / 24)\r\n\r\n  const onClickEdit = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      setEditState(!editState);\r\n      if(changedAnswer !== answer.answer) {\r\n        window.confirm(\"내용을 바꿀까요?\") \r\n        && dbService.collection(\"answers\").doc(answer.answerId).update({\r\n          answer: changedAnswer,\r\n          modifedAt: Date.now()\r\n        }) \r\n      }\r\n    }\r\n  }\r\n\r\n  const onClickDelete = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      window.confirm(\"정말 지우실건가요?\") \r\n      && dbService.collection(\"answers\").doc(answer.answerId).delete(); \r\n    }\r\n  }\r\n  \r\n  const onClickNote = e => {\r\n    e.preventDefault();\r\n    setNoteState(!noteState);\r\n  }\r\n\r\n  const onClickDetail = e => {\r\n    e.preventDefault();\r\n    history.push(`/question/${answer.questionId}`)\r\n  }\r\n\r\n  const onClickUser = e => {\r\n    e.preventDefault();\r\n    history.push(`/user/${answer.userId}`)\r\n  }\r\n\r\n  const onChange = e => {\r\n    setChangedAnswer(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Question onClick={onClickDetail}>{answer.question}</Question>\r\n      <InfoContainer>\r\n        {answer.userId === userObj.uid \r\n        ? (\r\n        <>\r\n          <IconBox onClick={onClickEdit}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faPencilAlt} />\r\n          </IconBox>\r\n          <IconBox onClick={onClickDelete}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faTrashAlt} />\r\n          </IconBox>\r\n        </>\r\n          )\r\n        : (\r\n          <>\r\n            <IconBox>\r\n              <FontAwesomeIcon icon={faUserPlus} />\r\n            </IconBox>\r\n            <IconBox onClick={onClickNote}>\r\n              <MailIcon style={{width: \"15px\", marginLeft: \"5px\"}} />\r\n            </IconBox>\r\n          </>\r\n        )}\r\n      </InfoContainer>\r\n      <CreatedAt>{lastMinutes < 60 \r\n        ? `${lastMinutes}분 전` \r\n        : lastHours < 24 \r\n          ? `${lastHours}시간 전`\r\n          : `${lastDays}일 전`\r\n        }</CreatedAt>\r\n      <Writer onClick={onClickUser}>- {answer.userName}</Writer>\r\n      <Content>\r\n        {editState \r\n        ? <EditInput autoFocus onChange={onChange} value={changedAnswer ? changedAnswer : answer.answer} />\r\n        : answer.answer}\r\n      </Content>\r\n      {noteState && <NoteFactory userObj={userObj} answer={answer} setNoteState={setNoteState} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: relative;\r\n    margin-top: 50px;\r\n    margin-bottom: 15px;\r\n    width: 90%; \r\n    height: 130px;\r\n    padding: 30px 0;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 50%;\r\n    border-radius: 10px;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nconst CheerPhrase = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    word-break: keep-all;\r\n    line-height: 25px;\r\n    font-size: 18px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Cheer = ({cheer}) => {\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            opacity: 0.5,\r\n            y: 0\r\n        }\r\n    })\r\n    return (\r\n        <Container style={animation}>\r\n            <CheerPhrase>\r\n                {cheer.cheer}\r\n            </CheerPhrase>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cheer;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Cheer from \"../components/Cheer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst ModalBackground = styled.div`\r\nbackground-color: rgba(0,0,0,0.5);\r\nposition: absolute;\r\nbox-sizing: border-box;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [isLoading, setISLoading] = useState(true);\r\n  const [cheerList, setCheerList] = useState([]);\r\n  const [randNum, setRandNum] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n    let currentPosts = 0;\r\n    currentPosts = posts.slice(0, currentPage * 5)\r\n    return currentPosts\r\n  }\r\n\r\n  const getRandNum = () => {\r\n    const number = Math.floor(Math.random() * 5);\r\n    setRandNum(number)\r\n  }\r\n\r\n  const getData = async () => {\r\n    await dbService.collection(\"cheers\").get()\r\n    .then(snapShot => {\r\n      const cheerArray = snapShot.docs.map(doc => ({\r\n        id: doc.cheerId,\r\n        ...doc.data()\r\n    }))\r\n    setCheerList(cheerArray)\r\n    })\r\n\r\n    await dbService.collection(\"answers\").onSnapshot(snapshot => {\r\n      const answerArray = snapshot.docs.map(doc => ({\r\n        id:doc.answerId,\r\n        ...doc.data(),\r\n      }));\r\n      answerArray.sort((a, b) => {\r\n        if(a.createdAt > b.createdAt) return -1;\r\n        if(a.createdAt === b.createdAt) return 0;\r\n        if(a.createdAt < b.createdAt) return 1;\r\n      });\r\n      setAnswers(answerArray)\r\n      setISLoading(false)\r\n    });\r\n  };\r\n\r\n  const addBtn = e => {\r\n    setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getRandNum();\r\n  }, [])\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading ? \"Loading...\" \r\n        : (\r\n          <>\r\n            {cheerList && <Cheer key={cheerList[randNum].cheerId} cheer={cheerList[randNum]} />}\r\n            {answers && currentPosts(answers).map(answer => (\r\n              <Answer key={answer.answerId} userObj={userObj} answer={answer} />\r\n            ))\r\n            }\r\n            <AddBtn onClick={addBtn}>\r\n              <FontAwesomeIcon icon={faPlusCircle} size=\"3x\" />\r\n            </AddBtn>\r\n          </>\r\n        )\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { authService } from \"../fBase\";\r\nimport { useState } from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\n\r\nconst Container = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 9;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst LoginBtn = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-left: 5px;\r\n  transform: rotateZ(45deg);\r\n  color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n      transform: rotateZ(45deg) scale(0.9);\r\n    }\r\n`;\r\n\r\nconst Error = styled(animated.span)`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--gold);\r\n  word-break: keep-all;\r\n  width: 80%;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(\r\n      code, code) \r\n      setCode(\"\");\r\n    } catch (error) {\r\n      if (error.message === \"The email address is badly formatted.\") {\r\n        setError(\"코드를 확인해주세요.\")\r\n      } else if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n        setError(\"정확한 코드를 입력했는지 확인해주세요.\")\r\n      }\r\n      else {\r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setCode(e.target.value)\r\n  }\r\n\r\n  const animation = useSpring({\r\n      from : {\r\n          opacity : 0\r\n      },\r\n      to: {\r\n          opacity: 1\r\n      },\r\n      config: config.gentle\r\n  })\r\n\r\n  const errorAni = useSpring({\r\n    opacity: error ? 1 : 0,\r\n    config: config.gentle\r\n  })\r\n\r\n  return (\r\n    <Container style={animation}>\r\n      <LoginContainer>\r\n        <LoginInput onChange={onChange} value={code} type=\"text\" />\r\n          <LoginBtn onClick={onSubmit}>\r\n            <PaperAirplaneIcon />\r\n          </LoginBtn>\r\n      </LoginContainer>\r\n          <Error style={errorAni}>{error}</Error>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport Login from \"../components/Login\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled(animated.h1)`\r\n  position: absolute;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n  font-size: 25px;\r\n  font-family: Jeju Myeongjo;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Welcome = styled(animated.div)`\r\n  color: white;\r\n  font-size: 14px;\r\n  opacity: 0;\r\n  transition: 1s all ease-in-out;\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [authState, setAuthState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n      top: authState ? \"150px\" : \"200px\",\r\n      config: config.molasses\r\n    })\r\n\r\n    const welcomeAni = useSpring({\r\n      opacity: !authState && 1,\r\n      config: config.molasses\r\n    })\r\n\r\n    const onClick = () => {\r\n      setAuthState(!authState)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Background onClick={onClick} />\r\n        <Title style={animation}>누군가의 서랍장</Title>\r\n        {authState \r\n        ? (\r\n        <>\r\n        <Notice>코드를 입력해주세요.</Notice>\r\n        <Login />\r\n        </>\r\n        ) : <Welcome style={welcomeAni}>입장하시려면 터치해주세요.</Welcome>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 30px 20px 30px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: white;\r\n  border-radius: 10px;\r\n  background-color: var(--main-color);\r\n  margin: 10px;\r\n  :hover {\r\n      color: var(--gold);\r\n      cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  color: white;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  word-break: keep-all;\r\n`;\r\n\r\nconst Question = styled.h1`\r\n    transition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst MyAnswer = ({answer}) => {\r\n    const createdTime = new Date(answer.createdAt);\r\n  const Year = createdTime.getFullYear();\r\n  const Month = createdTime.getMonth();\r\n  const DateTime = createdTime.getDate();\r\n\r\n  return (\r\n    <Container>\r\n        <Question>{answer.question}</Question>\r\n        <CreatedAt>\r\n            {Year} - {Month + 1 < 10 ? `0${Month + 1}` : Month + 1} - {DateTime < 10 ? `0${DateTime}` : DateTime}\r\n        </CreatedAt>\r\n        <Content>{answer.answer}</Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MyAnswer;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MyAnswer from \"../components/MyAnswer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 90vh;\r\n    width: 100%;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst MyAnswers = ({questionArray, userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [myAnswers, setMyAnswers] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n\r\n      const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const getMyAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${userObj.uid}`).get()\r\n        .then(snapshot => {\r\n            const myAnswerArray = snapshot.docs.map(doc => ({\r\n                id: doc.answerId,\r\n                ...doc.data()    \r\n            }))\r\n            setMyAnswers(myAnswerArray)\r\n            setIsLoading(!isLoading)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? \"Loading...\"\r\n            : ( \r\n            <>\r\n                <Title>\r\n                    나의 대답들\r\n                </Title>\r\n                {currentPosts(myAnswers).map(myAnswer => <MyAnswer key={myAnswer.answerId} questionArray={questionArray} answer={myAnswer} />)}\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"3x\" />\r\n                </AddBtn>\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default MyAnswers;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  font-size: 18px;\r\n  word-break: keep-all;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  width: 70%;\r\n  color: white;\r\n  font-family: Jeju myeongjo;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst QuestionDetail = ({userObj}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const { id } = useParams();\r\n  \r\n  const getAnswers = async () => {\r\n    await dbService.collection(\"answers\").where(\"questionId\", \"==\", `${id}`).get()\r\n    .then(snapShot => {\r\n      const answerData = snapShot.docs.map(doc => ({\r\n        ...doc.data()\r\n      }))\r\n      setAnswers(answerData)\r\n      setIsLoading(false);\r\n    }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAnswers();\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? \"Loading...\"\r\n      :\r\n      <>\r\n      <Question>{answers[0].question}</Question>\r\n      {answers.map(answer => <Answer answer={answer} userObj={userObj} />)}\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n  }\r\n\r\n  export default QuestionDetail;\r\n    ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst QuestionName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst QuestionForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst QuestionRegister = () => {\r\n    const [questionName, setQuestionName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setQuestionName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (questionName) {\r\n            const questionId = uuidv4();\r\n            const question = questionName;\r\n            const questionObj = {\r\n                question,\r\n                questionId,\r\n                answerUsers: [],\r\n                publicAnswer: [],\r\n            }\r\n            await dbService.collection(\"questions\").doc(question).set(questionObj)\r\n            setQuestionName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <QuestionName>\r\n                무슨 질문을 추가하실 건가요?\r\n            </QuestionName>\r\n            <QuestionForm>\r\n                <QuestionInput onChange={onChange} value={questionName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </QuestionForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default QuestionRegister;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    border: 1px solid black;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    color: white;\r\n    border-radius: 10px;\r\n    background-color: var(--main-color);\r\n    margin: 10px;\r\n    :focus-within {\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    transition: 0.3s all ease-in-out;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    font-family: Jeju Myeongjo;\r\n    font-size: 14px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst AnswerContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst AnswerInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerTextarea = styled.textarea``;\r\n\r\nconst PrivateLabel = styled.label`\r\n    transition: 0.3s all ease-in-out;\r\n    font-size: 10px;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst AnswerBtn = styled.div`\r\n    margin-left: 5px;\r\n    width: 20px;\r\n    height: 20px;\r\n    transform: rotateZ(45deg);\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        background-color: var(--main-color);\r\n        transform: scale(0.9) rotateZ(45deg);\r\n    }\r\n`;\r\n\r\nconst Question = ({userObj, question}) => {\r\n    const history = useHistory();\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [answer, setAnswer] = useState('');\r\n    const [longAnswer, setLongAnswer] = useState(false);\r\n\r\n    const onClickQuestion = (e) => {\r\n        history.push({\r\n            pathname: `/question/${e.target.getAttribute('name')}`,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer) {\r\n            const answerId = uuidv4();\r\n            const answerObj = {\r\n            question: question.question,\r\n            questionId: question.questionId,\r\n            userId: userObj.uid,\r\n            userName: userObj.displayName,\r\n            answerId,\r\n            answer,\r\n            createdAt: Date.now(),\r\n            editedAt: null,\r\n            isPrivate,\r\n        }\r\n        dbService.collection(\"answers\").doc(`${answerId}`).set(answerObj).then(\r\n            alert(\"답변이 저장되었습니다 :)\")\r\n        ).catch((error) => {\r\n            console.error(\"Submit Error : \", error)\r\n        });\r\n        setAnswer(\"\");}\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const answerValue = e.target.value\r\n        setAnswer(answerValue)\r\n    }\r\n\r\n    const onChangeCheckbox = () => {\r\n        setIsPrivate(!isPrivate)\r\n    }\r\n\r\n    const onChangeAnswerType = () => {\r\n        setLongAnswer(!longAnswer)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title onClick={onClickQuestion} name={question.questionId}>\r\n                {question.question}\r\n            </Title>\r\n            <AnswerContainer>\r\n                {longAnswer \r\n                ? ( <AnswerTextarea onChange={onChange} value={answer} name={question.question} autoFocus />\r\n                ) : (\r\n                <AnswerInput onChange={onChange} value={answer} name={question.question} type=\"text\" />\r\n                )}\r\n                <AnswerBtn onClick={onSubmit}>\r\n                    <PaperAirplaneIcon />\r\n                </AnswerBtn>\r\n            </AnswerContainer>\r\n            <AnswerContainer style={{marginBottom: \"0\"}}>\r\n                <AnswerInput onChange={onChangeAnswerType} type=\"checkbox\"/>\r\n                <PrivateLabel>길게 쓰기</PrivateLabel>\r\n                <AnswerInput onChange={onChangeCheckbox} type=\"checkbox\" />\r\n                <PrivateLabel>답변 비공개하기</PrivateLabel>\r\n            </AnswerContainer>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Question;\r\n  ","import { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 75px;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  transition: 0.3s all ease-in-out;\r\n  background-color: rgba(0,0,0,0.3);\r\n  :hover, :focus-within {\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`  \r\n  font-family: Kyobo Handwriting;\r\n  font-size: 14px;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  transition: 0.3s all ease-in-out;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 200px;\r\n  transition: 0.3s all ease-in-out;\r\n  :focus {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Search = ({ searchWord, setSearchWord }) => {\r\n    const [searchState, setSearchState] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n      setSearchWord(e.target.value)      \r\n    }\r\n\r\n    const onClick = () => {\r\n      setSearchState(!searchState)\r\n    }\r\n\r\n    return (\r\n      <>\r\n      {searchState ? \r\n        <Container>\r\n        <Title>찾으시는 질문이 있나요?</Title>\r\n        <SearchInput onChange={onChange} value={searchWord} />\r\n        <CloseBtn onClick={onClick}><FontAwesomeIcon icon={faTimes} size=\"lg\" /></CloseBtn>\r\n      </Container>\r\n      : <SearchBtn onClick={onClick}>\r\n          <FontAwesomeIcon icon={faSearch} size=\"lg\" />\r\n        </SearchBtn>\r\n      }\r\n      </>\r\n    );\r\n}\r\n  \r\nexport default Search;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Question from \"../components/Question\";\r\nimport Search from \"../components/Search\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst Questions = ({questionArray, userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([]);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n  \r\n    const getQuestions = async () => {\r\n    //     await dbService.collection(\"questions\").get()\r\n    //     .then(querySnapshot => {\r\n    //         const questionArray = querySnapshot.docs.map(doc => ({\r\n    //             id: doc.questionId,\r\n    //             ...doc.data()\r\n    //         }))\r\n            setQuestions(questionArray)\r\n            setIsLoading(!isLoading)\r\n    //     })\r\n    }\r\n\r\n    const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? \"Loading...\" \r\n            : (\r\n            <>\r\n                { currentPosts(questions.filter(question => question.question.includes(searchWord))).map(question => <Question key={question.questionId} userObj={userObj} question={question} /> )}\r\n                <Search searchWord={searchWord} setSearchWord={setSearchWord} />\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"3x\" />\r\n                </AddBtn>\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Questions;\r\n  ","import { faBars, faChevronRight, faCog, faDoorOpen, faEdit, faHome, faQuestion, faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\"\r\nimport { authService } from \"../fBase\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: auto;\r\n    width: 50px;\r\n    z-index: 9;\r\n`;\r\n\r\nconst NavComponent = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    color: white;\r\n    background-color: rgba(0,0,0, 0.2);\r\n    opacity: 1;\r\n    z-index: 9;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavBtn = styled(animated.button)`\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavCloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin: 10px;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Navigation = () => {\r\n    const [navState, setNavState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n        opacity : navState ? 1 : 0, \r\n        x: navState ? 0 : 100,\r\n        reverse: !navState,\r\n        config: config.gentle,\r\n    })\r\n\r\n    const reverseAnimation = useSpring({\r\n        opacity : navState ? 0 : 1, \r\n        x: navState ? 100 : 0,\r\n        reverse: navState,\r\n        config: config.gentle,\r\n    })\r\n\r\n    const onNavClick = () => {\r\n        setNavState(!navState)\r\n    }\r\n\r\n    const onClickLogout = () => {\r\n        authService.signOut();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {navState ?(\r\n            <Container style={animation}>\r\n                <Link to={\"/\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/community\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faUserFriends} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/questions\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faQuestion} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/myanswers\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/settings\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faCog} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <NavComponent onClick={onClickLogout}>\r\n                <FontAwesomeIcon icon={faDoorOpen} />\r\n                </NavComponent>\r\n                <NavCloseBtn style onClick={onNavClick}>\r\n                    <FontAwesomeIcon icon={faChevronRight} />\r\n                </NavCloseBtn>\r\n            </Container>\r\n            ) : (\r\n            <NavBtn style={reverseAnimation} onClick={onNavClick}>\r\n                <FontAwesomeIcon icon={faBars} size=\"lg\" />\r\n            </NavBtn>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    z-index: 999;\r\n`;\r\n\r\nconst CheerName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CheerForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CheerInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CheerRegister = () => {\r\n    const [cheerName, setCheerName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setCheerName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (cheerName) {\r\n            const cheerId = uuidv4();\r\n            const cheer = cheerName;\r\n            const cheerObj = {\r\n                cheer,\r\n                cheerId,\r\n            }\r\n            await dbService.collection(\"cheers\").doc(cheerName).set(cheerObj)\r\n            setCheerName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CheerName>\r\n                무슨 응원을 추가하실 건가요?\r\n            </CheerName>\r\n            <CheerForm>\r\n                <CheerInput onChange={onChange} value={cheerName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </CheerForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default CheerRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 150px;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ProfileLabel = styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ProfileInput = styled.input`\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileSubmitBtn = styled.button`\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst QnaContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 200px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst QnaLabel =styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst QnaInput = styled.textarea`\r\n    font-size: 12px;\r\n    width: 70%;\r\n    height: 50px;\r\n`;\r\n\r\nconst QnaSubmitBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Settings = ({ refreshUser, userObj }) => {\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [report, setReport] = useState('');\r\n\r\n    const onChange = e => {\r\n        setDisplayName(e.target.value)\r\n    }\r\n\r\n    const onChangeReport = e => {\r\n        setReport(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (displayName && userObj.displayname !== displayName) {\r\n            await userObj.updateProfile({\r\n                displayName\r\n            })\r\n            dbService.collection(\"users\").doc(`${userObj.uid}`).set({\r\n                uid: userObj.uid,\r\n                displayName: userObj.displayName\r\n            }).then(\r\n                alert(\"이름이 성공적으로 변경되었습니다 :)\")\r\n            )\r\n            refreshUser();\r\n            setDisplayName(\"\");\r\n        };\r\n    };\r\n\r\n    const onReport = async e => {\r\n        e.preventDefault();\r\n        if (report) { \r\n            const reportObj = {\r\n            report,\r\n            userId : userObj.uid,\r\n            createdAt : Date.now()\r\n        }\r\n        dbService.collection(\"reports\").add(reportObj)\r\n        alert(\"성공적으로 제출되었습니다. 감사합니다 :)\")\r\n        setReport('');\r\n    }\r\n    }\r\n\r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>\r\n                {userObj.displayName}의 서랍장\r\n            </Title>\r\n\r\n            <ProfileContainer>\r\n                <ProfileLabel>이름 바꾸기</ProfileLabel>\r\n                <ProfileInput onChange={onChange} value={displayName} type=\"text\" />\r\n                <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\"}}>이름을 바꿔도, 친구들은 이전 이름을 알 수 있습니다.</ProfileLabel>\r\n                <ProfileSubmitBtn onClick={onSubmit}>변경하기</ProfileSubmitBtn>\r\n            </ProfileContainer>\r\n\r\n            <QnaContainer>\r\n                <QnaLabel>문의하기 & 버그리포트</QnaLabel>\r\n                <QnaInput onChange={onChangeReport} value={report}type=\"text\" />\r\n                <QnaSubmitBtn onClick={onReport} >문의하기</QnaSubmitBtn>\r\n            </QnaContainer>\r\n            <LogOutBtn onClick={onLogOut}>Logout</LogOutBtn>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Settings;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService, dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst Friends = ({userObj}) => {\r\n\r\n    return (\r\n        <Container>\r\n            <Title>친구들</Title>\r\n            <hr />\r\n            <div></div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 95%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Reply = ({note, userObj}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: note.writer,\r\n            answer: note.noteContent\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        alert(\"쪽지가 성공적으로 보내졌습니다 :)\")\r\n        setNoteContent('');\r\n        \r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={onSubmit}>\r\n                <PaperAirplaneIcon style={{width:\"16px\", height:\"16px\", transform: \"rotateZ(45deg)\"}} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Reply;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Reply from \"./Reply\";\r\n\r\nconst Column = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n    color: rgba(0,0,0,0.5);\r\n    transition: 0.5s all ease-in-out;\r\n    :hover, :focus-within {\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst NoteContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NoteTitle = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst NoteWriter = styled.span`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst NoteAnswer = styled.span`\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst Note = ({note, userObj}) => {\r\n    const [replyState, setReplyState] = useState(false);\r\n\r\n    const onClickReply = () => {\r\n        setReplyState(!replyState)\r\n    }\r\n    return (\r\n        <Column key={note.noteId}>\r\n            <NoteAnswer>'{note.answer}'에서 온 쪽지입니다.\r\n            </NoteAnswer>\r\n            <NoteContainer onClick={onClickReply}>\r\n            <NoteTitle>\r\n                {note.noteContent}\r\n            </NoteTitle>\r\n            <NoteWriter>\r\n                - {note.writerName}\r\n            </NoteWriter>\r\n            </NoteContainer>\r\n            {replyState && <Reply note={note} userObj={userObj} />}\r\n        </Column>\r\n    )\r\n}\r\n\r\nexport default Note;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport Note from \"./Note\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst Notes = ({userObj}) => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const getNotes = async () => {\r\n        await dbService.collection(\"notes\").where(\"receiver\", \"==\", `${userObj.uid}`).onSnapshot(querySnapshot => {\r\n            const noteArray = querySnapshot.docs.map(doc => ({\r\n                id: doc.noteId,\r\n                ...doc.data(),\r\n            }))\r\n            setNotes(noteArray);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? \"Loading...\"\r\n            : (\r\n            <>\r\n                <Title>쪽지함</Title>\r\n                <hr />\r\n\r\n                {notes.map(note => (\r\n                    <>\r\n                        <Note userObj={userObj} note={note} />\r\n                    </>\r\n                ))}\r\n            </>\r\n                )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notes;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Friends from \"../components/Friends\";\r\nimport Notes from \"../components/Notes\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Community = ({userObj}) => {\r\n    return (\r\n        <Container>\r\n            <Notes userObj={userObj} />\r\n            <Friends userObj={userObj} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Community;","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Writer = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-family: Jeju myeongjo;\r\n    margin-top: 40px;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nconst UserAnswers = ({userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [answers, setAnswers] = useState([]);\r\n    const { id } = useParams();\r\n    \r\n    const getAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${id}`).get()\r\n        .then(snapShot => {\r\n          const answerData = snapShot.docs.map(doc => ({\r\n            ...doc.data()\r\n          }))\r\n          setAnswers(answerData)\r\n          setIsLoading(false);\r\n        }\r\n        )\r\n      }\r\n    \r\n      useEffect(() => {\r\n        getAnswers();\r\n      })\r\n\r\n    return (\r\n        <Container>\r\n        {isLoading ? \"Loading...\"\r\n        :\r\n        <>\r\n        <Writer>{answers[0].userName}의 대답들</Writer>\r\n        {answers.map(answer => <Answer answer={answer} userObj={userObj} />)}\r\n        </>\r\n        }\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default UserAnswers;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport MyAnswers from \"../routes/MyAnswers\";\r\nimport AnswerDetail from \"../routes/AnswerDetail\";\r\nimport QuestionDetail from \"../routes/QuestionDetail\";\r\nimport QuestionRegister from \"../routes/QuestionRegister\";\r\nimport Questions from \"../routes/Questions\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport CheerRegister from \"../routes/CheerRegister\";\r\nimport Settings from \"../routes/Settings\";\r\nimport Community from \"../routes/Community\";\r\nimport UserAnswers from \"../routes/UserAnswers\";\r\n\r\nconst AppRouter = ({ questionArray, isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? \r\n            ( <> \r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\" >\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route exact path=\"/community\" >\r\n                        <Community userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/myanswers\" >\r\n                        <MyAnswers questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/questions\" >\r\n                        <Questions questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/question/:id\" >\r\n                        <QuestionDetail userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/user/:id\" >\r\n                        <UserAnswers userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\" >\r\n                        <Settings refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                </Switch>\r\n                <Switch>\r\n                    <Route exact path=\"/questionregister\" >\r\n                        <QuestionRegister />\r\n                    </Route>\r\n                    <Route exact path=\"/cheerregister\" >\r\n                        <CheerRegister />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { authService, dbService } from \"../fBase\";\nimport AppRouter from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: Kyobo Handwriting;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const questionArray = [\n    {\n        question : \"결정을 잘 하시나요?\",\n        questionId : \"b8f300df-0fff-4fd0-a066-3c5bafe6d024\"\n    }, \n    {\n        question: \"괜찮아요?\",\n        questionId: \"ce35b720-8cbf-43af-aae6-914403c99789\"\n    },\n    {\n        question: \"그리운가요?\",\n        questionId: \"9428cfbc-2a42-48aa-8e2f-42700e928af4\"\n    },\n    {\n        question: \"꼭 가보고 싶은 곳이 있나요?\",\n        questionId: \"16a9a4c6-d1d9-4977-97ec-1fca76dc7b9c\"\n    },\n    {\n        question: \"꿈이 있나요?\",\n        questionId: \"00d1e249-bd6a-452c-81a4-458b30640945\"\n    },\n    {\n        question: \"누군가에게 말하기 어려운 것이 있다면 여기에 적어보세요.\",\n        questionId: \"f08c3f4a-13b7-4d6a-bf2b-901df73e5751\"\n    },\n    {\n        question: \"느낌을 사기위해 무언가를 지불해본 적이 있나요?\",\n        questionId: \"09770edd-b174-44de-a314-95a83eaa613e\"\n    },\n    {\n        question: \"답답한가요?\",\n        questionId: \"840ce86f-8a9e-444d-b1c1-8dd589c200ab\"\n    },\n    {\n        question: \"당신께 사랑은 무엇인가요?\",\n        questionId: \"4adc09d4-5a43-45b9-a525-d77454fa70a5\"\n    },\n    {\n        question: \"당신께 행복은 무엇인가요?\",\n        questionId: \"4f24a89a-3155-435b-84cb-82c731037942\"\n    },\n    {\n        question: \"당신께도 질문이 있나요?\",\n        questionId: \"88b121a4-e8ab-4d2d-99d3-7fec0876d439\"\n    },\n    {\n        question: \"당신은 누구인가요?\",\n        questionId: \"fa92f9e9-853a-4332-8bc6-79567fa23db5\"\n    },\n    {\n        question: \"당신은 어떤 답장을 쓰고 싶으신가요?\",\n        questionId: \"38beaf3b-90f3-4463-bfed-b5f416459280\"\n    },\n    {\n        question: \"대화가 힘들때가 있나요?\",\n        questionId: \"e459723f-00cb-43c5-8486-6d021433aea1\"\n    },\n    {\n        question: \"두려운가요?\",\n        questionId: \"e4741c08-ad4b-4328-952f-755db960fd38\"\n    },\n    {\n        question: \"모순이 있나요?\",\n        questionId: \"f8e4799a-aa4a-4b04-8e9d-667fb1a1d512\"\n    },\n    {\n        question: \"무엇이라 불리고 싶나요?\",\n        questionId: \"b6e8e867-1483-4249-89c1-9bb4a32517a8\"\n    },\n    {\n        question: \"밤을 좋아하나요?\",\n        questionId: \"d1e623a3-1d3e-45fb-9f3a-e737d9675766\"\n    },\n    {\n        question: \"번외가 있나요?\",\n        questionId: \"c7209c46-b4c0-40d5-ad1c-c420ccb0b9dc\"\n    },\n    {\n        question: \"사랑이란 무엇일까요?\",\n        questionId: \"2075b151-ed2d-4813-953e-a59a1f2d5bc6\"\n    },\n    {\n        question: \"사랑하고 있나요?\",\n        questionId: \"a06a2a77-1d1d-434c-a25d-38b6b4a5d2da\"\n    },\n    {\n        question: \"사랑한다고 말해보세요.\",\n        questionId: \"085e6ddd-7498-4a67-a894-1c42acc1c36a\"\n    },\n    {\n        question: \"생각보다 중요하지 않았던 것이 있었나요?\",\n        questionId: \"1f726ded-2c33-4803-9c5c-23cb63045667\"\n    },\n    {\n        question: \"솔직한가요?\",\n        questionId: \"109366f3-5429-4764-af23-e941e06b6e56\"\n    },\n    {\n        question: \"어리광부리고 싶다면 여기에 부려보세요.\",\n        questionId: \"d79dcd7f-e346-4b8d-9c96-50e8841efe54\"\n    },\n    {\n        question: \"어릴 때 무얼하고 놀았는지 기억나나요?\",\n        questionId: \"4303d851-1cb9-4e99-bfa5-a8735da2914a\"\n    },\n    {\n        question: \"얼었던 것이 녹으면 무엇이 되나요?\",\n        questionId: \"02a8706b-03c3-446c-9500-df3dc8fae4b1\"\n    },\n    {\n        question: \"오늘 하늘은 무슨 색이었나요?\",\n        questionId: \"55b33e10-36a5-4d24-af30-c8fa8bf13113\"\n    },\n    {\n        question: \"용서할 수 있나요?\",\n        questionId: \"640d40e5-8bee-49a8-ac49-f0879defa381\"\n    },\n    {\n        question: \"이끌려본적이 있나요?\",\n        questionId: \"ca706d16-6248-42f2-9826-77a9d8f7f94e\"\n    },\n    {\n        question: \"이상형을 그려보세요.\",\n        questionId: \"f11f02b9-88fb-4632-bdde-f824df368199\"\n    },\n    {\n        question: \"이해받고 있나요?\",\n        questionId: \"69b10746-2ee8-4941-b4d6-b943d6af7960\"\n    },\n    {\n        question: \"잊었던 단어가 있나요?\",\n        questionId: \"2d6d5007-4a8b-4176-8b1b-9556d66a2b05\"\n    },\n    {\n        question: \"정말 소통하고 있나요?\",\n        questionId: \"5dc5d43e-9642-4272-a2cc-5724ef9e95f2\"\n    },\n    {\n        question: \"좋아하는 공간이 있나요?\",\n        questionId: \"5690fbae-3972-4dfc-a21c-d6a3be147b9c\"\n    },\n    {\n        question: \"즐거웠던 순간을 적어보세요.\",\n        questionId: \"4e996e57-2dd3-47a2-b34d-d996678d3f25\"\n    },\n    {\n        question: \"지금, 무슨 생각을 하시나요?\",\n        questionId: \"e57084db-75c3-419c-b34b-fc42088e8d48\"\n    },\n    {\n        question: \"지금, 무엇을 원하시나요?\",\n        questionId: \"4ddb5a9b-415a-44f6-83a6-c86455b2ca7a\"\n    },\n    {\n        question: \"지금, 어떤 감정을 느끼시나요?\",\n        questionId: \"1fe19a57-445c-49ec-bc6b-d5e4aaed4410\"\n    },\n    {\n        question: \"쫓기고 있나요?\",\n        questionId: \"b1d88547-3c58-4a79-a4a1-a9cca797b06f\"\n    },\n    {\n        question: \"큰 일이 닥친다면?\",\n        questionId: \"c483234f-4d47-4786-b28d-29633b1f7644\"\n    },\n    {\n        question: \"편지를 받은 기억이 있나요?\",\n        questionId: \"88b4306d-91b8-43cc-ae82-67457d41d4e3\"\n    },\n    {\n        question: \"표현하지 못하는 것이 있나요?\",\n        questionId: \"a4be7cc2-a279-4715-bbbd-7e5a72f9d20c\"\n    },\n    {\n        question: \"힘들었던 순간은 여기에 두고 가도록해요.\",\n        questionId: \"e7ffd573-2901-45d5-9c79-42bebaa1ea4b\"\n    },\n]\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        let friendArray;\n        dbService.collection(\"friends\").doc(`${user.uid}`).get()\n        .then(snapshot => {\n            friendArray = snapshot.data()\n            setUserObj({\n                uid: user.uid,\n                friends : (friendArray \n                    ? friendArray.friends \n                    : null),\n                displayName: (user.displayName ? user.displayName : \"익명\"),\n                updateProfile: (args) => user.updateProfile(args),\n              })\n            setInit(true)\n        })\n      } else {\n        setUserObj(null)\n        setInit(true)\n      }\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <Container>\n      <GlobalStyle />\n      {init ? <AppRouter questionArray={questionArray} isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser = {refreshUser} />\n      : \"Loading...\"\n        }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}