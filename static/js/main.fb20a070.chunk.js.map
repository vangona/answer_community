{"version":3,"sources":["fBase.js","components/Loading.js","components/Messaginginit.js","components/NoteFactory.js","components/Answer.js","components/DB/CheerDB.js","components/Cheer.js","routes/Home.js","components/TermModal.js","components/Login.js","routes/Auth.js","components/ProfileBio.js","routes/MyAnswers.js","routes/QuestionDetail.js","routes/QuestionRegister.js","components/Question.js","components/Search.js","routes/Questions.js","routes/Navigation.js","routes/Settings.js","components/Friends.js","routes/Community.js","routes/UserAnswers.js","routes/SignOut.js","components/DB/Sponsor.js","hooks/UseInterval.js","music/Soul and Mind - E's Jammy Jams.mp3","routes/Credit.js","components/NotesList.js","routes/NotesUser.js","components/NoteDetail.js","routes/NotesAnswer.js","routes/Manual.js","components/comment/Comment.js","routes/AnswerDetail.js","components/NotFound.js","components/Router.js","components/DB/ErrorDB.js","components/ErrorPage.js","components/ErrorBoundary.js","components/App.js","serviceWorkerRegistration.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","messaging","isSupported","auth","dbService","firestore","storage","LoadingBox","styled","div","Blink","keyframes","Skew","DotBlink","Title","h1","Bulb","img","Drawer","Dot","AnswerCount","span","comment","Loading","useState","num","setNum","answerCount","setAnswerCount","useEffect","localStorage","getItem","JSON","parse","Math","floor","random","className","src","alt","setToken","a","console","log","getToken","then","catch","err","token","onMessage","payload","alert","notification","body","Container","NoteTextarea","textarea","IconBox","NoteFactory","answer","userObj","setNoteState","noteContent","setNoteContent","onSubmit","e","preventDefault","noteId","uuidv4","noteObj","createdAt","Date","now","writer","uid","writerName","displayName","receiver","userId","answerId","isRead","collection","doc","set","get","snapshot","data","axios","post","headers","value","onChange","target","onClick","window","confirm","slice","icon","faSave","Question","InfoContainer","CreatedAt","WriterContainer","Writer","Content","ReplyIcon","PrivateBtn","button","EditInput","PaperClip","Answer","refreshFriends","refreshBookmarks","id","useParams","editState","setEditState","noteState","changedAnswer","setChangedAnswer","history","useHistory","Time","year","getFullYear","month","getMonth","day","getDate","date","lastTime","lastMinutes","round","lastHours","lastDays","onClicekFriend","update","friends","userName","onClickBookmark","bookmarks","bookmarkCount","FieldValue","increment","onDeleteBookmark","filter","el","onClickPrivate","isPrivate","style","margin","left","Array","map","index","faBookmark","push","questionId","question","editedAt","marginLeft","faPencilAlt","delete","answers","faTrashAlt","includes","faUserFriends","faBookReader","faBookOpen","faReply","transform","autoFocus","CheerComment","animated","CloseBtn","RefreshBtn","CheerPhrase","Cheer","cheer","setCheer","cheerState","setCheerState","animation","useSpring","from","opacity","y","to","minHeight","padding","color","faChevronUp","faChevronDown","faSyncAlt","RandomBtn","AddBtn","LastAnswer","DiceContainer","Dice","Notice","Home","isLoading","setISLoading","setAnswers","currentPage","setCurrentPage","diceState","setDiceState","randomState","setRandomState","makeRandArray","randArray","i","l","getData","setTimeout","where","onSnapshot","answerArray","docs","sort","b","orderBy","limitToLast","isFirst","posts","currentPosts","faDice","size","faPlusCircle","Terms","TermModal","closeModal","faCheck","AuthConatiner","LoginContainer","LoginLabel","label","LoginInput","input","LoginBtn","PasswordContainer","PasswordLabel","PasswordInput","PasswordBtn","Error","Login","setCodeState","codeState","code","setCode","password","setPassword","error","setError","modalState","setModalState","signInWithEmailAndPassword","message","config","gentle","errorAni","width","type","Background","AuthBox","Welcome","Auth","authState","setAuthState","top","molasses","welcomeAni","EditBtn","BioContainer","BioTitle","BioLine","hr","BioContent","BioTextarea","TextCounter","ProfileBio","refreshBio","isProfile","setIsLoading","bio","setBio","count","setCount","onClickEdit","getBio","maxLength","WriteBtn","MyAnswers","myAnswers","setMyAnswers","getMyAnswers","myAnswerArray","myAnswer","textDecoration","faEdit","QuestionDetail","getAnswers","snapShot","answerData","QuestionContainer","CheerContainer","QuestionName","h3","QuestionForm","form","QuestionInput","Submit","CheerName","CheerForm","CheerInput","CodeContainer","CodeInput","CodeBtn","CodeDiv","QuestionRegister","questionName","setQuestionName","cheerName","setCheerName","specific","setSpecific","questionObj","answerUsers","publicAnswer","onSubmitCheer","cheerId","cheerObj","makeCode","chars","randomstring","rnum","substring","createUserWithEmailAndPassword","newUserObj","user","isPassword","initCode","updateProfile","signOut","AnswerContainer","AnswerInput","AnswerCheckbox","AnswerTextarea","PrivateLabel","AnswerBtn","setIsPrivate","setAnswer","longAnswer","setLongAnswer","answerValue","pathname","getAttribute","name","answerObj","marginBottom","for","SearchContainer","SearchInput","SearchSubmit","SearchBtn","SearchBtnLabel","Search","onSearch","searchWord","setSearchWord","searchState","setSearchState","fromHome","faTimes","faSearch","BackBtn","LastQuestion","Questions","questionArray","questions","setQuestions","getQuestions","countData","goBack","faChevronLeft","NavComponent","NavTitle","NavBtn","NavCloseBtn","Navigation","navState","setNavState","x","reverse","default","reverseAnimation","onNavClick","faHome","faInbox","faCog","faChevronRight","ProfileContainer","ProfileLabel","ProfileForm","PasswordForm","ProfileBox","ProfileInput","ProfileSubmitBtn","BtnContainer","ManualBtn","CreditBtn","LogOutBtn","QnaContainer","QnaLabel","QnaInput","QnaSubmitBtn","PurchaseBtn","Crown","Settings","refreshUser","setDisplayName","email","setEmail","report","setReport","nameState","setNameState","emailState","setEmailState","passwordState","setPasswordState","passwordCheck","setPasswordCheck","displayname","onSubmitEmail","currentUser","updateEmail","onSubmitPassword","updatePassword","onReport","reportObj","add","required","marginTop","fontSize","faCrown","href","FriendList","Friend","FriendRight","FriendName","FriendCode","FriendIcon","Friends","getFriendLoading","loading","setFriends","friendsId","SetFriendsId","getFriends","friendArray","friendIdArray","forEach","onClickUser","onDeleteFriend","friend","newFriends","toLowerCase","Community","noteData","friendLoading","setFriendLoading","someoneAnswers","setSomeoneAnswers","getSomeoneAnswers","someoneAnswerArray","element","UserAnswers","SignOut","Sponsor","thinkShare","sponsor","useInterval","callback","delay","intervalRef","useRef","savedCallback","current","setInterval","clearInterval","PlayBox","PlayInput","PlayBtnBox","PlayBtn","ThanksContainer","ThanksTitle","h2","ThanksName","Comment","Name","White","Thankyou","Credit","init","setInit","speed","setSpeed","setScroll","commentState","setCommentState","Audio","bgm","bgmJazz","onClickPlay","isMobile","play","pause","scrollY","innerHeight","document","scrollHeight","scriptPlay","scrollBy","behavior","bottom","max","min","scrollTo","faBackward","faPlay","faPause","faForward","thinkperson","transitionDelay","NoteTitle","NoteContent","NoteWriter","NoteTime","NotesList","faCommentAlt","NotesContainer","NotesAnswer","setUserName","notesCategory","setNotesCategory","querySnapshot","notesCategoryData","notesCategoryAnswer","notesArray","category","NoteDetail","alignSelf","notesData","setNotesData","setQuestion","note","Farewell","ManualPic","Page","StartBtn","NextBtn","PrevBtn","Manual","refreshFirst","page","setPage","onClickStart","right","IconContainer","Icon","editContent","setEditContent","dttm","faTrash","NotesConatiner","AnswerDetail","notes","setNotes","getNotes","getAnswer","NotFound","class","AppRouter","isLoggedIn","exact","path","NotesUser","ErrorComment","Pic","ErrorPage","location","replace","ErrorBoundary","props","state","hasError","this","children","React","Component","GlobalStyle","createGlobalStyle","reset","App","setUserObj","bioData","setBioData","requestToken","setItem","stringify","querySelector","onAuthStateChanged","navigator","userData","args","Boolean","isLocalhost","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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GACVmD,OAAS,gBAEb,CACInD,QAAU,odACVmD,OAAS,gBAEb,CACInD,QAAU,mCACVmD,OAAS,SAEb,CACInD,QAAU,yGACVmD,OAAS,sBAEb,CACInD,QAAU,8GACVmD,OAAS,sBAEb,CACInD,QAAU,kCACVmD,OAAS,sBAEb,CACInD,QAAU,qHACVmD,OAAS,MAEb,CACInD,QAAU,6JACVmD,OAAS,sBAEb,CACInD,QAAU,oGACVmD,OAAS,sBAEb,CACInD,QAAU,8BACVmD,OAAS,WAEb,CACInD,QAAU,iGACVmD,OAAS,4BAEb,CACInD,QAAU,GACVmD,OAAS,uBAGjB,KAAO,CACH,CACInD,QAAU,GACVmD,OAAS,sBAEb,CACInD,QAAU,kNACVmD,OAAS,cAEb,CACInD,QAAU,uIACVmD,OAAS,sBAEb,CACInD,QAAU,oRACVmD,OAAS,sBAEb,CACInD,QAAU,kCACVmD,OAAS,wCAEb,CACInD,QAAU,SACVmD,OAAS,gBAEb,CACInD,QAAU,kFACVmD,OAAS,gBAEb,CACInD,QAAU,8CACVmD,OAAS,sBAEb,CACInD,QAAU,8CACVmD,OAAS,sBAEb,CACInD,QAAU,+CACVmD,OAAS,gBAEb,CACInD,QAAU,uEACVmD,OAAS,OAEb,CACInD,QAAU,kEACVmD,OAAS,sBAEb,CACInD,QAAU,uDACVmD,OAAS,sBAEb,CACInD,QAAU,2FACVmD,OAAS,MAEb,CACInD,QAAU,mNACVmD,OAAS,sBAEb,CACInD,QAAU,2GACVmD,OAAS,UAEb,CACInD,QAAU,2JACVmD,OAAS,gBAEb,CACInD,QAAU,4FACVmD,OAAS,sBAEb,CACInD,QAAU,sVACVmD,OAAS,sBAEb,CACInD,QAAU,iXACVmD,OAAS,sBAEb,CACInD,QAAU,kEACVmD,OAAS,gBAEb,CACInD,QAAU,qFACVmD,OAAS,mBAEb,CACInD,QAAU,yJACVmD,OAAS,sBAEb,CACInD,QAAU,6FACVmD,OAAS,SAEb,CACInD,QAAU,qDACVmD,OAAS,gBAEb,CACInD,QAAU,2GACVmD,OAAS,sBAEb,CACInD,QAAU,8KACVmD,OAAS,8CAEb,CACI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","file":"static/js/main.fb20a070.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp6H94uOjFnuEvgDEoTt2V_PLtt0DBnrs\",\r\n  authDomain: \"answercommunity-328ec.firebaseapp.com\",\r\n  projectId: \"answercommunity-328ec\",\r\n  storageBucket: \"answercommunity-328ec.appspot.com\",\r\n  messagingSenderId: \"471754929471\",\r\n  appId: \"1:471754929471:web:76a974475f1d82dbf54f8a\",\r\n  measurementId: \"G-KJV9NQRBNJ\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app();\r\n}\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const messaging = firebase.messaging.isSupported() ? firebase.messaging() : null;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst LoadingBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    color: white;\r\n`;\r\n\r\nconst Blink = keyframes`\r\n    0% {\r\n        opacity: 100%;\r\n    }\r\n    50% {\r\n        opacity: 30%;\r\n    }\r\n    100% {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst Skew = keyframes`\r\n    0% {\r\n        transform: skew(0)\r\n    }\r\n    33% {\r\n        transform: skew(-1deg)\r\n    }\r\n    66% {\r\n        transform: skew(1deg)\r\n    }\r\n    100% {\r\n        transform: skew(0)\r\n    }\r\n`;\r\n\r\nconst DotBlink = keyframes`\r\n    0% {\r\n        opacity: 0%;\r\n    }\r\n    20% {\r\n        opacity: 0%;\r\n    }\r\n    40% {\r\n        opacity: 100%;\r\n    }\r\n    60% {\r\n        opacity: 100%;\r\n    }\r\n    80% {\r\n        opacity: 100%;\r\n    }\r\n    100% {\r\n        opacity: 100%\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    position: absolute;\r\n    bottom: 60vh;\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Bulb = styled.img`\r\n    position: absolute;\r\n    height: 35vh;\r\n    width: auto;\r\n    top: 0;\r\n    animation: ${Blink} 2s ease-in-out infinite;\r\n`;\r\n\r\nconst Drawer = styled.img`\r\n    position: absolute;\r\n    animation: ${Skew} 2s ease-in-out infinite ;\r\n    height: 35vh;\r\n    width: auto;\r\n    opacity: 80%;\r\n    bottom: 25vh;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst Dot = styled.div`\r\n    animation: ${DotBlink} 2s infinite;\r\n    :nth-child(2) {\r\n        animation-delay: 0.5s;\r\n    }\r\n    :last-child {\r\n        animation-delay: 1s;\r\n    }\r\n`;\r\n\r\nconst AnswerCount = styled.span`\r\n    position: absolute;\r\n    bottom: 15vh;\r\n`;\r\n\r\nconst comment = [\r\n    \"서랍장 문여는 중\", \r\n    \"사람들이 쓴 답변 모으는 중\", \r\n    \"주인장이 편지 쓰는 중\", \r\n    \"서랍장 바닥 닦는 중\", \r\n    \"주인장이 몰래 먹던 야식 감추는 중\", \r\n    \"전구 닦는 중\",\r\n    \"주인장 자세 잡는 중\",\r\n    \"서랍장 손잡이 조정 중\",\r\n    \"전구 밝기 조절 중\",\r\n    \"명예의 전당 기록 중\",\r\n    \"의자 높이 조정 중\",\r\n    ]\r\n\r\nconst Loading = () => {\r\n    const [num, setNum] = useState(\"\");\r\n    const [answerCount, setAnswerCount] = useState('');\r\n\r\n    useEffect(() => {\r\n        localStorage.getItem(\"drawerAnswers\") && setAnswerCount(JSON.parse(localStorage.getItem(\"drawerAnswers\")));\r\n        setNum(Math.floor(Math.random()*comment.length));\r\n    }, [])\r\n\r\n    return (\r\n       <LoadingBox>\r\n           <Bulb className=\"loading__bulb\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/loading_bulb.png\" alt=\"\" />\r\n           <Title>\r\n               {comment[num]}<Dot>.</Dot><Dot>.</Dot><Dot>.</Dot>\r\n            </Title>\r\n           <Drawer className=\"loading__drawer\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/loading_drawer.png\" alt=\"\" />\r\n           <AnswerCount>지금까지 {answerCount}칸의 서랍장이 정리되었습니다.</AnswerCount>\r\n       </LoadingBox>\r\n    )\r\n}\r\n\r\nexport default Loading;","import firebase from \"firebase\"\r\n\r\nexport const setToken = async () => {\r\n    if (!firebase.messaging.isSupported()) {\r\n        console.log(\"isSupported: \", firebase.messaging.isSupported())\r\n        return null;\r\n    } else {\r\n        const messaging = firebase.messaging();\r\n        const token = await messaging.getToken()\r\n        .then(() => {\r\n            return messaging.getToken()\r\n        }).catch((err) => {\r\n            console.log('error : ', err);\r\n            return null;\r\n        })\r\n        .then((token) => {\r\n            messaging.onMessage(payload => {\r\n                alert(payload.notification.body)\r\n            })\r\n            return token;\r\n        })\r\n        .catch((err) => {\r\n            console.log('error : ', err);\r\n            return null;\r\n        })\r\n        return token;\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.div``;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 100%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst NoteFactory = ({answer, userObj, setNoteState}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: answer.userId,\r\n            answer: answer.answer,\r\n            answerId: answer.answerId,\r\n            isRead: false,\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        await dbService.collection(\"users\").doc(`${answer.userId}`).get()\r\n        .then(snapshot => {\r\n            const data = snapshot.data()\r\n            const token = data.token\r\n            axios.post(\"https://fcm.googleapis.com/fcm/send\", {\r\n                \"to\": `${token}`,\r\n                \"notification\": {\r\n                    \"title\": `${answer.answer}에 메모가 달렸습니다.`,\r\n                    \"body\": `${noteContent}`\r\n                }\r\n            }, \r\n            {\r\n                headers:  \r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"key=AAAAbdbI9T8:APA91bHBHA83-rpRKMQChKE7FcUkvFSzbZ1qHOBZhrXNxBdo6U2cfB89xqpbsLIjYbBHVyGhOMFWwZNlRMF0I9cAshUvrkhyWDZqMcjgx5FzuAL3P9IK2YivTtQfdvygSIAhk9HVM30K\"\r\n                }\r\n            })\r\n        })\r\n        alert(\"메모가 성공적으로 남겨졌습니다 :)\")\r\n        setNoteState(false);\r\n        setNoteContent('');\r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Title>답변에 메모 달기</Title>\r\n            <hr />\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={(e) => {\r\n                if(noteContent && window.confirm(`${answer.answer.slice(0, 9)}${answer.answer.length > 10 ? '...' : ''}에 메모를 달아놓을까요?`)){\r\n                    onSubmit(e)\r\n                }\r\n                \r\n            }}>\r\n                <FontAwesomeIcon icon={faSave} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoteFactory;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBookmark, faBookOpen, faBookReader,  faPencilAlt, faReply, faSave, faTrashAlt, faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService, firebaseInstance } from \"../fBase\";\r\nimport NoteFactory from \"./NoteFactory\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 15px 30px 15px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: black;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n  opacity: 70%;\r\n  transition: 0.3s all ease-in-out;\r\n  transform: skewX(-0.5deg);\r\n  z-index: 1;\r\n  :hover {\r\n      color: var(--main-color);\r\n      transform: skew(0, 0);\r\n      opacity: 95%;\r\n  }\r\n`;\r\n\r\nconst Question = styled.h1`\r\n  line-height: 20px;\r\n  text-align: center;\r\n  word-break: keep-all;\r\n  transition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 0.9rem;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.1s all ease-in-out;\r\n  color: black;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  font-size: 0.8rem;\r\n  z-index: 9;\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.5s all ease-in-out;\r\n  color: black;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 0.6rem;\r\n`;\r\n\r\nconst WriterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  color: black;\r\n  z-index: 9;\r\n`;\r\n\r\nconst Writer = styled.span`\r\n  transition: 0.3s all ease-in-out;\r\n  text-align: right;\r\n  width: auto;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n  font-size: 0.7rem;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  white-space: pre-wrap;\r\n  text-indent: 5px;\r\n  line-height: 160%;\r\n  background-color: white;\r\n  opacity: inherit;\r\n  border-radius: 10px;\r\n  word-break: keep-all;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 0.8rem;\r\n  color: black;\r\n  box-sizing: border-box;\r\n  transition: all 0.5s ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  color: inherit;\r\n  transition: 0.5s all ease-in-out;\r\n  z-index: 9;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ReplyIcon = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  color: inherit;\r\n  transition: 0.5s all ease-in-out;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  font-size: 0.8rem;\r\n  z-index: 9;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst PrivateBtn = styled.button`\r\n  font-family: Kyobo Handwriting;\r\n  background: none;\r\n  border: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n  line-height: 17px;\r\n  font-size: 0.7rem;\r\n  width: 90%;\r\n  min-height: 100px;\r\n  z-index: 9;\r\n`;\r\n\r\nconst PaperClip = styled.div`\r\n  display: flex;\r\n  gap: 3px;\r\n  position: absolute;\r\n  top: -7px;\r\n  left: 0;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Answer = ({answer, userObj, refreshFriends, refreshBookmarks}) => {\r\n  const { id } = useParams();\r\n  const [editState, setEditState] = useState(false);\r\n  const [noteState, setNoteState] = useState(false);\r\n  const [changedAnswer, setChangedAnswer] = useState('');\r\n  \r\n  const history = useHistory();\r\n\r\n  const Time = new Date(answer.createdAt) \r\n  const year = Time.getFullYear();\r\n  const month = Time.getMonth() + 1;\r\n  const day = Time.getDate();\r\n  const date = `${year}년 ${month < 10 ? \"0\"+month : month}월 ${day < 10 ? \"0\"+day : day}일`\r\n  const lastTime = (Date.now() - answer.createdAt) / 1000 / 60\r\n  const lastMinutes = Math.round(lastTime)\r\n  const lastHours = Math.round(lastTime / 60)\r\n  const lastDays = Math.round(lastHours / 24)\r\n\r\n  const onClickEdit = e => {\r\n    e.preventDefault();\r\n    setChangedAnswer(answer.answer)\r\n    if (answer.userId === userObj.uid) {\r\n      setEditState(!editState);\r\n      if(changedAnswer !== answer.answer & editState === true) {\r\n        window.confirm(\"내용을 수정하시겠어요?\") \r\n        && dbService.collection(\"answers\").doc(answer.answerId).update({\r\n          answer: changedAnswer,\r\n          editedAt: Date.now()\r\n        }) \r\n      }\r\n    }\r\n  }\r\n\r\n  const onClickDelete = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      window.confirm(\"정말 지우실건가요?\") && \r\n      dbService.collection(\"answers\").doc(`${answer.answerId}`).delete().then(() => {\r\n        dbService.collection(\"main\").doc(\"counts\").update({\r\n          answers: firebaseInstance.firestore.FieldValue.increment(-1)\r\n        })\r\n        alert('삭제되었습니다.')\r\n      })\r\n    }\r\n  }\r\n\r\n  const onClicekFriend = async (answer) => {\r\n    await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n      friends: [...userObj.friends, answer.userId]\r\n    })\r\n    .then(() => {\r\n      refreshFriends([...userObj.friends, answer.userId])\r\n      alert(`${answer.userName}님을 서랍장에 추가했습니다.`)\r\n    })\r\n  }\r\n  \r\n  const onClickNote = e => {\r\n    e.preventDefault();\r\n    setNoteState(!noteState);\r\n  }\r\n\r\n  const onClickBookmark = async (e) => {\r\n    e.preventDefault();\r\n    if (!userObj.bookmarks) {\r\n      await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n        bookmarks: [answer.answerId]\r\n      })\r\n      .then(async () => {\r\n        await dbService.collection(\"answers\").doc(`${answer.answerId}`).update({\r\n          bookmarkCount: firebaseInstance.firestore.FieldValue.increment(1)\r\n        })\r\n        refreshBookmarks([answer.answerId])\r\n      })         \r\n    } else {\r\n      await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n        bookmarks: [...userObj.bookmarks, answer.answerId]\r\n      })\r\n      .then(async () => {\r\n        await dbService.collection(\"answers\").doc(`${answer.answerId}`).update({\r\n          bookmarkCount: firebaseInstance.firestore.FieldValue.increment(1)\r\n        })\r\n        refreshBookmarks([...userObj.bookmarks, answer.answerId])\r\n      })  \r\n    }\r\n\r\n  }\r\n\r\n  const onDeleteBookmark = async (e) => {\r\n    e.preventDefault();\r\n    window.confirm('책갈피를 빼시겠어요?') &&\r\n    await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n      bookmarks: [...userObj.bookmarks.filter((el) => el !== answer.answerId)],\r\n    })\r\n    .then(async () => {\r\n      await dbService.collection(\"answers\").doc(`${answer.answerId}`).update({\r\n        bookmarkCount: firebaseInstance.firestore.FieldValue.increment(-1)\r\n      })\r\n      refreshBookmarks([...userObj.bookmarks.filter((el) => el !== answer.answerId)])\r\n    })       \r\n  }\r\n\r\n  const onClickDetail = e => {\r\n    e.preventDefault();\r\n    history.push(`/question/${answer.questionId}`)\r\n  }\r\n\r\n  const onClickUser = e => {\r\n    e.preventDefault();\r\n    history.push(`/useranswer/${answer.userId}`)\r\n  }\r\n\r\n  const onChange = e => {\r\n    setChangedAnswer(e.target.value)\r\n  }\r\n\r\n  const onClickPrivate = async () => {\r\n    window.confirm('공개 상태를 바꾸시겠어요?') &&\r\n    await dbService.collection(\"answers\").doc(`${answer.answerId}`).update({\r\n      isPrivate: !answer.isPrivate\r\n    }).then(() => {\r\n      alert('성공적으로 변경되었습니다!')\r\n    })\r\n  }\r\n\r\n  const onClickAnswer = e => {\r\n    if (!editState) {\r\n      if (id) {\r\n        if (id !== answer.answerId) {\r\n          history.push(`/answer/${answer.answerId}`)\r\n        }\r\n      } else {\r\n        history.push(`/answer/${answer.answerId}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container style={{margin: `${Math.random() * 10 + 5}px` ,left: `${Math.random() * 6 - 3}%`}}>\r\n      {answer.bookmarkCount \r\n      ? \r\n      <PaperClip>\r\n      {[...Array(answer.bookmarkCount)].map((el, index) => {\r\n        return (\r\n            <FontAwesomeIcon key={index} icon={faBookmark} />\r\n        )\r\n      })\r\n      }\r\n      </PaperClip>\r\n      : null\r\n      }\r\n      <Question onClick={onClickDetail}>{answer.question}</Question>\r\n      <InfoContainer>\r\n        {answer.userId === userObj.uid \r\n        ? (\r\n        <>\r\n          <PrivateBtn onClick={onClickPrivate}>\r\n            {answer.isPrivate \r\n              ? \"공개하기\"\r\n              : \"나만 보기\"\r\n            }\r\n          </PrivateBtn>\r\n          <IconBox onClick={onClickEdit}>\r\n            {editState\r\n            ? <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faSave} />\r\n            : <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faPencilAlt} />}\r\n          </IconBox>\r\n          <IconBox onClick={onClickDelete}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faTrashAlt} />\r\n          </IconBox>\r\n        </>\r\n          )\r\n        : (\r\n          <>\r\n            {userObj.friends && !userObj.friends.includes(answer.userId) && \r\n            <IconBox onClick={() => {\r\n              onClicekFriend(answer)\r\n            }}>\r\n              <FontAwesomeIcon icon={faUserFriends} />\r\n            </IconBox>\r\n            }\r\n            {userObj.bookmarks && userObj.bookmarks.includes(answer.answerId)\r\n            ? \r\n            <IconBox onClick={onDeleteBookmark}>\r\n              <FontAwesomeIcon icon={faBookReader} />\r\n            </IconBox>\r\n            :\r\n            <IconBox onClick={onClickBookmark}>\r\n              <FontAwesomeIcon icon={faBookOpen} />\r\n            </IconBox>\r\n            }\r\n          </>\r\n        )}\r\n      </InfoContainer>\r\n      <ReplyIcon onClick={onClickNote}>\r\n        <FontAwesomeIcon icon={faReply} style={{ transform: 'rotate(180deg)' }} />\r\n        {/* <MailIcon style={{width: \"15px\", marginLeft: \"5px\"}} /> */}\r\n      </ReplyIcon>\r\n      <CreatedAt>\r\n        {lastMinutes < 60 \r\n        ? `${lastMinutes}분 전` \r\n        : lastHours < 24 \r\n          ? `${lastHours}시간 전`\r\n          : lastDays > 7\r\n            ? `${date}`\r\n            : `${lastDays}일 전`\r\n        }\r\n        {answer.editedAt && \"(수정됨)\"}\r\n      </CreatedAt>\r\n      <WriterContainer>\r\n        <Writer onClick={onClickUser}>- {answer.userName}{answer.isPrivate && \" (나에게만 보임)\"}</Writer>\r\n      </WriterContainer>\r\n      <Content onClick={onClickAnswer}>\r\n        {editState \r\n        ? <EditInput autoFocus onChange={onChange} value={changedAnswer} />\r\n        : answer.answer}\r\n      </Content>\r\n      {noteState && <NoteFactory userObj={userObj} answer={answer} setNoteState={setNoteState} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n  ","export const CheerComment = [\r\n    \"당신이 생각하는 시간이 외롭지 않기를 바랍니다.\",\r\n    \"쉽지는 않겠지만, 분명 해낼 수 있어요.\",\r\n    \"항상 응원하고 있습니다.\",\r\n    \"예쁜 저녁노을이 지고, 기분 좋은 바람이 불던 날을 기억하나요?\",\r\n    \"오늘도 고생 많으셨어요.\",\r\n    \"같은 질문에 여러 번 대답할 수도 있어요.\",\r\n    \"친구 목록에서 친구의 이름을 누르면, 친구의 답들을 볼 수 있어요.\",\r\n    \"코드를 외우기 불편하다면, 비밀번호를 등록하고 코드를 변경해보세요.\",\r\n    \"채팅 없이 댓글만 구현했어요. 누군가에게 방해받지 않는 광장 같은 밀실을 바라요.\",\r\n    \"알림을 구현하지 않은 건, 이곳은 가끔씩 생각나는 담벼락되길 바랬기 때문이에요. 생각은 이곳에 정리되고, 집중은 현재에 하시길 바라면서요.\",\r\n    \"행복하시면 좋겠습니다.\",\r\n    \"주인장에게 하고 싶은 말이 있다면, 설정에서 문의하기로 할 수 있어요.\",\r\n    \"상세로 들어가기 전까지 다른 사람이 남겨놓은 메모가 보이지 않는건, 다른 사람의 생각에 대한 다른 사람의 답장을 보기전에 오롯한 당신의 답장이 써지길 바래서였습니다.\",\r\n    \"꾸준히 업데이트하고 있습니다. 감사합니다.\",\r\n]","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { CheerComment } from \"./DB/CheerDB\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown, faChevronUp, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: relative;\r\n    margin-top: 20px;\r\n    margin-bottom: 15px;\r\n    width: 90%; \r\n    min-height: 100px;\r\n    padding: 30px 0;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 50%;\r\n    border-radius: 10px;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 10px;\r\n    border: none;\r\n    background: transparent;\r\n    color: white;\r\n    transition: all 0.3s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst RefreshBtn = styled.button`\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 10px;\r\n    border: none;\r\n    background: transparent;\r\n    color: black;\r\n    transition: all 0.3s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst CheerPhrase = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 90%;\r\n    word-break: keep-all;\r\n    line-height: 25px;\r\n    font-size: 0.9rem;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Cheer = () => {\r\n    const [cheer, setCheer] = useState();\r\n    const [cheerState, setCheerState] = useState(true);\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            minHeight: cheerState ? '100px' : '0px',\r\n            padding: cheerState ? '30px' : '0px',\r\n            opacity: 0.7,\r\n            y: 0\r\n        }\r\n    })\r\n\r\n    const onClick = () => {\r\n        setCheerState(!cheerState);\r\n    }\r\n\r\n    const onClickRefresh = () => {\r\n        setCheer(CheerComment[Math.floor(Math.random() * CheerComment.length)])\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCheer(CheerComment[Math.floor(Math.random() * CheerComment.length)])\r\n    }, [])\r\n\r\n    return (\r\n        <Container style={animation}>\r\n            <CloseBtn onClick={onClick} style={{color: cheerState ? 'black' : 'white'}} >\r\n                {cheerState \r\n                ? <FontAwesomeIcon icon={faChevronUp} />\r\n                : <FontAwesomeIcon icon={faChevronDown} />\r\n                }\r\n            </CloseBtn>\r\n            {cheerState && \r\n            <>\r\n                <CheerPhrase>\r\n                    {cheer}\r\n                </CheerPhrase>\r\n                <RefreshBtn onClick={onClickRefresh}>\r\n                    <FontAwesomeIcon icon={faSyncAlt} />\r\n                </RefreshBtn>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cheer;","import { faDice, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Cheer from \"../components/Cheer\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  padding: 40px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst RandomBtn = styled.button`\r\n    margin-bottom: 10px;\r\n    font-size: 0.8rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 0.8rem;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst DiceContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Dice = styled.div``;\r\n\r\nconst Notice = styled.span`\r\n  font-size: 0.8rem;\r\n  display: flex;\r\n  font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst DotBlink = keyframes`\r\n    0% {\r\n        opacity: 0%;\r\n    }\r\n    20% {\r\n        opacity: 0%;\r\n    }\r\n    40% {\r\n        opacity: 100%;\r\n    }\r\n    60% {\r\n        opacity: 100%;\r\n    }\r\n    80% {\r\n        opacity: 100%;\r\n    }\r\n    100% {\r\n        opacity: 100%\r\n    }\r\n`;\r\n\r\nconst Dot = styled.div`\r\n    animation: ${DotBlink} 0.9s infinite;\r\n    :nth-child(2) {\r\n        animation-delay: 0.3s;\r\n    }\r\n    :last-child {\r\n        animation-delay: 6s;\r\n    }\r\n`;\r\n\r\nconst Home = ({ userObj, refreshFriends, refreshBookmarks, answerCount }) => {\r\n  const history = useHistory();\r\n  const [isLoading, setISLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [diceState, setDiceState] = useState(false);\r\n  const [randomState, setRandomState] = useState(false);\r\n\r\n  const currentPosts = (posts) => {\r\n    let currentPosts = 0;\r\n    currentPosts = posts.slice(0, currentPage * 5)\r\n    return currentPosts\r\n  }\r\n\r\n  const makeRandArray = () => {\r\n    let randArray = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      randArray[i] = Math.floor(Math.random() * answerCount);\r\n      for (let l = 0; l < i; l++) {\r\n        if(randArray[i] === randArray[l]) {\r\n          i--;\r\n          break;\r\n        };\r\n      };\r\n    };\r\n    return randArray;\r\n  };\r\n\r\n  const getData = async () => {\r\n    console.log(1);\r\n    if (randomState) {\r\n      setDiceState(true);\r\n      setTimeout(() => {\r\n        const randArray = makeRandArray();\r\n        dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"index\", \"in\", randArray).onSnapshot(snapshot => {\r\n          const answerArray = snapshot.docs.map(doc => ({\r\n            id:doc.answerId,\r\n            ...doc.data(),\r\n          }));\r\n          answerArray.sort((a, b) => {\r\n            if(a.createdAt > b.createdAt) return -1;\r\n            if(a.createdAt === b.createdAt) return 0;\r\n            if(a.createdAt < b.createdAt) return 1;\r\n          });\r\n          setAnswers(answerArray)\r\n          if (isLoading) {\r\n            setISLoading(false)\r\n          }\r\n        });\r\n        setDiceState(false);\r\n      }, 500)\r\n    }\r\n    else {\r\n      dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).onSnapshot(snapshot => {\r\n        const answerArray = snapshot.docs.map(doc => ({\r\n          id:doc.answerId,\r\n          ...doc.data(),\r\n        }));\r\n        answerArray.sort((a, b) => {\r\n          if(a.createdAt > b.createdAt) return -1;\r\n          if(a.createdAt === b.createdAt) return 0;\r\n          if(a.createdAt < b.createdAt) return 1;\r\n        });\r\n        setAnswers(answerArray)\r\n        if (isLoading) {\r\n          setISLoading(false)\r\n        }\r\n      });\r\n    };\r\n  };\r\n\r\n  const addBtn = e => {\r\n    if (currentPage*5 >= answers.length | randomState) {\r\n      getData();\r\n    }\r\n    if (!randomState) {\r\n      setCurrentPage(currentPage + 1)\r\n    }\r\n  }\r\n\r\n  const onToggleRandom = e => {\r\n    setRandomState(!randomState);\r\n  };\r\n\r\n  // const onSearch = async (e) => {\r\n  //   await dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"answer\", \"array-contains\", searchWord).get()\r\n  //   .then(snapshot => {\r\n  //     console.log(snapshot.docs)\r\n  //     const answerArray = snapshot.docs.map(doc => ({\r\n  //       id:doc.answerId,\r\n  //       ...doc.data(),\r\n  //     }));\r\n  //     answerArray.sort((a, b) => {\r\n  //       if(a.createdAt > b.createdAt) return -1;\r\n  //       if(a.createdAt === b.createdAt) return 0;\r\n  //       if(a.createdAt < b.createdAt) return 1;\r\n  //     });\r\n  //     setAnswers(answerArray)\r\n  //   });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (userObj.isFirst) {\r\n      history.push(\"/manual\")\r\n    }\r\n    getData();\r\n  }, [randomState]);\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        : (\r\n          <>\r\n            <Cheer />\r\n            <RandomBtn onClick={onToggleRandom}>\r\n              {randomState ? \"시간 순서대로 보기\" : \"랜덤으로 보기\"}\r\n            </RandomBtn>\r\n            {answers && currentPosts(answers).map(answer => (\r\n              <Answer key={answer.answerId} userObj={userObj} answer={answer} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n            ))\r\n            }\r\n            {(answers.length < 5 | currentPage*5 <= answers.length | randomState)\r\n            ?\r\n            <AddBtn onClick={addBtn}>\r\n              {randomState \r\n              ? \r\n              <DiceContainer>\r\n                <Dice>\r\n                  <FontAwesomeIcon icon={faDice} size=\"2x\" />\r\n                </Dice>\r\n                {diceState && \r\n                  <Notice>주사위 굴리는 중\r\n                    <Dot>.</Dot><Dot>.</Dot><Dot>.</Dot>\r\n                  </Notice>}\r\n              </DiceContainer>\r\n              : <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n              }\r\n            </AddBtn>\r\n            : <LastAnswer>\r\n                    마지막 대답입니다.\r\n            </LastAnswer>\r\n            }\r\n            {/* {randomState && <Search onSearch={onSearch} from=\"home\" searchWord={searchWord} setSearchWord={setSearchWord} />} */}\r\n          </>\r\n        )\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import { faCheck, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    width: 80%;\r\n    min-height: 80%;\r\n    color: white;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 80vh;\r\n    background: black;\r\n    opacity: 60%;\r\n`;\r\n\r\nconst Terms = styled.div`\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    line-height: 140%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    height: 80vh;\r\n    background: black;\r\n    opacity: 100%;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    background: none;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst TermModal = ({ closeModal }) => {\r\n\r\n    const onClickClose = () => {\r\n        closeModal(false);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CloseBtn onClick={onClickClose}>\r\n                <FontAwesomeIcon icon={faCheck} />\r\n            </CloseBtn>\r\n            <Terms>\r\n                이용약관 <br /><br />\r\n\r\n                '누군가의 서랍장' 이하 '사이트' <br /><br />\r\n\r\n                1. 이용자가 작성한 글에 대한 모든 책임은 작성한 이용자에게 있습니다. <br />\r\n                2. 이용자는 타인이 불쾌할 수 있는 내용은 쪽지에도 글에도 쓰지 않습니다. <br />\r\n                3. 이용자는 타인이 불쾌할 수 있는 내용을 작성시 언제든 글과 쪽지가 삭제될 수 있으며, 이용이 정지될 수 있습니다. <br />\r\n                4. 이용자는 법의 이전, 최소한의 윤리의식을 가지고 사이트를 이용합니다. <br />\r\n                5. 그러나 법의 심판이 필요할 때는 사이트는 적극적으로 협조합니다. <br />\r\n            </Terms>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TermModal;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { authService } from \"../fBase\";\r\nimport { useState } from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport TermModal from \"./TermModal\";\r\n\r\n\r\nconst Container = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 9;\r\n`;\r\n\r\nconst AuthConatiner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  transition: 0.5s all ease-in-out;\r\n  :focus-within {\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst LoginLabel = styled.label`\r\n  width: 70px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst Notice = styled.span`\r\n  margin: 10px;\r\n  color: white;\r\n  font-size: 0.7rem;\r\n`;\r\n\r\nconst Terms = styled.a`\r\n  text-decoration: underline;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst LoginBtn = styled.button`\r\n  color: var(--gold);\r\n  background-color: transparent;\r\n  border: 1px solid var(--gold);\r\n  padding : 3px 10px;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n  font-size: 0.9rem;\r\n  font-family: Kyobo Handwriting;\r\n  transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid white;\r\n        color: white;\r\n    }\r\n    :active {\r\n      transform: scale(0.9);\r\n    }\r\n`;\r\n\r\nconst PasswordContainer = styled.div`\r\n  color: white;\r\n  transition: 0.5s all ease-in-out;\r\n  :focus-within {\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst PasswordLabel = styled.label`\r\n  width: 70px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }   \r\n`;\r\n\r\nconst PasswordBtn = styled.div`\r\n  color: white;\r\n  opacity: 70%;\r\n  padding: 7px;\r\n  margin: 10px 0 20px 0;\r\n  font-size: 0.8rem;\r\n  border: 1px solid;\r\n  border-radius: 10px;\r\n  transition: all 0.5s ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst Error = styled(animated.span)`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 5px;\r\n  color: var(--gold);\r\n  word-break: keep-all;\r\n  width: 80%;\r\n  font-size: 0.7rem;\r\n`;\r\n\r\nconst Login = ({setCodeState, codeState}) => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [modalState, setModalState] = useState(false);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(\r\n      code, codeState ? password : code) \r\n      setCode(\"\");\r\n    } catch (error) {\r\n      if (error.message === \"The email address is badly formatted.\") {\r\n        setError(\"코드를 확인해주세요.\")\r\n      } else if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n        setError(\"정확한 코드를 입력했는지 확인해주세요.\")\r\n      }\r\n      else {\r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setCode(e.target.value)\r\n  }\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n\r\n  const closeModal = (e) => {\r\n    setModalState(e);\r\n}\r\n\r\n  const animation = useSpring({\r\n      from : {\r\n          opacity : 0\r\n      },\r\n      to: {\r\n          opacity: 1\r\n      },\r\n      config: config.gentle\r\n  })\r\n\r\n  const errorAni = useSpring({\r\n    opacity: error ? 1 : 0,\r\n    config: config.gentle\r\n  })\r\n\r\n  return (\r\n    <Container style={animation}>\r\n      {modalState && <TermModal closeModal={closeModal} />}\r\n      <PasswordBtn onClick={() => {\r\n        setCodeState(!codeState)\r\n      }}>\r\n        {codeState \r\n        ? \"저는 비밀번호가 없습니다\" \r\n        : \"저는 비밀번호가 있습니다\"\r\n        }\r\n      </PasswordBtn>\r\n      <AuthConatiner>\r\n        <LoginContainer>\r\n          <LoginLabel style={{width: !codeState && \"auto\"}}>Code :</LoginLabel>\r\n          <LoginInput onChange={onChange} value={code} type=\"text\" />\r\n        </LoginContainer>\r\n        {codeState && \r\n          <PasswordContainer>\r\n            <PasswordLabel>Password :</PasswordLabel>\r\n            <PasswordInput value={password} onChange={onChangePassword} type=\"password\" />\r\n          </PasswordContainer>\r\n        }\r\n      </AuthConatiner>\r\n      <Error style={errorAni}>{error}</Error>\r\n      {code && \r\n      <>\r\n        <Notice>\r\n          입장과 함께 <Terms onClick={() => {setModalState(true)}}>이용약관</Terms>에 동의합니다.\r\n        </Notice>\r\n        <LoginBtn onClick={onSubmit}>\r\n            들어가기\r\n        </LoginBtn>\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport Login from \"../components/Login\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled(animated.h1)`\r\n  position: absolute;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n  font-size: 1.5rem;\r\n  font-family: Jeju Myeongjo;\r\n  z-index: 9;\r\n`;\r\n\r\nconst AuthBox = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 10px;\r\n  width: 100%;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n  color: var(--gold);\r\n  margin-bottom: 15px;\r\n  font-size: 1rem;\r\n  z-index: 9;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Welcome = styled(animated.div)`\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  opacity: 0;\r\n  transition: 1s all ease-in-out;\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [authState, setAuthState] = useState(false);\r\n    const [codeState, setCodeState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n      top: authState ? \"20vh\" : \"35vh\",\r\n      config: config.molasses\r\n    })\r\n\r\n    const welcomeAni = useSpring({\r\n      opacity: !authState && 1,\r\n      config: config.molasses\r\n    })\r\n\r\n    const onClick = () => {\r\n      setAuthState(!authState)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Background onClick={onClick} />\r\n        <Title style={animation}>누군가의 서랍장</Title>\r\n        {authState \r\n        ? (\r\n        <AuthBox>\r\n        <Notice onClick={() => {setCodeState(!codeState)}}>코드를 입력해주세요.</Notice>\r\n        <Login setCodeState={setCodeState} codeState={codeState} />\r\n        </AuthBox>\r\n        ) : <Welcome style={welcomeAni}>입장하시려면 터치해주세요.</Welcome>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  ","import { faPencilAlt, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 80%;\r\n    padding: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin: 15px 0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst EditBtn = styled.button`\r\n    align-self: flex-end;\r\n    border: none;\r\n    background: none;\r\n    color: white;\r\n    transition: all 0.5s ease-in-out;\r\n    margin-top: 10px;\r\n    font-size: 0.9rem;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst BioContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n`;\r\n\r\nconst BioTitle = styled.h1`\r\n    color: white;\r\n    font-size: 1.1rem;\r\n`;\r\n\r\nconst BioLine = styled.hr`\r\n    width: 100%;\r\n`;\r\n\r\nconst BioContent = styled.div`  \r\n    white-space: pre-wrap;\r\n    margin-top: 5px;\r\n    color: white;\r\n    font-size: 1rem;\r\n`;\r\n\r\nconst BioTextarea = styled.textarea`\r\n    width: 100%;\r\n    min-height: 100px;\r\n`;\r\n\r\nconst TextCounter = styled.span`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst ProfileBio = ({ userObj, refreshBio, isProfile }) => {\r\n    const { id } = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [editState, setEditState] = useState(false);\r\n    const [bio, setBio] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n    const onClickEdit = async () => {\r\n        setEditState(!editState)\r\n        setBio(userObj.bio);\r\n        if (editState && bio !== userObj.bio) {\r\n            if (window.confirm('소개를 바꾸시겠어요?')) {\r\n                await dbService.collection(\"profiles\").doc(`${userObj.uid}`)\r\n                .set({\r\n                    bio,\r\n                })\r\n                .then(() => {\r\n                    refreshBio(bio)\r\n                    setCount(bio.length)\r\n                    alert('소개를 적었습니다 :)')\r\n                }).catch((e) => {\r\n                    alert(e.message);\r\n                })    \r\n            }\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setBio(e.target.value);\r\n        setCount(e.target.value.length);\r\n    }\r\n\r\n    const getBio = async () => {\r\n        await dbService.collection(\"profiles\").doc(`${id}`).get().then(snapshot => {\r\n            const data = snapshot.data();\r\n            if (data) {\r\n                setBio(data.bio);\r\n            } else {\r\n                setBio('');\r\n            }\r\n            setIsLoading(false);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isProfile) {\r\n            getBio();\r\n        } else {\r\n            setIsLoading(false);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? ''\r\n            : \r\n            <>\r\n                <BioContainer>\r\n                    <BioTitle>\r\n                        소개\r\n                    </BioTitle>\r\n                    <BioLine />\r\n                {editState \r\n                ? \r\n                <>\r\n                <BioTextarea maxLength={200} onChange={onChange} value={bio} />\r\n                <TextCounter>{count} / 200</TextCounter>\r\n                </>\r\n                : \r\n                    <BioContent>\r\n                        {isProfile \r\n                        ? userObj.bio \r\n                            ? userObj.bio\r\n                            : \"소개말이 없습니다.\"\r\n                        : bio\r\n                            ? bio\r\n                            : \"소개말이 없습니다.\"\r\n                        }                    \r\n                    </BioContent>\r\n                }\r\n                {isProfile &&\r\n                <EditBtn onClick={onClickEdit}>\r\n                    {editState \r\n                    ? <FontAwesomeIcon icon={faSave} />\r\n                    : <FontAwesomeIcon icon={faPencilAlt} />\r\n                    }\r\n                </EditBtn>\r\n                }\r\n                </BioContainer>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfileBio;","import { faEdit, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Loading from \"../components/Loading\";\r\nimport ProfileBio from \"../components/ProfileBio\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding-top: 30px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.3rem;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 0.7rem;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst WriteBtn = styled.button`\r\n    position: fixed;\r\n    bottom: 30px;\r\n    right: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 5px;\r\n    font-family: Kyobo Handwriting;\r\n    background: none;\r\n    border: none;\r\n    color: white;\r\n    font-size: 0.8rem;\r\n    transition: all 0.5s ease-in-out;\r\n    z-index: 9;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`\r\n\r\nconst MyAnswers = ({userObj, refreshBio}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [myAnswers, setMyAnswers] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n\r\n      const addPage = () => {\r\n        if (currentPage*5 >= myAnswers.length) {\r\n            getMyAnswers();\r\n          }\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const getMyAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${userObj.uid}`).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).onSnapshot(snapshot => {\r\n            const myAnswerArray = snapshot.docs.map(doc => ({\r\n                id: doc.answerId,\r\n                ...doc.data()    \r\n            }))\r\n            myAnswerArray.sort((a, b) => {\r\n                if(a.createdAt > b.createdAt) return -1;\r\n                if(a.createdAt === b.createdAt) return 0;\r\n                if(a.createdAt < b.createdAt) return 1;\r\n              });\r\n            setMyAnswers(myAnswerArray)\r\n            setIsLoading(!isLoading)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? <Loading />\r\n            : ( \r\n            <>\r\n                <Title>\r\n                    나만의 서랍장\r\n                </Title>\r\n                <ProfileBio userObj={userObj} refreshBio={refreshBio} isProfile={true} />\r\n                {currentPosts(myAnswers).map(myAnswer => <Answer key={myAnswer.answerId} answer={myAnswer} userObj={userObj}/>)}\r\n                {currentPage*5 <= myAnswers.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastAnswer>\r\n                    마지막 대답입니다.\r\n                </LastAnswer>\r\n                }\r\n                <Link to={\"/questions\"} style={{textDecoration: \"none\"}}>\r\n                <WriteBtn>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                    대답쓰기\r\n                </WriteBtn>\r\n                </Link>\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default MyAnswers;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  font-size: 18px;\r\n  word-break: keep-all;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  width: 70%;\r\n  color: white;\r\n  font-family: Jeju myeongjo;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst QuestionDetail = ({userObj, refreshFriends, refreshBookmarks}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const { id } = useParams();\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n\r\n    const addPage = () => {\r\n      if (currentPage*5 >= answers.length) {\r\n        getAnswers();\r\n      }\r\n      setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  const getAnswers = async () => {\r\n    await dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"questionId\", \"==\", `${id}`).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).get()\r\n    .then(snapShot => {\r\n      const answerData = snapShot.docs.map(doc => ({\r\n        ...doc.data()\r\n      }))\r\n      answerData.sort((a, b) => {\r\n        if(a.createdAt > b.createdAt) return -1;\r\n        if(a.createdAt === b.createdAt) return 0;\r\n        if(a.createdAt < b.createdAt) return 1;\r\n      });\r\n      setAnswers(answerData)\r\n      setIsLoading(false);\r\n    }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAnswers();\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading \r\n      ? <Loading />\r\n      :\r\n      <>\r\n      <Question>{answers[0].question}</Question>\r\n      {currentPosts(answers).map(answer => <Answer answer={answer} userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />)}\r\n      {currentPage*5 <= answers.length \r\n      ?\r\n      <AddBtn onClick={addPage}>\r\n          <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n      </AddBtn>\r\n      : <LastAnswer>\r\n          마지막 대답입니다.\r\n      </LastAnswer>\r\n      }\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n  }\r\n\r\n  export default QuestionDetail;\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    color: white;\r\n`;\r\n\r\nconst QuestionContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px;\r\n`;\r\n\r\nconst CheerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px;\r\n`;\r\n\r\nconst QuestionName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst QuestionForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CheerName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CheerForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CheerInput = styled.input`\r\n`;\r\n\r\nconst CodeContainer = styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CodeInput = styled.input``;\r\n\r\nconst CodeBtn = styled.button``;\r\n\r\nconst CodeDiv = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst QuestionRegister = ({userObj}) => {\r\n    const [questionName, setQuestionName] = useState('');\r\n    const [cheerName, setCheerName] = useState('');\r\n    const [code, setCode] = useState(\"\");\r\n    const [specific, setSpecific] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setQuestionName(e.target.value);\r\n    }\r\n\r\n    const onChangeCode = e => {\r\n        setSpecific(e.target.value);\r\n    }\r\n\r\n    const onChangeCheer = (e) => {\r\n        setCheerName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (questionName) {\r\n            const questionId = uuidv4();\r\n            const question = questionName;\r\n            const questionObj = {\r\n                question,\r\n                questionId,\r\n                answerUsers: [],\r\n                publicAnswer: [],\r\n            }\r\n            await dbService.collection(\"questions\").doc(question).set(questionObj)\r\n            setQuestionName(\"\");\r\n        }\r\n    }\r\n\r\n    const onSubmitCheer = async (e) => {\r\n        e.preventDefault();\r\n        if (cheerName) {\r\n            const cheerId = uuidv4();\r\n            const cheer = cheerName;\r\n            const cheerObj = {\r\n                cheer,\r\n                cheerId,\r\n            }\r\n            await dbService.collection(\"cheers\").doc(cheerName).set(cheerObj)\r\n            setCheerName(\"\");\r\n        }\r\n    }\r\n\r\n    const makeCode = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'\r\n        const stringLength = 6\r\n        let randomstring = ''\r\n\r\n        if (specific) {\r\n            randomstring = specific;\r\n        } else {\r\n            for (let i = 0; i < stringLength; i++) {\r\n                const rnum = Math.floor(Math.random() * chars.length)\r\n                randomstring += chars.substring(rnum, rnum + 1)\r\n            }\r\n        };\r\n\r\n        await authService.createUserWithEmailAndPassword(\r\n            `${randomstring}@drawer.book`, \r\n            `${randomstring}@drawer.book`)\r\n        .then(async (data) => {\r\n            const newUserObj = {\r\n                uid: data.user.uid,\r\n                displayName: \"익명\",\r\n                isPassword: false,\r\n                initCode: `${randomstring}@drawer.book`,\r\n                friends: [],\r\n                bookmarks: [],\r\n                token: \"\",  \r\n                isFirst: true,\r\n            }\r\n            \r\n            await data.user.updateProfile({\r\n                displayName: \"익명\",\r\n            })\r\n\r\n            await dbService.collection(\"users\").doc(`${data.user.uid}`).set(newUserObj)\r\n            .then(() => {\r\n                alert(\"성공했습니다.\")\r\n            })\r\n        })\r\n        setCode(`${randomstring}@drawer.book`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userObj.uid !== \"oaQ2Ruq5mVZbFDb9t5E2fukKhox2\") {\r\n            authService.signOut();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <QuestionContainer>\r\n                <QuestionName>\r\n                    무슨 질문을 추가하실 건가요?\r\n                </QuestionName>\r\n                <QuestionForm>\r\n                    <QuestionInput onChange={onChange} value={questionName} type=\"text\" />\r\n                    <Submit onClick={onSubmit}>추가하기</Submit>\r\n                </QuestionForm>\r\n            </QuestionContainer>\r\n            <CheerContainer>\r\n                <CheerName>\r\n                    무슨 응원을 추가하실 건가요?\r\n                </CheerName>\r\n                <CheerForm>\r\n                    <CheerInput onChange={onChangeCheer} value={cheerName} type=\"text\" />\r\n                    <Submit onClick={onSubmitCheer}>추가하기</Submit>\r\n                </CheerForm>\r\n            </CheerContainer>\r\n            <CodeContainer>\r\n                <QuestionName>\r\n                    코드 생성기\r\n                </QuestionName>\r\n                <CodeInput onChange={onChangeCode} value={specific} type=\"text\"/>\r\n                <CodeBtn onClick={makeCode}>생성하기</CodeBtn>\r\n                <CodeDiv>{code && code}</CodeDiv>\r\n            </CodeContainer>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default QuestionRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService, firebaseInstance } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    border: 1px solid black;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    color: white;\r\n    border-radius: 10px;\r\n    background-color: var(--main-color);\r\n    margin: 10px;\r\n    :focus-within {\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    transition: 0.3s all ease-in-out;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    font-family: Jeju Myeongjo;\r\n    font-size: 0.8rem;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst AnswerContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n    width: 90%;\r\n`;\r\n\r\nconst AnswerInput = styled.input`\r\n    padding: 4px 7px;\r\n    transition: 0.3s all ease-in-out;\r\n    font-family: Jeju Myeongjo;\r\n    width: 100%;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerCheckbox = styled.input`\r\n    padding: 4px 7px;\r\n    transition: 0.3s all ease-in-out;\r\n    font-family: Jeju Myeongjo;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerTextarea = styled.textarea`\r\n    width: 100%;\r\n    min-height: 100px;\r\n    font-family: Jeju Myeongjo;\r\n    padding: 5px;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst PrivateLabel = styled.label`\r\n    transition: 0.3s all ease-in-out;\r\n    font-size: 0.7rem;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst AnswerBtn = styled.div`\r\n    margin-left: 5px;\r\n    width: 20px;\r\n    height: 20px;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n    :active {\r\n        background-color: var(--main-color);\r\n        transform: scale(0.9);\r\n    }\r\n`;\r\n\r\nconst Question = ({userObj, question, answerCount}) => {\r\n    const history = useHistory();\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [answer, setAnswer] = useState('');\r\n    const [longAnswer, setLongAnswer] = useState(false);\r\n\r\n    const onClickQuestion = (e) => {\r\n        history.push({\r\n            pathname: `/question/${e.target.getAttribute('name')}`,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer) {\r\n            const answerId = uuidv4();\r\n            const answerObj = {\r\n            question: question.question,\r\n            questionId: question.questionId,\r\n            userId: userObj.uid,\r\n            userName: userObj.displayName,\r\n            answerId,\r\n            answer,\r\n            createdAt: Date.now(),\r\n            editedAt: null,\r\n            isPrivate,\r\n            index: answerCount + 1,\r\n            bookmarkCount: 0,\r\n        }\r\n        dbService.collection(\"answers\").doc(`${answerId}`).set(answerObj).then(async () => {\r\n            await dbService.collection(\"main\").doc(\"counts\").update({\r\n                answers: firebaseInstance.firestore.FieldValue.increment(1)\r\n            })\r\n            alert(\"답변이 저장되었습니다 :)\")\r\n        }\r\n        ).catch((error) => {\r\n            console.error(\"Submit Error : \", error)\r\n        });\r\n        setAnswer(\"\");}\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const answerValue = e.target.value\r\n        setAnswer(answerValue)\r\n    }\r\n\r\n    const onChangeCheckbox = () => {\r\n        setIsPrivate(!isPrivate)\r\n    }\r\n\r\n    const onChangeAnswerType = () => {\r\n        setLongAnswer(!longAnswer)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title onClick={onClickQuestion} name={question.questionId}>\r\n                {question.question}\r\n            </Title>\r\n            <AnswerContainer>\r\n                {longAnswer \r\n                ? ( <AnswerTextarea onChange={onChange} value={answer} name={question.question} autoFocus />\r\n                ) : (\r\n                <AnswerInput onChange={onChange} value={answer} name={question.question} type=\"text\" />\r\n                )}\r\n                <AnswerBtn onClick={onSubmit}>\r\n                    <FontAwesomeIcon icon={faSave} />\r\n                </AnswerBtn>\r\n            </AnswerContainer>\r\n            <AnswerContainer style={{marginBottom: \"0\"}}>\r\n                <AnswerCheckbox id=\"long-answer\" onChange={onChangeAnswerType} type=\"checkbox\"/>\r\n                <PrivateLabel for=\"long-answer\">길게 쓰기</PrivateLabel>\r\n                <AnswerCheckbox id=\"private-answer\" onChange={onChangeCheckbox} type=\"checkbox\" />\r\n                <PrivateLabel for=\"private-answer\">답변 비공개하기</PrivateLabel>\r\n            </AnswerContainer>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Question;\r\n  ","import { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 75px;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  z-index: 10;\r\n  transition: 0.3s all ease-in-out;\r\n  background-color: rgba(0,0,0,0.5);\r\n  :hover, :focus-within {\r\n    background-color: rgba(0,0,0,0.8);\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`  \r\n  font-family: Kyobo Handwriting;\r\n  font-size: 14px;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  transition: 0.3s all ease-in-out;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 3px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 200px;\r\n  transition: 0.3s all ease-in-out;\r\n  :focus {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst SearchSubmit = styled.button`\r\n    font-size: 0.8rem;\r\n    border-radius: 5px;\r\n    padding: 3px 5px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n    :active {\r\n      transform: scale(0.95)\r\n    }\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 30px;\r\n  font-size: 1rem;\r\n  font-family: Kyobo Handwriting;\r\n  transition: 0.5s all ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst SearchBtnLabel = styled.span`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Search = ({ onSearch, from, searchWord, setSearchWord }) => {\r\n    const [searchState, setSearchState] = useState(false);\r\n    const fromHome = from === \"home\" ? true : false\r\n\r\n    const onChange = (e) => {\r\n      setSearchWord(e.target.value)      \r\n    }\r\n\r\n    const onClick = () => {\r\n      setSearchState(!searchState)\r\n    }\r\n    return (\r\n      <>\r\n      {searchState ? \r\n        <Container>\r\n        <Title>찾으시는 {fromHome ? \"답변\" : \"질문\"}이 있나요?</Title>\r\n        <SearchContainer>\r\n          <SearchInput onChange={onChange} value={searchWord} />\r\n          {from === \"home\" && <SearchSubmit onClick={onSearch}>검색하기</SearchSubmit>}\r\n        </SearchContainer>\r\n        <CloseBtn onClick={onClick}><FontAwesomeIcon icon={faTimes} size=\"lg\" /></CloseBtn>\r\n      </Container>\r\n      : <SearchBtn onClick={onClick}>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n          <SearchBtnLabel>\r\n          {fromHome ? \"답변\" : \"질문\"} 찾기\r\n          </SearchBtnLabel>\r\n        </SearchBtn>\r\n      }\r\n      </>\r\n    );\r\n}\r\n  \r\nexport default Search;\r\n  ","import { faChevronLeft, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../components/Loading\";\r\nimport Question from \"../components/Question\";\r\nimport Search from \"../components/Search\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    padding-top: 30px;\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n    position: fixed;\r\n    bottom: 30px;\r\n    left: 30px;\r\n    background: none;\r\n    border: none;\r\n    color: white;\r\n    font-size: 1.1rem;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastQuestion = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst Questions = ({questionArray, userObj}) => {\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([]);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [answerCount, setAnswerCount] = useState('');\r\n\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n  \r\n    const getQuestions = async () => {\r\n        dbService.collection(\"main\").doc(\"counts\")\r\n        .onSnapshot((snapshot) => {\r\n            const countData = snapshot.data();\r\n            setAnswerCount(countData.answers);\r\n        });\r\n        setQuestions(questionArray.sort(() => Math.random() - 0.5))\r\n        setIsLoading(!isLoading)\r\n    }\r\n\r\n    const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? <Loading />\r\n            : (\r\n            <>\r\n                {currentPosts(questions.filter(question => question.question.includes(searchWord))).map(question => <Question key={question.questionId} userObj={userObj} question={question} answerCount={answerCount} /> )}\r\n                <BackBtn onClick={history.goBack}>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                </BackBtn>\r\n                <Search from=\"question\" searchWord={searchWord} setSearchWord={setSearchWord} />\r\n                {currentPage*5 <= questions.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastQuestion>\r\n                    마지막 질문입니다.\r\n                </LastQuestion>\r\n                }\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Questions;\r\n  ","import { faChevronLeft, faChevronRight, faCog, faHome, faInbox, faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\"\r\n\r\nconst Container = styled(animated.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    height: auto;\r\n    z-index: 9;\r\n    box-sizing: border-box;\r\n    background-color: rgba(0,0,0, 0.5);\r\n`;\r\n\r\nconst NavComponent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    color: white;\r\n    gap: 5px;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    font-size: 1rem;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavTitle = styled.span`\r\n    font-size: 0.7rem;\r\n`;\r\n\r\nconst NavBtn = styled(animated.button)`\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 20px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    color: white;\r\n    font-family: sans-serif;\r\n    font-weight: bolder;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavCloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin-right: 5%;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Navigation = () => {\r\n    const [navState, setNavState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n        opacity : navState ? 1 : 0, \r\n        x: navState ? 0 : -10,\r\n        reverse: !navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const reverseAnimation = useSpring({\r\n        opacity : navState ? 0 : 1, \r\n        x: navState ? -10 : 0,\r\n        reverse: navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const onNavClick = () => {\r\n        setNavState(!navState)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {navState ?(\r\n            <Container style={animation}>\r\n                <Link to={\"/\"} style={{textDecoration: \"none\", marginLeft: \"5%\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                        <NavTitle>담벼락</NavTitle>\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/myanswers\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                    <FontAwesomeIcon icon={faInbox} />\r\n                    <NavTitle>나만의 서랍장</NavTitle>\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/community\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faUserFriends} />\r\n                        <NavTitle>누군가의 서랍장</NavTitle>\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/settings\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faCog} />\r\n                        <NavTitle>설정</NavTitle>\r\n                    </NavComponent>\r\n                </Link> \r\n                <NavCloseBtn style onClick={onNavClick}>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                </NavCloseBtn>\r\n            </Container>\r\n            ) : (\r\n            <NavBtn style={reverseAnimation} onClick={onNavClick}>\r\n                Menu<FontAwesomeIcon icon={faChevronRight} style={{marginLeft: \"5px\"}} />\r\n            </NavBtn>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCrown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding: 40px 0;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 20px 0px;\r\n    box-sizing: border-box;\r\n    transition: 1s all ease-in-out;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ProfileLabel = styled.label`\r\n    margin: 5px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst PasswordForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileInput = styled.input`\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileSubmitBtn = styled.input`\r\n    font-size: 0.6rem;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    margin-top: 5px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n    display: flex;\r\n    gap: 5px;\r\n`;\r\n\r\nconst ManualBtn = styled.button`\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst CreditBtn = styled.button`\r\n    position: relative;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst QnaContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 200px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst QnaLabel =styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst QnaInput = styled.textarea`\r\n    font-size: 0.8rem;\r\n    width: 70%;\r\n    height: 50px;\r\n`;\r\n\r\nconst QnaSubmitBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst PurchaseBtn = styled.a`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    text-decoration: none;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Crown = styled.div`\r\n    position: absolute;\r\n    top: -10px;\r\n    right: -3px;\r\n    transform: rotate(20deg);\r\n`;\r\n\r\nconst Error = styled.span`\r\n    font-size: 0.8rem;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Settings = ({ refreshUser, userObj, refreshBio }) => {\r\n    const history = useHistory();\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [report, setReport] = useState('');\r\n    const [nameState, setNameState] = useState(false);\r\n    const [emailState, setEmailState] = useState(false);\r\n    const [passwordState, setPasswordState] = useState(false);\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const onClickCredit = e => {\r\n        history.push(\"/credit\");\r\n    }\r\n\r\n    const onClickManual = e => {\r\n        history.push('/manual');\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setDisplayName(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmail(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPassword(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"passwordCheck\") {\r\n            setPasswordCheck(e.target.value)\r\n        }\r\n    }\r\n\r\n    const onChangeReport = e => {\r\n        setReport(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (displayName && userObj.displayname !== displayName) {\r\n            await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n                displayName: displayName\r\n            }).then(() => {\r\n                userObj.updateProfile({\r\n                    displayName\r\n                })\r\n                refreshUser();\r\n                setTimeout(() => {\r\n                    alert(\"이름이 성공적으로 변경되었습니다 :)\")\r\n                })\r\n            })\r\n            setDisplayName(\"\");\r\n        };\r\n    };\r\n\r\n    const onSubmitEmail = async (e) => {\r\n        e.preventDefault();\r\n        if (window.confirm(`${email}로 로그인 코드를 변경할까요?`)) {\r\n        await authService.currentUser.updateEmail(email).then(()=>{\r\n                alert(\"코드 변경에 성공했습니다.\", email)\r\n                refreshUser();\r\n                setEmail(\"\");\r\n        }).catch((e) => {\r\n            setError(e.message);\r\n        })\r\n    }\r\n    }\r\n\r\n    const onSubmitPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (password === passwordCheck) {\r\n            if (window.confirm(\"비밀번호를 변경할까요?\")) {\r\n                await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n                    isPassword: true,\r\n                })\r\n                authService.currentUser.updatePassword(password).then(()=>{\r\n                    alert(\"비밀번호 변경에 성공했습니다.\")\r\n                    refreshUser();\r\n                    setPassword(\"\");\r\n                    setPasswordCheck(\"\");\r\n                    setError('');\r\n                }).catch((e) => {\r\n                    setError(e.message);\r\n                })\r\n        }\r\n        } else {\r\n            setError('비밀번호가 다릅니다.');\r\n        }\r\n    }\r\n\r\n    const onReport = async e => {\r\n        e.preventDefault();\r\n        if (report) { \r\n            const reportObj = {\r\n            report,\r\n            userId : userObj.uid,\r\n            createdAt : Date.now()\r\n        }\r\n        dbService.collection(\"reports\").add(reportObj)\r\n        alert(\"성공적으로 제출되었습니다. 감사합니다 :)\")\r\n        setReport('');\r\n    }\r\n    }\r\n\r\n    const onClick = e =>{\r\n        e.preventDefault();\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setNameState(!nameState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmailState(!emailState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPasswordState(!passwordState)\r\n        }\r\n    }\r\n    \r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>\r\n                {userObj.displayName}의 서랍장\r\n            </Title>\r\n            <ProfileContainer>\r\n                {!(emailState | passwordState) && \r\n                <> \r\n                <ProfileLabel name=\"name\" onClick={onClick}>이름 바꾸기</ProfileLabel>\r\n                <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                </>\r\n                }\r\n                {nameState &&\r\n                <ProfileForm onSubmit={onSubmit}>\r\n                    <ProfileInput required name=\"name\" onChange={onChange} value={displayName} type=\"text\" />\r\n                    <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\", opacity: \"80%\"}}>이름을 바꿔도, 친구들은 이전 이름을 알 수 있습니다.</ProfileLabel>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"name\" />\r\n                </ProfileForm>\r\n                }\r\n                {userObj.isPassword \r\n                ? !(nameState | passwordState) && \r\n                    <>\r\n                    <ProfileLabel name=\"email\" onClick={onClick}>접속 코드 변경</ProfileLabel>\r\n                    <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                    </>\r\n                : null\r\n                }\r\n                {emailState &&\r\n                <ProfileForm onSubmit={onSubmitEmail}>\r\n                    <ProfileInput required name=\"email\" onChange={onChange} value={email} type=\"email\" />\r\n                    <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\"}}>접속코드는 이메일 형태여야 합니다.</ProfileLabel>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"email\" />\r\n                    <Error>{error}</Error>\r\n                </ProfileForm>\r\n                }\r\n                {!(nameState | emailState) && \r\n                <>\r\n                    <ProfileLabel name=\"password\" onClick={onClick}>{userObj.isPassword ? \"비밀번호 바꾸기\" : \"비밀번호 설정하기\"}</ProfileLabel>\r\n                    {passwordState && <hr style={{width:\"70%\", opacity:\"70%\"}} />}\r\n                </>\r\n                }\r\n                {passwordState &&\r\n                <PasswordForm onSubmit={onSubmitPassword}>\r\n                    <ProfileBox>\r\n                        <ProfileLabel name=\"password\">비밀번호 : </ProfileLabel>\r\n                        <ProfileInput required name=\"password\" onChange={onChange} value={password} type=\"password\" />\r\n                    </ProfileBox>\r\n                    <ProfileBox>\r\n                        <ProfileLabel name=\"passwordCheck\">비밀번호 확인 : </ProfileLabel>\r\n                        <ProfileInput required name=\"passwordCheck\" onChange={onChange} value={passwordCheck} type=\"password\" />\r\n                    </ProfileBox>\r\n                    <Error>{error}</Error>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"password\" />\r\n                </PasswordForm>\r\n                }\r\n            </ProfileContainer>\r\n            <BtnContainer>\r\n                <ManualBtn onClick={onClickManual}>서랍장 사용 설명서</ManualBtn>\r\n                <CreditBtn onClick={onClickCredit}>\r\n                    명예의 전당\r\n                    <Crown>\r\n                        <FontAwesomeIcon icon={faCrown } />\r\n                    </Crown>\r\n                </CreditBtn>\r\n                <PurchaseBtn target=\"_blank\" href=\"https://smartstore.naver.com/myowndrawer/products/5772880639\">책 선물 & 구매하러 가기</PurchaseBtn>\r\n            </BtnContainer>\r\n            <QnaContainer>\r\n                <QnaLabel>문의하기 & 버그리포트</QnaLabel>\r\n                <QnaInput onChange={onChangeReport} value={report}type=\"text\" />\r\n                <QnaSubmitBtn onClick={onReport} >문의하기</QnaSubmitBtn>\r\n            </QnaContainer>\r\n            <LogOutBtn onClick={onLogOut}>Logout</LogOutBtn>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Settings;\r\n  ","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;    \r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst FriendList = styled.div`\r\n    width: 100%;\r\n    padding: 3px 0;\r\n    max-height: 25vh;\r\n    overflow: auto;\r\n    ::-webkit-scrollbar {\r\n        width: 7px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: rgba(255,255,255,0.7);\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst Friend = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: white;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FriendRight = styled.div`\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst FriendName = styled.div`\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98)\r\n    }\r\n`;\r\n\r\nconst FriendCode = styled.div``;\r\n\r\nconst FriendIcon = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 5px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst Notice = styled.div`\r\n    color: rgba(0,0,0,0.5);\r\n    margin-top: 15px;\r\n    font-size: 0.9rem;\r\n    text-align: center;\r\n    line-height: 130%;\r\n`;\r\n\r\nconst Friends = ({userObj, refreshFriends, getFriendLoading, loading}) => {\r\n    const [friends, setFriends] = useState([]);\r\n    const [friendsId, SetFriendsId] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getFriends = async () => {\r\n        if(userObj.friends && userObj.friends.length !== 0) {\r\n            await dbService.collection(\"users\").where(\"uid\", \"in\", userObj.friends).onSnapshot(\r\n            snapshot => {\r\n                const friendArray = snapshot.docs.map(doc => ({...doc.data()})\r\n                )\r\n                let friendIdArray = [];\r\n                snapshot.docs.forEach(doc => {\r\n                    friendIdArray.push(doc.data().uid)\r\n                })\r\n                setFriends(friendArray)\r\n                SetFriendsId(friendIdArray)\r\n            })\r\n        getFriendLoading(true)\r\n        } else {\r\n            setFriends([]);\r\n            getFriendLoading(true)\r\n        }\r\n    }\r\n\r\n    const onClickUser = (e) => {\r\n        history.push(`/useranswer/${e.target.id}`)\r\n    }\r\n      \r\n    const onDeleteFriend = async (friend) => {\r\n        const newFriends = friendsId.filter(data => data !== friend.uid)\r\n        await dbService.collection(\"users\").doc(`${userObj.uid}`).update(\r\n            {friends : newFriends}\r\n        )\r\n        .then(() => {\r\n            console.log(newFriends)\r\n            refreshFriends(newFriends);\r\n            alert(`${friend.displayName}님을 서랍장에서 꺼냈습니다.`)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends();\r\n    }, [])\r\n    return (\r\n        <>\r\n        {loading ?\r\n\r\n            <Container>\r\n            <Title>내가 아끼는 누군가들</Title>\r\n            <hr />\r\n            <FriendList>\r\n                {friends.length !== 0 \r\n                ? friends.map(friend => (\r\n                    <Friend key={friend.uid}>\r\n                        <FriendName id={friend.uid} onClick={onClickUser}>\r\n                            {friend.displayName}\r\n                        </FriendName>\r\n                        <FriendRight>                        \r\n                            <FriendCode>\r\n                            #{friend.uid.slice(-4).toLowerCase()}\r\n                            </FriendCode>\r\n                            <FriendIcon>\r\n                                <FontAwesomeIcon onClick={() => {\r\n                                    if (window.confirm(`${friend.displayName}님을 목록에서 삭제하시겠어요?`)) {\r\n                                        onDeleteFriend(friend)\r\n                                    }}\r\n                                    } icon={faTrashAlt} size=\"sm\" />\r\n                            </FriendIcon>\r\n                        </FriendRight>\r\n                    </Friend>\r\n                ))\r\n                : <Notice>다른 사람의 답변을 통해 <br /> 다른 누군가의 서랍장을 추가 할 수 있어요.</Notice>\r\n                }\r\n            </FriendList>\r\n        </Container>\r\n            : null\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Friends from \"../components/Friends\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 50px;\r\n    padding: 10px 0; \r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n    margin: 20px;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst Community = ({userObj, refreshFriends, refreshBookmarks, noteData}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [friendLoading, setFriendLoading] = useState(false);\r\n    const [someoneAnswers, setSomeoneAnswers] = useState('');\r\n\r\n    const getFriendLoading = (loading) => {\r\n        setFriendLoading(loading);\r\n    }\r\n\r\n    const getSomeoneAnswers = async () => {\r\n        if (userObj.bookmarks) {\r\n            let someoneAnswerArray = [];\r\n            userObj.bookmarks.forEach(async (element) => {\r\n                await dbService.collection(\"answers\").where(\"answerId\", \"==\", element)\r\n                .get()\r\n                .then(snapshot => {\r\n                    someoneAnswerArray.push(...snapshot.docs\r\n                        .map(\r\n                            doc => ({\r\n                                id: doc.answerId,\r\n                                ...doc.data()    \r\n                            })\r\n                        )\r\n                    )\r\n                }).catch((e) => {\r\n                    throw new Error('책갈피 로딩 에러');\r\n                })\r\n            })\r\n            \r\n            someoneAnswerArray.sort((a, b) => {\r\n                if(a.createdAt > b.createdAt) return -1;\r\n                if(a.createdAt === b.createdAt) return 0;\r\n                if(a.createdAt < b.createdAt) return 1;\r\n            });\r\n            setSomeoneAnswers(someoneAnswerArray);\r\n        } else {\r\n            setSomeoneAnswers([]);\r\n        }\r\n        setIsLoading(!isLoading);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getFriendLoading();\r\n        getSomeoneAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? <Loading />\r\n            : \r\n                <>\r\n                    <Friends userObj={userObj} loading={friendLoading} refreshFriends={refreshFriends} getFriendLoading={getFriendLoading} />\r\n                    {/* <Notes userObj={userObj} noteData={noteData} /> */}\r\n                    {someoneAnswers && \r\n                    <>\r\n                        <Title>\r\n                            책갈피함\r\n                        </Title>\r\n                        {someoneAnswers.map(answer => \r\n                            <Answer key={answer.answerId} answer={answer} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} userObj={userObj}/>\r\n                        )}\r\n                    </>\r\n                    }\r\n                </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Community;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Loading from \"../components/Loading\";\r\nimport ProfileBio from \"../components/ProfileBio\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Writer = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    font-family: Jeju myeongjo;\r\n    margin-top: 50px;\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 0.7rem;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst UserAnswers = ({userObj, refreshFriends, refreshBookmarks}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [answers, setAnswers] = useState([]);\r\n    const { id } = useParams();\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n  \r\n      const addPage = () => {\r\n        if (currentPage*5 >= answers.length) {\r\n          getAnswers();\r\n        }\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n    \r\n    const getAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"userId\", \"==\", `${id}`).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).get()\r\n        .then(snapShot => {\r\n          const answerData = snapShot.docs.map(doc => ({\r\n            ...doc.data()\r\n          }))\r\n          answerData.sort((a, b) => {\r\n            if(a.createdAt > b.createdAt) return -1;\r\n            if(a.createdAt === b.createdAt) return 0;\r\n            if(a.createdAt < b.createdAt) return 1;\r\n          });\r\n          setAnswers(answerData)\r\n          setIsLoading(false);\r\n        }\r\n        )\r\n      }\r\n      useEffect(() => {\r\n        getAnswers();\r\n      }, [])\r\n\r\n    return (\r\n        <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        :\r\n        <>\r\n        <Writer>{answers[0].userName}의 대답들</Writer>\r\n        <ProfileBio userObj={userObj} refreshBio='' isProfile={false} />\r\n        {currentPosts(answers).map((answer, index) => <Answer key={index} answer={answer} userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />)}\r\n        {currentPage*5 <= answers.length \r\n        ?\r\n        <AddBtn onClick={addPage}>\r\n            <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n        </AddBtn>\r\n        : <LastAnswer>\r\n            마지막 대답입니다.\r\n        </LastAnswer>\r\n        }\r\n        </>\r\n        }\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default UserAnswers;","import { useEffect } from \"react\";\r\nimport { authService } from \"../fBase\";\r\n\r\nconst SignOut = () => {\r\n    useEffect(() => {\r\n        authService.signOut();\r\n    }, [])\r\n    return (\r\n        \"Signout\"\r\n    )\r\n}\r\n\r\nexport default SignOut;","export const Sponsor = {\r\n    thinkShare : [\r\n        \"원동혁\",\r\n        \"정대림\",\r\n        \"김상목\",\r\n        \"박건휘\",\r\n        \"박서윤\",\r\n        \"윤수민\",\r\n        \"백서연\",\r\n        \"송호재\",\r\n        \"임태홍\",\r\n        \"전윤호\",\r\n        \"최수연\",\r\n        \"김윤선\",\r\n        \"김진용\",\r\n        \"최아룡\",\r\n        \"최지수\",\r\n        \"송시내\",\r\n        \"오세은\",\r\n        \"오승섭\",\r\n        \"이희수\",\r\n        \"김민선\",\r\n        \"나소영\",\r\n        \"백승아\",\r\n        \"신우희\",\r\n        \"조원진\",\r\n        \"한주경\",\r\n        \"박태훈\",\r\n        \"박영민\",\r\n        \"김민지\",\r\n        \"이 은\"\r\n    ],\r\n    sponsor: {\r\n        \"#1\" : [\r\n            { \r\n                comment : \"원진 작가님 항상 응원합니다♥\",\r\n                writer : \"백승아\",\r\n            },\r\n            { \r\n                comment : \"일일이육\",\r\n                writer : \"서연\",\r\n            },\r\n            { \r\n                comment : \"\",\r\n                writer : \"예림\",\r\n            },\r\n            { \r\n                comment : \"청춘(靑春): 새싹이 파랗게 돋아나는 봄철이라는 뜻으로, 십 대 후반에서 이십 대에 걸치는 인생의 젊은 나이 또는 그런 시절을 이르는 말. 예문) 주인장의 청춘을 함께할 수 있어 좋습니다.\",\r\n                writer : \"이랑\",\r\n            },\r\n            { \r\n                comment : \"반갑습니다:)\",\r\n                writer : \"zzzzz\",\r\n            },\r\n            { \r\n                comment : \"또다시 싸워 이길 나의 기쁨 나의 노래야\",\r\n                writer : \"우너진\",\r\n            },\r\n            { \r\n                comment : \"새롭게 바뀌려고 노력하기 위해 글을 남김\",\r\n                writer : \"장우태\",\r\n            },\r\n            { \r\n                comment : \"감사합니다.\",\r\n                writer : \"백지원\",\r\n            },\r\n            { \r\n                comment : \"2021년, 나도 나만의 서랍장도 좋은일만 생기길 !\",\r\n                writer : \"ck\",\r\n            },\r\n            { \r\n                comment : \"정말 멋있는 사람이 만든 멋있는 책을 갖게되어 영광입니다 :)\",\r\n                writer : \"박주현\",\r\n            },\r\n            { \r\n                comment : \"다들 매일이 소중하셨으면 좋겠어요 :-)\",\r\n                writer : \"김민선\",\r\n            },\r\n            { \r\n                comment : \"Done is better than perfect\",\r\n                writer : \"SaTivus\",\r\n            },\r\n            { \r\n                comment : \"다들 어떻게든 버티면서 살아봅시다.\",\r\n                writer : \"금산모기\",\r\n            },\r\n            { \r\n                comment : \"\",\r\n                writer : \"변현경\",\r\n            },\r\n        ],\r\n        \"#2\" : [\r\n            { \r\n                comment : \"\",\r\n                writer : \"구수경\",\r\n            },\r\n            { \r\n                comment : \"언제든 꺼내볼 수 있게 자신의 서랍장을 잘 정리할 것. 그것을 잊지 않는 삶을 살길.\",\r\n                writer : \"HONGZZANG_\",\r\n            },\r\n            { \r\n                comment : \"이렇게라도 현생의 명예를 챙길 수 있어서 다행이다\",\r\n                writer : \"김민정\",\r\n            },\r\n            { \r\n                comment : \"서랍장에서 가장 힘들때 힘을 내는 시간을 가졌었어요. 앞으로 제 인생에 서랍장이 계속 함께하기를 바래요.\",\r\n                writer : \"에이피\",\r\n            },\r\n            { \r\n                comment : \"번창하세요.\",\r\n                writer : \"그로잉마인드\",\r\n            },\r\n            { \r\n                comment : \"앙\",\r\n                writer : \"광기\",\r\n            },\r\n            { \r\n                comment : \"관경아, 멀리서나마 응원할게. :)\",\r\n                writer : \"별명\",\r\n            },\r\n            { \r\n                comment : \"다들 건강하기를\",\r\n                writer : \"정인아\",\r\n            },\r\n            { \r\n                comment : \"다들 건강하기를\",\r\n                writer : \"정인아\",\r\n            },\r\n            { \r\n                comment : \"등록 희망 ㅎㅎㅎ\",\r\n                writer : \"기현\",\r\n            },\r\n            { \r\n                comment : \"기억되고싶은 시간이 되길\",\r\n                writer : \"Ram\",\r\n            },\r\n            { \r\n                comment : \"생각이 많아지게 하는 책\",\r\n                writer : \"이재령\",\r\n            },\r\n            { \r\n                comment : \"응원합니다!! 화이팅!\",\r\n                writer : \"허재경\",\r\n            },\r\n            { \r\n                comment : \"주인장님, 멋지십니다. 응원합니다\",\r\n                writer : \"hl\",\r\n            },\r\n            { \r\n                comment : \"여러분 모두 나만의 서랍장을 통해 생각을 정리하면서  성장하셨으면 좋겠습니다!\",\r\n                writer : \"이은지\",\r\n            },\r\n            { \r\n                comment : \"모두 생기있는 삶을 살아가길 바랍니다 :-)\",\r\n                writer : \"ㅡ\",\r\n            },\r\n            { \r\n                comment : \"그럼에도 불구하고, 당신의 기억하고 싶은 하루를 바랍니다.\",\r\n                writer : \"interstellar\",\r\n            },\r\n            { \r\n                comment : \"올해는 좋은 생각만 했으면 바란다.\",\r\n                writer : \"최승철\",\r\n            },\r\n            { \r\n                comment : \"행복은 찾아오는 것이 아니라, 내가 찾아가는 길일 것입니다.이 서랍장이 행복을 찾아가는 무수한 길 중 한 가지 길이 되기를 바랍니다.\",\r\n                writer : \"지렁잉\",\r\n            },\r\n            { \r\n                comment : \"생각하는 동안에는 어떤 감정에도 휘둘리지 않고 그냥 담담하게 받아들일 수 있었으면 좋겠어요. 다들 흘러가는 대로 행복해지시면 좋겠습니다.\",\r\n                writer : \"임소진\",\r\n            },\r\n            { \r\n                comment : \"어느 때나 행복해주세요.\",\r\n                writer : \"익명\",\r\n            },\r\n            { \r\n                comment : \"2021 화이팅! 원하는 일 모두 이루길\",\r\n                writer : \"AEMIYAGUGIJJADA\",\r\n            },\r\n            { \r\n                comment : \"복잡한 생각을 정리하면 행복이 조금이나마 다가올까 싶다\",\r\n                writer : \"최슬기\",\r\n            },\r\n            { \r\n                comment : \"앞으로도 잘할 수 있을거야 힘내자!!\",\r\n                writer : \"Penna\",\r\n            },\r\n            { \r\n                comment : \"모두들 행복하세요?\",\r\n                writer : \"소연\",\r\n            },\r\n            { \r\n                comment : \"모두 생기있는 삶을 살아가길 바랍니다 :-)\",\r\n                writer : \"호핑피\",\r\n            },\r\n            { \r\n                comment : \"주인장은 기뻐하고, 누군가는 기다린다. 행복하셨으면 좋겠습니다??\",\r\n                writer : \"시작은달콤파게\",\r\n            },\r\n            { \r\n                comment : \"나는 베리굿이다. 너 또한 그렇다.\",\r\n                writer : \"김민지\",\r\n            },\r\n            { \r\n                comment : \"아 형님 여기다가 투자하면 된다고요?\",\r\n                writer : \"keenk\",\r\n            },\r\n            { \r\n                comment : \"정리되지 않은 생각들로 힘들어 하던 당신에게 보냅니다.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"많은 생각들로 밤새우는 당신에게 도움이 되길 바래요.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"정리되지 않은 생각으로 힘들어 하는 당신에게 힘이 되길.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"읽는 이의 마음의 온도를 높여주는 책난로가 되기를.\",\r\n                writer : \"심찬영\",\r\n            },\r\n            { \r\n                comment : \"이 책을 읽게 될  많은 분들이 또 다른 '누군가'가 되어 자신의 생각을 뒤돌아보며 표현해보는 시간이 되길 바랍니다. 제가 그랬던 것 처럼요!\",\r\n                writer : \"이희수\",\r\n            },\r\n        ],\r\n        \"#3\" : [\r\n            { \r\n                comment : \"가끔은 해도 돼요.\",\r\n                writer : \"지용수\",\r\n            },\r\n        ],\r\n        \"#4\" : [\r\n            { \r\n                comment : \"나는 신이다 나는 고로 존재한다\",\r\n                writer : \"윤현식\",\r\n            },\r\n            { \r\n                comment : \"나는 생각한다 고로 서랍장을 이용한다\",\r\n                writer : \"윤현식\",\r\n            },\r\n            { \r\n                comment : \"형 사업번창하면 좋겠어요\",\r\n                writer : \"윤현식\",\r\n            },\r\n        ],\r\n        \"#5\" : [\r\n            { \r\n                comment : \"안녕하세요 반갑습니다 \",\r\n                writer : \"최수연\",\r\n            },\r\n            { \r\n                comment : \"명예의 전당에 뭐라 쓸꺼라 물어보신다면! 대답해 드리는게 인지상정! 이 책의 발매를 위해!\",\r\n                writer : \"오해택\",\r\n            },\r\n            { \r\n                comment : \"주인장의 성공을 바랍니다.\",\r\n                writer : \"세월\",\r\n            },\r\n            { \r\n                comment : \"서랍장에 들어간다면 귀퉁이 자리가 좋겠어요. 모든 기억을 한 눈에 볼 수 있으니까요.\",\r\n                writer : \"ysu\",\r\n            },\r\n        ]\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n    const intervalRef = useRef(null);\r\n    const savedCallback = useRef(callback);\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n    useEffect(() => {\r\n      const tick = () => savedCallback.current();\r\n      if (typeof delay === 'number') {\r\n        intervalRef.current = window.setInterval(tick, delay);\r\n        return () => window.clearInterval(intervalRef.current);\r\n      }\r\n    }, [delay]);\r\n  }","export default __webpack_public_path__ + \"static/media/Soul and Mind - E's Jammy Jams.43e78e83.mp3\";","import { faBackward, faForward, faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Sponsor } from \"../components/DB/Sponsor\";\r\nimport { useInterval } from \"../hooks/UseInterval\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport bgm from \"../music/Soul and Mind - E's Jammy Jams.mp3\"\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: black;\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    color: white;\r\n    padding: 105vh 0;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst PlayBox = styled.button`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    bottom: 20px;\r\n    opacity: 30%;\r\n    background-color: transparent;\r\n    border: none;\r\n    transition: 1s all ease-in-out;\r\n    :hover {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst PlayInput = styled.input`\r\n  -webkit-appearance: none;\r\n  margin-right: 15px;\r\n  width: 100%;\r\n  height: 6px;\r\n  border-radius: 7px;\r\n  background-size: 50% 100%;\r\n  background-repeat: no-repeat;\r\n  background-color: white;\r\n  ::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    background: white;\r\n    cursor: ew-resize;\r\n    box-shadow: 0 0 2px 0 #555;\r\n    transition: background .3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst PlayBtnBox = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n    gap: 5px;\r\n`;\r\n\r\nconst PlayBtn = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n    color: white;\r\n    transition: 1s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 1.5rem;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst ThanksContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: auto;\r\n    width: 100%;\r\n`;\r\n\r\nconst ThanksTitle = styled.h2`\r\n    font-size: 1.3rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ThanksName = styled.h3`\r\n    width: 90%;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n    word-break: keep-all;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst Name = styled.h3`\r\n    display: flex;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst White = styled.h3`\r\n    color: white;\r\n    margin-left: 5px;\r\n`;\r\n\r\nconst Thankyou = styled.div`\r\n    position: fixed;\r\n    top: 40vh;\r\n    color: white;\r\n    transition: 1s all ease-in-out;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst Credit = () => {\r\n    const [init, setInit] = useState(false);\r\n    const [speed, setSpeed] = useState(0);\r\n    const [scroll, setScroll] = useState(0);\r\n    const [commentState, setCommentState] = useState(false);\r\n    const [bgmJazz] = useState(new Audio(bgm));\r\n    let currentScroll;\r\n\r\n    const onScrollChange = e => {\r\n        e.preventDefault();\r\n        setScroll(e.target.value)\r\n        window.scrollTo(0, e.target.value);\r\n    }\r\n\r\n    const onClickBackward = e => {\r\n        if (isMobile) {\r\n            if (speed > -100) {\r\n                setSpeed(speed - 10)\r\n            }\r\n        } else {\r\n            if (speed > -10) {\r\n                setSpeed(speed - 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onClickPlay = e => {\r\n        if (speed === 0) {\r\n            if (!init) {\r\n                setInit(true)\r\n                setSpeed(isMobile ? 10 : 1)\r\n                setTimeout(() => {\r\n                    bgmJazz.play();\r\n                }, 1000)\r\n            } else {\r\n                setSpeed(isMobile ? 10 : 1)\r\n                bgmJazz.play();\r\n            }\r\n        } else if (speed !== 0) {\r\n            setSpeed(0);\r\n            bgmJazz.pause();\r\n        }\r\n    }\r\n\r\n    const onClickForward = e => {\r\n        if (isMobile) {\r\n            if (speed < 100) {\r\n                setSpeed(speed + 10)\r\n            } \r\n        } else {\r\n            if (speed < 10) {\r\n                setSpeed(speed + 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        if (speed !== 0 && window.scrollY + window.innerHeight + 1 <= document.body.scrollHeight) {\r\n            scriptPlay();\r\n        }\r\n        if (window.scrollY + window.innerHeight + 100 >= document.body.scrollHeight) {\r\n            setCommentState(true);\r\n        } else {\r\n            setCommentState(false);\r\n        }\r\n    }, 30)\r\n\r\n    useInterval(() => {\r\n        setScroll(window.scrollY)\r\n    }, 500)\r\n\r\n    const scriptPlay = () => {\r\n        window.scrollBy({ top: `${speed}`, behavior: 'smooth'});\r\n        currentScroll = window.scrollY;\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            clearInterval();\r\n            bgmJazz.pause();\r\n        }\r\n    }, [])\r\n    \r\n    return (\r\n        <Container>\r\n            <PlayBox style={{bottom: init? \"20px\" : \"50vh\"}} >\r\n                {init && \r\n                <PlayInput max={document.body.scrollHeight - window.innerHeight} min=\"0\" value={window.scrollY} onChange={onScrollChange} type=\"range\" />}\r\n                <PlayBtnBox>\r\n                    {init && <PlayBtn onClick={onClickBackward}>\r\n                        <FontAwesomeIcon icon={faBackward} />\r\n                    </PlayBtn>}\r\n                    {speed === 0\r\n                    ?\r\n                    <PlayBtn style={{fontSize: !init && \"30px\"}} onClick={onClickPlay}>\r\n                        <FontAwesomeIcon icon={faPlay} />\r\n                    </PlayBtn>\r\n                    : \r\n                    <PlayBtn onClick={onClickPlay}>\r\n                        <FontAwesomeIcon icon={faPause} />\r\n                    </PlayBtn>\r\n                    }\r\n                    {init && \r\n                    <PlayBtn onClick={onClickForward}>\r\n                        <FontAwesomeIcon icon={faForward} />\r\n                    </PlayBtn>}\r\n                </PlayBtnBox>\r\n            </PlayBox>\r\n            <Title style={{opacity: !init && \"0\"}}>서랍장 명예의 전당</Title>\r\n            <ThanksContainer style={{opacity: !init && \"0\"}}>\r\n                <ThanksTitle>후원해주신 분들</ThanksTitle>\r\n                {Sponsor.sponsor[\"#1\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}\r\n                {Sponsor.sponsor[\"#2\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}\r\n                {Sponsor.sponsor[\"#3\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}\r\n                {Sponsor.sponsor[\"#4\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}    \r\n                {Sponsor.sponsor[\"#5\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}                            \r\n            </ThanksContainer>\r\n            <ThanksContainer>\r\n                <ThanksTitle>생각을 함께 나눠주신 분들</ThanksTitle>\r\n                {Sponsor.thinkShare.map(thinkperson => (\r\n                    <ThanksName>\r\n                    <Name>{thinkperson}</Name>님\r\n                    </ThanksName>\r\n                ))}\r\n            </ThanksContainer>\r\n            <ThanksContainer>\r\n                <ThanksTitle>도움을 주신 분들</ThanksTitle>\r\n                <ThanksName>수석 디자이너 <Name>경민이</Name></ThanksName>\r\n                <ThanksName>창동관 이웃<Name>영민이</Name></ThanksName>\r\n                <ThanksName>많은 도움을 준<Name>태일 형</Name></ThanksName>\r\n                <ThanksName>창업 초기부터 많은 도움 주신<Name>허재경 대표님</Name></ThanksName>\r\n                <ThanksName>SAYU PARTNER-S<Name>준성이형</Name></ThanksName>\r\n                <ThanksName>사람에게 정 붙일 수 있게 도와준<Name>태훈이형</Name></ThanksName>\r\n                <ThanksName>여러가지 정보들 주시고 응원해주신<Name>창업 동아리 선생님들</Name></ThanksName>\r\n                <ThanksName>많은 동기부여 주신<Name>대표님들</Name></ThanksName>\r\n                <ThanksName>응원해준<Name>친구들</Name></ThanksName>\r\n                <ThanksName>저보고 할 수 있다고 해주신<Name>모든 분들</Name></ThanksName>\r\n            </ThanksContainer>\r\n            <Thankyou style={{opacity: commentState ? \"100%\" : \"0%\"}}>\r\n                아직 무언가를 이뤄낸건 아니지만, \r\n                <Thankyou style={{marginTop: \"30px\", opacity: commentState ? \"100%\" : \"0%\", transitionDelay: \"1s\"}}>\r\n                    덕분에 여기까지라도 올 수 있었습니다.\r\n                </Thankyou>\r\n                <Thankyou style={{marginTop: \"60px\", opacity: commentState ? \"100%\" : \"0%\", transitionDelay: \"2s\"}}>\r\n                    정말 감사합니다. 행복하시면 좋겠습니다.\r\n                </Thankyou>\r\n                <Thankyou style={{marginTop: \"90px\", opacity: commentState ? \"100%\" : \"0%\", transitionDelay: \"3s\"}}>\r\n                    서랍장 주인장 드림\r\n                </Thankyou>\r\n            </Thankyou>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Credit;","import { faCommentAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    background-color: rgba(255,255,255,0.7);\r\n    width: 95%;\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst NoteTitle = styled.h3`\r\n    font-size: 0.9rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst NoteContent = styled.div`\r\n    display: flex;\r\n    gap: 5px;\r\n    font-size: 0.9rem;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NoteWriter = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NoteTime = styled.span`\r\n    top: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NotesList = ({noteData}) => {\r\n    const history = useHistory();\r\n\r\n    const onClickAnswer = () => {\r\n        history.push(`/notes/user/${noteData.writer}/${noteData.answerId}`)\r\n    }\r\n\r\n    const Time = new Date(noteData.createdAt) \r\n    const year = Time.getFullYear();\r\n    const month = Time.getMonth() + 1;\r\n    const day = Time.getDate();\r\n    const date = `${year}년 ${month < 10 ? \"0\" + month : month}월 ${day < 10 ? \"0\"+day : day}일`\r\n    const lastTime = (Date.now() - noteData.createdAt) / 1000 / 60\r\n    const lastMinutes = Math.round(lastTime)\r\n    const lastHours = Math.round(lastTime / 60)\r\n    const lastDays = Math.round(lastHours / 24)\r\n\r\n    return (\r\n        <Container>\r\n            <NoteTitle>\r\n                '{noteData.answer.length > 9 ? noteData.answer.slice(0, 10) + \"...\" : noteData.answer}'에서 시작된 쪽지\r\n            </NoteTitle>\r\n            <NoteContent onClick={onClickAnswer}>\r\n                <FontAwesomeIcon icon={faCommentAlt} size=\"sm\" /> {noteData.noteContent}\r\n            </NoteContent>\r\n            <NoteTime>\r\n                {lastMinutes < 60 \r\n                    ? `${lastMinutes}분 전` \r\n                    : lastHours < 24 \r\n                    ? `${lastHours}시간 전`\r\n                    : lastDays > 7\r\n                        ? `${date}`\r\n                        : `${lastDays}일 전`\r\n                }\r\n            </NoteTime>\r\n            <NoteWriter>\r\n                - {noteData.writerName}\r\n            </NoteWriter>    \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotesList;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../components/Loading\";\r\nimport NotesList from \"../components/NotesList\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding-top: 30px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst NotesContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst NotesAnswer = ({userObj}) => {\r\n    const {id} = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useState('');\r\n    const [notesCategory, setNotesCategory] = useState([]);\r\n\r\n    const getNotes = () => {\r\n        dbService.collection(\"notes\").where(\"receiver\", \"==\", `${userObj.uid}`).where(\"writer\", \"==\", `${id}`).onSnapshot(querySnapshot => {\r\n            let notesCategoryData = [];\r\n            let notesCategoryAnswer = [];\r\n            const notesArray = querySnapshot.docs.map(doc => ({\r\n                ...doc.data()\r\n            })\r\n            )\r\n            notesArray.sort((a, b) => {\r\n                if(a.createdAt > b.createdAt) return -1;\r\n                if(a.createdAt === b.createdAt) return 0;\r\n                if(a.createdAt < b.createdAt) return 1;\r\n            });\r\n            for (let i = 0; i < notesArray.length; i++) {\r\n                if (!notesCategoryData.includes(notesArray[i].answerId)) {\r\n                    notesCategoryData.push(notesArray[i].answerId);\r\n                    notesCategoryAnswer.push(notesArray[i]);\r\n                }\r\n            }\r\n            setUserName(notesArray[0].writerName)\r\n            setNotesCategory(notesCategoryAnswer)\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? <Loading />\r\n            :\r\n            <>\r\n            <Title>{userName}님과의 쪽지들</Title>\r\n            <NotesContainer>\r\n                {notesCategory.map(category => \r\n                    <NotesList noteData={category} />\r\n                )\r\n                }\r\n            </NotesContainer>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotesAnswer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    background-color: rgba(255,255,255,0.7);\r\n    min-width: 120px;\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst NoteContent = styled.div`\r\n    font-size: 1rem;\r\n    padding: 10px 0;\r\n`;\r\n\r\nconst NoteWriter = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NoteTime = styled.span`\r\n    top: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NoteDetail = ({noteData, userObj}) => {\r\n\r\n    const Time = new Date(noteData.createdAt) \r\n    const year = Time.getFullYear();\r\n    const month = Time.getMonth() + 1;\r\n    const day = Time.getDate();\r\n    const date = `${year}년 ${month < 10 ? \"0\" + month : month}월 ${day < 10 ? \"0\"+day : day}일`\r\n    const lastTime = (Date.now() - noteData.createdAt) / 1000 / 60\r\n    const lastMinutes = Math.round(lastTime)\r\n    const lastHours = Math.round(lastTime / 60)\r\n    const lastDays = Math.round(lastHours / 24)\r\n\r\n    return (\r\n        <Container style={{alignSelf: noteData.writer === userObj.uid ? \"flex-end\" : \"flex-start\"}} >\r\n            <NoteContent>\r\n                {noteData.noteContent}\r\n            </NoteContent>\r\n            <NoteTime>\r\n                {lastMinutes < 60 \r\n                    ? `${lastMinutes}분 전` \r\n                    : lastHours < 24 \r\n                    ? `${lastHours}시간 전`\r\n                    : lastDays > 7\r\n                        ? `${date}`\r\n                        : `${lastDays}일 전`\r\n                }\r\n            </NoteTime>\r\n            <NoteWriter>\r\n                - {noteData.writerName}\r\n            </NoteWriter>    \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoteDetail;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../components/Loading\";\r\nimport NoteDetail from \"../components/NoteDetail\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding-top: 30px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst NotesContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    max-height: 80vh;\r\n`;\r\n\r\nconst NotesAnswer = ({userObj}) => {\r\n    const {id, answerId} = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [notesData, setNotesData] = useState('');\r\n    const [question, setQuestion] = useState('');\r\n\r\n    const getNotes = () => {\r\n        dbService.collection(\"notes\").where(\"receiver\", \"in\", [`${userObj.uid}`, `${id}`]).where(\"answerId\", \"==\", `${answerId}`).onSnapshot(querySnapshot => {\r\n            const notesArray = querySnapshot.docs.map(doc => ({\r\n                ...doc.data()\r\n            })\r\n            )\r\n            notesArray.sort((a, b) => {\r\n                if(a.createdAt < b.createdAt) return -1;\r\n                if(a.createdAt === b.createdAt) return 0;\r\n                if(a.createdAt > b.createdAt) return 1;\r\n            });\r\n            setNotesData(notesArray);\r\n            setQuestion(notesArray[0].answer);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? <Loading />\r\n            :\r\n            <>\r\n            <Title>{question}로부터 시작된 쪽지</Title>\r\n            <NotesContainer>\r\n                {notesData.map(note => (\r\n                    <NoteDetail noteData={note} userObj={userObj} />\r\n                ))}\r\n            </NotesContainer>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotesAnswer;","import { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Welcome = styled(animated.div)`\r\n    color: white;\r\n    font-size: 1.2rem;\r\n    text-align: center;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst Farewell = styled.div`\r\n    color: white;\r\n    font-size: 1.2rem;\r\n    text-align: center;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst ManualPic = styled.img`\r\n    height: 100vh;\r\n`;\r\n\r\nconst Page = styled.span`\r\n    position: fixed;\r\n    bottom: 20px;\r\n    left: 45%;\r\n    right: 45%;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1rem;\r\n    transition: all 0.5s ease-in-out;\r\n    font-family: Kyobo Handwriting;\r\n    width: 10%;\r\n`;\r\n\r\nconst StartBtn = styled.button`\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 15px;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1rem;\r\n    transition: all 0.5s ease-in-out;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst NextBtn = styled.button`\r\n    position: fixed;\r\n    top: 50%;\r\n    right: 10px;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst PrevBtn = styled.button`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 10px;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Manual = ({ userObj, refreshFirst }) => {\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(-1);\r\n\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            opacity: 1,\r\n            y: 0\r\n        }\r\n    })\r\n\r\n    const onClickNext = () => {\r\n        if (page < 15) setPage(page + 1);\r\n    }\r\n\r\n    const onClickPrev = () => {\r\n        if (page > -1) setPage(page - 1);\r\n    }\r\n\r\n    const onClickStart = async () => {\r\n        await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n            isFirst: false\r\n        })\r\n        refreshFirst(false);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {page === -1 && \r\n                <Welcome style={animation}>\r\n                    안녕하세요! <br />\r\n                    '누군가의 서랍장'에 오신 것을 <br />\r\n                    환영합니다!\r\n                </Welcome>\r\n            }\r\n            {page === 0 && \r\n                <Welcome style={animation}>\r\n                    끝까지 보지 않고 시작하시려면 <br />\r\n                    우측 상단의 '시작하기' 버튼을 <br />\r\n                    눌러주세요. 감사합니다. <br />\r\n                </Welcome>\r\n            }\r\n            {page > 14 &&\r\n                <Farewell>\r\n                    설명서는 설정 메뉴에서 <br />\r\n                    언제든지 다시 보실 수 있습니다. <br />\r\n                    감사합니다. 행복하시면 좋겠습니다 :)\r\n                </Farewell>\r\n            }\r\n            <StartBtn style={{bottom: page === 15 && \"-30%\", right: page === 15 && \"40%\"}} onClick={onClickStart}>시작하기</StartBtn>\r\n            {page !== -1 &&\r\n                <PrevBtn onClick={onClickPrev}>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                </PrevBtn>\r\n            }\r\n            {page !== 15 &&\r\n                <NextBtn onClick={onClickNext}>\r\n                    <FontAwesomeIcon icon={faChevronRight} />\r\n                </NextBtn>\r\n            }\r\n            {page > 0 && page < 15 &&\r\n                <>\r\n                    <ManualPic src={`https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/manual/${page}.jpg`} alt=\"\" />\r\n                    <Page>{`${page} / 14`}</Page>\r\n                </>\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Manual;","import { faPencilAlt, faSave, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    background: white;\r\n    opacity: 80%;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 5px;\r\n    color: black;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n    height: 1rem;\r\n`;\r\n\r\nconst Content = styled.div``;\r\n\r\nconst IconContainer = styled.div`\r\n    display: flex;\r\n    gap: 5px;\r\n    opacity: 70%;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    gap: 5px;\r\n    font-size: 0.7rem;\r\n`;\r\nconst Writer = styled.span``;\r\nconst Time = styled.span``;\r\n\r\nconst Comment = ({userObj, note}) => {\r\n    const [editState, setEditState] = useState(false);\r\n    const [editContent, setEditContent] = useState('');\r\n\r\n    const dttm = new Date(note.createdAt) \r\n    const year = dttm.getFullYear();\r\n    const month = dttm.getMonth() + 1;\r\n    const day = dttm.getDate();\r\n    const date = `${year}년 ${month < 10 ? \"0\"+month : month}월 ${day < 10 ? \"0\"+day : day}일`\r\n    const lastTime = (Date.now() - note.createdAt) / 1000 / 60\r\n    const lastMinutes = Math.round(lastTime)\r\n    const lastHours = Math.round(lastTime / 60)\r\n    const lastDays = Math.round(lastHours / 24)\r\n\r\n    const onChange = e => {\r\n        setEditContent(e.target.value);\r\n    }\r\n\r\n    const onClickEdit = () => {\r\n        if (!editState) {\r\n            setEditContent(note.noteContent);\r\n        } else if (editContent !== note.noteContent) {\r\n            window.confirm('메모를 수정하시겠어요?') &&\r\n            dbService.collection(\"notes\").doc(`${note.noteId}`).update({\r\n                noteContent: editContent\r\n            })\r\n        }\r\n        setEditState(!editState);\r\n    }\r\n\r\n    const onClickDelete = () => {\r\n        window.confirm('메모를 떼시겠어요?') &&\r\n        dbService.collection(\"notes\").doc(`${note.noteId}`).delete();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                {editState\r\n                    ? <EditInput onChange={onChange} value={editContent} />\r\n                    : note.noteContent\r\n                }\r\n            </Content>\r\n            <InfoContainer>\r\n                <Writer>\r\n                    {note.writerName}\r\n                </Writer>\r\n                <Time>\r\n                    {lastMinutes < 60 \r\n                    ? `${lastMinutes}분 전` \r\n                    : lastHours < 24 \r\n                    ? `${lastHours}시간 전`\r\n                    : lastDays > 7\r\n                        ? `${date}`\r\n                        : `${lastDays}일 전`\r\n                    }\r\n                    {note.editedAt && \"(수정됨)\"}\r\n                </Time>\r\n                {userObj.uid === note.writer && <IconContainer>\r\n                    <Icon onClick={onClickEdit}>\r\n                        {editState \r\n                        ? <FontAwesomeIcon icon={faSave} />\r\n                        : <FontAwesomeIcon icon={faPencilAlt} />\r\n                        }\r\n                    </Icon>\r\n                    <Icon onClick={onClickDelete}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Icon>\r\n                </IconContainer>}\r\n            </InfoContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Comment;","import { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Comment from \"../components/comment/Comment\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 90%;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst NotesConatiner = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  margin: 10px;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n  display: flex;\r\n  position: fixed;\r\n  bottom: 30px;\r\n  left: 20px;\r\n  border: none;\r\n  background: none;\r\n  color: white;\r\n  font-size: 1rem;\r\n  transition: all 0.5s ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst AnswerDetail = ({userObj, refreshFriends, refreshBookmarks}) => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answer, setAnswer] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  const getNotes = async () => {\r\n    dbService.collection(\"notes\").where(\"answerId\", \"==\", id).onSnapshot(querySnapshot => {\r\n      const data = querySnapshot.docs.map(doc => doc.data());\r\n      data.sort((a ,b) => \r\n        b.createdAt - a.createdAt\r\n      )\r\n      setNotes(data);\r\n    })\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const getAnswer = async () => {\r\n    await dbService.collection(\"answers\").where(\"answerId\", \"==\", `${id}`).get().then(querySnapshot => {\r\n       const data = querySnapshot.docs.map(doc => doc.data());\r\n       setAnswer(...data);\r\n      }).catch(error => {\r\n        console.log(\"error\", error)\r\n      })\r\n      getNotes();\r\n    }\r\n\r\n    useEffect(() => {\r\n      getAnswer();\r\n    }, [])\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        :\r\n        <>\r\n          <Title>\r\n            {answer.answer.slice(0,9)}{answer.answer.length > 9 ? \"...\" : \"\"}\r\n          </Title>\r\n          <Answer answer={answer} userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n          <NotesConatiner>\r\n            {notes.length !== 0 \r\n            ?\r\n            notes.map(note => <Comment key={note.noteId} userObj={userObj} note={note} />)\r\n            : \"아직 달린 메모가 없습니다.\"\r\n            }\r\n          </NotesConatiner>\r\n          <BackBtn onClick={() => {history.goBack()}}>\r\n            <FontAwesomeIcon icon={faChevronLeft} />\r\n          </BackBtn>\r\n        </>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default AnswerDetail;\r\n  ","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 20px;\r\n`;\r\n\r\nconst Blink = keyframes`\r\n    0% {\r\n        opacity: 100%;\r\n    }\r\n    50% {\r\n        opacity: 30%;\r\n    }\r\n    100% {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst Bulb = styled.img`\r\n    position: absolute;\r\n    height: 35vh;\r\n    width: auto;\r\n    top: 0;\r\n    animation: ${Blink} 2s ease-in-out infinite;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n    color: white;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    text-decoration: none;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst NotFound = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container>\r\n           <Bulb class=\"loading__bulb\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/loading_bulb.png\" alt=\"\" />\r\n           <Notice>\r\n               이 칸에는 아무 것도 없네요!\r\n           </Notice>\r\n           <BackBtn onClick={() => {history.goBack()}}>\r\n                나의 서랍장으로 돌아가기\r\n            </BackBtn>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport MyAnswers from \"../routes/MyAnswers\";\r\nimport QuestionDetail from \"../routes/QuestionDetail\";\r\nimport QuestionRegister from \"../routes/QuestionRegister\";\r\nimport Questions from \"../routes/Questions\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport Settings from \"../routes/Settings\";\r\nimport Community from \"../routes/Community\";\r\nimport UserAnswers from \"../routes/UserAnswers\";\r\nimport SignOut from \"../routes/SignOut\";\r\nimport Credit from \"../routes/Credit\";\r\nimport NotesUser from \"../routes/NotesUser\";\r\nimport NotesAnswer from \"../routes/NotesAnswer\";\r\nimport Manual from \"../routes/Manual\";\r\nimport AnswerDetail from \"../routes/AnswerDetail\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst AppRouter = ({ questionArray, isLoggedIn, userObj, refreshUser, refreshFriends, answerCount, refreshBookmarks, refreshBio, refreshFirst }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? \r\n            ( <> \r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} answerCount={answerCount} />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\" >\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route exact path=\"/community\" >\r\n                        <Community userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/notes/user/:id\" >\r\n                        <NotesUser userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/notes/user/:id/:answerId\" >\r\n                        <NotesAnswer userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/answer/:id\" >\r\n                        <AnswerDetail userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/myanswers\" >\r\n                        <MyAnswers questionArray={questionArray} userObj={userObj} refreshBio={refreshBio} />\r\n                    </Route>\r\n                    <Route exact path=\"/questions\" >\r\n                        <Questions questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/question/:id\" >\r\n                        <QuestionDetail userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/useranswer/:id\" >\r\n                        <UserAnswers userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\" >\r\n                        <Settings refreshUser={refreshUser} userObj={userObj} refreshBio={refreshBio} />\r\n                    </Route>\r\n                    <Route exact path=\"/manual\">\r\n                        <Manual userObj={userObj} refreshFirst={refreshFirst} />\r\n                    </Route>                    \r\n                    <Route exact path=\"/credit\">\r\n                        <Credit />\r\n                    </Route>\r\n                    <Route exact path=\"/signout\" >\r\n                        <SignOut />\r\n                    </Route>\r\n                    <Route exact path=\"/questionregister\" >\r\n                        {userObj.uid === \"oaQ2Ruq5mVZbFDb9t5E2fukKhox2\"\r\n                            ? <QuestionRegister userObj={userObj} />\r\n                            : <NotFound />\r\n                        }                            \r\n                    </Route>\r\n                    <Route>\r\n                        <NotFound />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","export const ErrorComment = [\r\n    \"앗 실수로 주인장의 주방을 열어버렸어요!\",\r\n    \"앗 실수로 주인장의 침실이 열어버렸어요!\",\r\n    \"앗 실수로 주인장의 욕실문을 열어버렸네요!\",\r\n    \"앗 실수로 다른 문을 열어버렸어요!\"\r\n]","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport styled from \"styled-components\";\r\nimport { ErrorComment } from \"./DB/ErrorDB\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 95vh;\r\n    gap: 15px;\r\n`;\r\n\r\nconst Pic = styled.img`\r\n    width: 50%;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n    font-family: Kyobo Handwriting;\r\n    color: white;\r\n    text-align: center;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    text-decoration: none;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst ErrorPage = () => {\r\n    const [error, setError] = useState();\r\n\r\n    const onClick = () => {\r\n        window.location.replace(\"/\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        setError(ErrorComment[Math.floor(Math.random() * ErrorComment.length)])\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Pic src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/error_mouse.png\" />\r\n            <Notice>\r\n                {error} {<br />}\r\n                에러가 주인장에게 전달되었습니다. <br/>\r\n            </Notice>\r\n            <BackBtn onClick={onClick}>\r\n                나의 서랍장으로 돌아가기\r\n            </BackBtn>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React from \"react\";\r\nimport ErrorPage from \"./ErrorPage\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true, error };\r\n    }\r\n\r\n    render() {\r\n        const { hasError } = this.state;\r\n        if (hasError) {\r\n            return <ErrorPage />;\r\n        }\r\n\r\n        const { children } = this.props;\r\n        return children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { authService, dbService } from \"../fBase\";\nimport Loading from \"./Loading\";\nimport { setToken } from \"./Messaginginit\";\nimport AppRouter from \"./Router\";\nimport { isMobile } from \"react-device-detect\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: Kyobo Handwriting;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [answerCount, setAnswerCount] = useState('');\n  const [bioData, setBioData] = useState('');\n\n  const questionArray = [\n    {\n        question : \"결정을 잘 하시나요?\",\n        questionId : \"b8f300df-0fff-4fd0-a066-3c5bafe6d024\"\n    }, \n    {\n        question: \"괜찮아요?\",\n        questionId: \"ce35b720-8cbf-43af-aae6-914403c99789\"\n    },\n    {\n        question: \"그리운가요?\",\n        questionId: \"9428cfbc-2a42-48aa-8e2f-42700e928af4\"\n    },\n    {\n        question: \"꼭 가보고 싶은 곳이 있나요?\",\n        questionId: \"16a9a4c6-d1d9-4977-97ec-1fca76dc7b9c\"\n    },\n    {\n        question: \"꿈이 있나요?\",\n        questionId: \"00d1e249-bd6a-452c-81a4-458b30640945\"\n    },\n    {\n        question: \"누군가에게 말하기 어려운 것이 있다면 여기에 적어보세요.\",\n        questionId: \"f08c3f4a-13b7-4d6a-bf2b-901df73e5751\"\n    },\n    {\n        question: \"느낌을 사기위해 무언가를 지불해본 적이 있나요?\",\n        questionId: \"09770edd-b174-44de-a314-95a83eaa613e\"\n    },\n    {\n        question: \"답답한가요?\",\n        questionId: \"840ce86f-8a9e-444d-b1c1-8dd589c200ab\"\n    },\n    {\n        question: \"당신께 사랑은 무엇인가요?\",\n        questionId: \"4adc09d4-5a43-45b9-a525-d77454fa70a5\"\n    },\n    {\n        question: \"당신께 행복은 무엇인가요?\",\n        questionId: \"4f24a89a-3155-435b-84cb-82c731037942\"\n    },\n    {\n        question: \"당신께도 질문이 있나요?\",\n        questionId: \"88b121a4-e8ab-4d2d-99d3-7fec0876d439\"\n    },\n    {\n        question: \"당신은 누구인가요?\",\n        questionId: \"fa92f9e9-853a-4332-8bc6-79567fa23db5\"\n    },\n    {\n        question: \"당신은 어떤 답장을 쓰고 싶으신가요?\",\n        questionId: \"38beaf3b-90f3-4463-bfed-b5f416459280\"\n    },\n    {\n        question: \"대화가 힘들때가 있나요?\",\n        questionId: \"e459723f-00cb-43c5-8486-6d021433aea1\"\n    },\n    {\n        question: \"두려운가요?\",\n        questionId: \"e4741c08-ad4b-4328-952f-755db960fd38\"\n    },\n    {\n        question: \"모순이 있나요?\",\n        questionId: \"f8e4799a-aa4a-4b04-8e9d-667fb1a1d512\"\n    },\n    {\n        question: \"무엇이라 불리고 싶나요?\",\n        questionId: \"b6e8e867-1483-4249-89c1-9bb4a32517a8\"\n    },\n    {\n        question: \"밤을 좋아하나요?\",\n        questionId: \"d1e623a3-1d3e-45fb-9f3a-e737d9675766\"\n    },\n    {\n        question: \"번외가 있나요?\",\n        questionId: \"c7209c46-b4c0-40d5-ad1c-c420ccb0b9dc\"\n    },\n    {\n        question: \"사랑이란 무엇일까요?\",\n        questionId: \"2075b151-ed2d-4813-953e-a59a1f2d5bc6\"\n    },\n    {\n        question: \"사랑하고 있나요?\",\n        questionId: \"a06a2a77-1d1d-434c-a25d-38b6b4a5d2da\"\n    },\n    {\n        question: \"사랑한다고 말해보세요.\",\n        questionId: \"085e6ddd-7498-4a67-a894-1c42acc1c36a\"\n    },\n    {\n        question: \"생각보다 중요하지 않았던 것이 있었나요?\",\n        questionId: \"1f726ded-2c33-4803-9c5c-23cb63045667\"\n    },\n    {\n        question: \"솔직한가요?\",\n        questionId: \"109366f3-5429-4764-af23-e941e06b6e56\"\n    },\n    {\n        question: \"어리광부리고 싶다면 여기에 부려보세요.\",\n        questionId: \"d79dcd7f-e346-4b8d-9c96-50e8841efe54\"\n    },\n    {\n        question: \"어릴 때 무얼하고 놀았는지 기억나나요?\",\n        questionId: \"4303d851-1cb9-4e99-bfa5-a8735da2914a\"\n    },\n    {\n        question: \"얼었던 것이 녹으면 무엇이 되나요?\",\n        questionId: \"02a8706b-03c3-446c-9500-df3dc8fae4b1\"\n    },\n    {\n        question: \"오늘 하늘은 무슨 색이었나요?\",\n        questionId: \"55b33e10-36a5-4d24-af30-c8fa8bf13113\"\n    },\n    {\n        question: \"용서할 수 있나요?\",\n        questionId: \"640d40e5-8bee-49a8-ac49-f0879defa381\"\n    },\n    {\n        question: \"이끌려본적이 있나요?\",\n        questionId: \"ca706d16-6248-42f2-9826-77a9d8f7f94e\"\n    },\n    {\n        question: \"이상형을 그려보세요.\",\n        questionId: \"f11f02b9-88fb-4632-bdde-f824df368199\"\n    },\n    {\n        question: \"이해받고 있나요?\",\n        questionId: \"69b10746-2ee8-4941-b4d6-b943d6af7960\"\n    },\n    {\n        question: \"잊었던 단어가 있나요?\",\n        questionId: \"2d6d5007-4a8b-4176-8b1b-9556d66a2b05\"\n    },\n    {\n        question: \"정말 소통하고 있나요?\",\n        questionId: \"5dc5d43e-9642-4272-a2cc-5724ef9e95f2\"\n    },\n    {\n        question: \"좋아하는 공간이 있나요?\",\n        questionId: \"5690fbae-3972-4dfc-a21c-d6a3be147b9c\"\n    },\n    {\n        question: \"즐거웠던 순간을 적어보세요.\",\n        questionId: \"4e996e57-2dd3-47a2-b34d-d996678d3f25\"\n    },\n    {\n        question: \"지금, 무슨 생각을 하시나요?\",\n        questionId: \"e57084db-75c3-419c-b34b-fc42088e8d48\"\n    },\n    {\n        question: \"지금, 무엇을 원하시나요?\",\n        questionId: \"4ddb5a9b-415a-44f6-83a6-c86455b2ca7a\"\n    },\n    {\n        question: \"지금, 어떤 감정을 느끼시나요?\",\n        questionId: \"1fe19a57-445c-49ec-bc6b-d5e4aaed4410\"\n    },\n    {\n        question: \"쫓기고 있나요?\",\n        questionId: \"b1d88547-3c58-4a79-a4a1-a9cca797b06f\"\n    },\n    {\n        question: \"큰 일이 닥친다면?\",\n        questionId: \"c483234f-4d47-4786-b28d-29633b1f7644\"\n    },\n    {\n        question: \"편지를 받은 기억이 있나요?\",\n        questionId: \"88b4306d-91b8-43cc-ae82-67457d41d4e3\"\n    },\n    {\n        question: \"표현하지 못하는 것이 있나요?\",\n        questionId: \"a4be7cc2-a279-4715-bbbd-7e5a72f9d20c\"\n    },\n    {\n        question: \"힘들었던 순간은 여기에 두고 가도록해요.\",\n        questionId: \"e7ffd573-2901-45d5-9c79-42bebaa1ea4b\"\n    },\n]\n\n    const requestToken = async (user) => {\n        let token = await setToken();\n        if (token !== JSON.parse(localStorage.getItem(\"drawerToken\"))) {\n            dbService.collection(\"users\").doc(`${user.uid}`).update({\n                token\n            })\n            localStorage.setItem(\"drawerToken\", JSON.stringify(token))\n        }\n    }\n\n  useEffect(() => {\n    if (isMobile) {\n        const htmlCss = document.querySelector(\"html\")\n        htmlCss.style.fontSize = \"19px\";\n    }\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        if (\"serviceWorker\" in navigator) {\n            requestToken(user);\n        }\n\n        dbService.collection(\"main\").doc(\"counts\")\n        .onSnapshot((snapshot) => {\n            const countData = snapshot.data();\n            setAnswerCount(countData.answers);\n            localStorage.setItem(\"drawerAnswers\", JSON.stringify(countData.answers));\n        });\n\n        await dbService.collection('profiles').doc(`${user.uid}`).get()\n        .then((snapshot) => {\n            if (snapshot) {\n                const { bio } = snapshot.data();\n                setBioData(bio);\n            }\n        }).catch(() => {\n            setBioData('');\n        });\n\n        await dbService.collection(\"users\").doc(`${user.uid}`).get()\n        .then(snapshot => {\n            const userData = snapshot.data();\n            setUserObj({\n                uid: user.uid,\n                friends : userData.friends,\n                bookmarks : userData.bookmarks,\n                isPassword : userData.isPassword,\n                isFirst: userData.isFirst,\n                bio: bioData,\n                displayName: userData.displayName ? userData.displayName : \"익명\",\n                updateProfile: (args) => user.updateProfile(args),\n                })\n            setInit(true)\n        })\n        \n      } else {\n        setUserObj(null)\n        setInit(true)\n      }\n    })\n  }, [bioData])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      friends: user.friends,\n      bookmarks: user.bookmarks,\n      isFirst: user.isFirst,\n      bio: user.bio,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  const refreshFriends = (friends) => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      friends,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  const refreshBookmarks = (bookmarks) => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      bookmarks,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  const refreshBio = (bio) => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      bio,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  const refreshFirst = (isFirst) => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      isFirst,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <ErrorBoundary>\n        <Container>\n        <GlobalStyle />\n        {init \n        ? \n        <>\n            <AppRouter questionArray={questionArray} isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} refreshBio={refreshBio} refreshFirst={refreshFirst} answerCount={answerCount} />\n        </>\n        : <Loading />\n            }\n        </Container>\n`    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport \"./styles.css\"\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nSentry.init({\n  dsn: \"https://fcd371c95b264c58b9ada1ed4d63c6e9@o1065943.ingest.sentry.io/6058254\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (\"serviceWorker\" in navigator) {\n  serviceWorker.register()\n}\n"],"sourceRoot":""}