{"version":3,"sources":["fBase.js","components/Loading.js","components/Messaginginit.js","components/NoteFactory.js","components/Answer.js","components/DB/CheerDB.js","components/Cheer.js","routes/Home.js","components/Login.js","routes/Auth.js","routes/MyAnswers.js","routes/QuestionDetail.js","routes/QuestionRegister.js","components/Question.js","components/Search.js","routes/Questions.js","routes/Navigation.js","routes/CheerRegister.js","routes/Settings.js","components/Friends.js","components/Reply.js","components/Note.js","components/Notes.js","routes/Community.js","routes/UserAnswers.js","routes/SignOut.js","components/DB/Sponsor.js","music/Soul and Mind - E's Jammy Jams.mp3","routes/Credit.js","hooks/UseInterval.js","components/Router.js","components/App.js","serviceWorkerRegistration.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","authService","auth","dbService","firestore","storage","LoadingBox","styled","div","Blink","keyframes","Skew","DotBlink","Title","h1","Bulb","img","Drawer","Dot","comment","Loading","useState","num","setNum","useEffect","Math","floor","random","class","src","alt","setToken","a","isSupported","console","log","getToken","then","token","catch","err","onMessage","payload","Container","NoteTextarea","textarea","IconBox","NoteFactory","answer","userObj","setNoteState","noteContent","setNoteContent","value","onChange","e","target","onClick","window","confirm","userName","preventDefault","noteId","uuidv4","noteObj","createdAt","Date","now","writer","uid","writerName","displayName","receiver","userId","collection","doc","set","alert","onSubmit","style","width","height","transform","Question","InfoContainer","CreatedAt","span","WriterContainer","Writer","Content","EditInput","Answer","refreshFriends","editState","setEditState","noteState","changedAnswer","setChangedAnswer","history","useHistory","lastTime","lastMinutes","round","lastHours","lastDays","onClicekFriend","update","friends","push","questionId","question","answerId","modifedAt","marginLeft","icon","faPencilAlt","delete","faTrashAlt","includes","faUserPlus","autoFocus","CheerComment","animated","CheerPhrase","Cheer","cheer","setCheer","animation","useSpring","from","opacity","y","to","AddBtn","button","LastAnswer","Home","isLoading","setISLoading","answers","setAnswers","currentPage","setCurrentPage","getData","onSnapshot","snapshot","answerArray","docs","map","id","data","sort","b","posts","currentPosts","slice","faPlusCircle","size","LoginContainer","LoginInput","input","LoginBtn","PasswordContainer","PasswordInput","PasswordBtn","Error","Login","setCodeState","codeState","code","setCode","password","setPassword","error","setError","signInWithEmailAndPassword","message","config","gentle","errorAni","type","Background","Notice","Welcome","Auth","authState","setAuthState","top","molasses","welcomeAni","MyAnswers","setIsLoading","myAnswers","setMyAnswers","getMyAnswers","where","get","myAnswerArray","myAnswer","QuestionDetail","useParams","getAnswers","snapShot","answerData","QuestionName","h3","QuestionForm","form","QuestionInput","Submit","CodeContainer","CodeBtn","CodeDiv","QuestionRegister","questionName","setQuestionName","questionObj","answerUsers","publicAnswer","makeCode","chars","randomstring","i","rnum","substring","createUserWithEmailAndPassword","newUserObj","user","isPassword","initCode","AnswerContainer","AnswerInput","AnswerTextarea","PrivateLabel","label","AnswerBtn","isPrivate","setIsPrivate","setAnswer","longAnswer","setLongAnswer","answerValue","pathname","getAttribute","name","answerObj","editedAt","marginBottom","SearchInput","CloseBtn","SearchBtn","Search","searchWord","setSearchWord","searchState","setSearchState","faTimes","faSearch","LastQuestion","Questions","questionArray","questions","setQuestions","getQuestions","filter","NavComponent","NavBtn","NavCloseBtn","Navigation","navState","setNavState","reverse","default","reverseAnimation","onNavClick","textDecoration","faHome","faUserFriends","faQuestion","faEdit","faCog","faChevronUp","faBars","CheerName","CheerForm","CheerInput","CheerRegister","cheerName","setCheerName","cheerId","cheerObj","ProfileContainer","ProfileLabel","ProfileForm","ProfileInput","ProfileSubmitBtn","CreditBtn","LogOutBtn","QnaContainer","QnaLabel","QnaInput","QnaSubmitBtn","Settings","refreshUser","setDisplayName","email","setEmail","report","setReport","nameState","setNameState","emailState","setEmailState","passwordState","setPasswordState","displayname","updateProfile","setTimeout","onSubmitEmail","currentUser","updateEmail","onSubmitPassword","updatePassword","onReport","reportObj","add","required","marginTop","fontSize","signOut","Friend","FriendRight","FriendName","FriendCode","FriendIcon","Friends","getFriendLoading","loading","setFriends","friendsId","SetFriendsId","getFriends","friendArray","friendIdArray","forEach","onClickUser","onDeleteFriend","friend","newFriends","toLowerCase","Reply","note","Column","NoteContainer","NoteTitle","NoteWriter","NoteAnswer","NoteIcon","DeleteIcon","Note","replyState","setReplyState","NoteBox","Notes","getNoteLoading","notes","setNotes","getNotes","querySnapshot","noteArray","Community","friendLoading","setFriendLoading","noteLoading","setNoteLoading","UserAnswers","SignOut","Sponsor","thinkShare","sponsor","PlayBox","PlayInput","PlayBtnBox","PlayBtn","ThanksContainer","ThanksTitle","h2","ThanksName","Comment","Name","White","Credit","currentScroll","init","setInit","speed","setSpeed","Audio","bgm","bgmJazz","onClickPlay","play","pause","callback","delay","intervalRef","useRef","savedCallback","current","setInterval","clearInterval","useInterval","scriptPlay","scrollY","scrollBy","behavior","bottom","max","min","faBackward","faPlay","faPause","faForward","thinkperson","AppRouter","isLoggedIn","exact","path","GlobalStyle","createGlobalStyle","reset","App","setUserObj","requestToken","onAuthStateChanged","userData","args","Boolean","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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D,GAAU,CACnBC,WAAa,CACT,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,iBAEJC,QAAS,CACL,KAAO,CACH,CACIxW,QAAU,oFACViD,OAAS,sBAEb,CACIjD,QAAU,2BACViD,OAAS,gBAEb,CACIjD,QAAU,GACViD,OAAS,gBAEb,CACIjD,QAAU,odACViD,OAAS,gBAEb,CACIjD,QAAU,mCACViD,OAAS,SAEb,CACIjD,QAAU,yGACViD,OAAS,sBAEb,CACIjD,QAAU,8GACViD,OAAS,sBAEb,CACIjD,QAAU,kCACViD,OAAS,sBAEb,CACIjD,QAAU,qHACViD,OAAS,MAEb,CACIjD,QAAU,6JACViD,OAAS,sBAEb,CACIjD,QAAU,oGACViD,OAAS,sBAEb,CACIjD,QAAU,8BACViD,OAAS,WAEb,CACIjD,QAAU,iGACViD,OAAS,4BAEb,CACIjD,QAAU,GACViD,OAAS,uBAGjB,KAAO,CACH,CACIjD,QAAU,GACViD,OAAS,sBAEb,CACIjD,QAAU,kNACViD,OAAS,cAEb,CACIjD,QAAU,uIACViD,OAAS,sBAEb,CACIjD,QAAU,oRACViD,OAAS,sBAEb,CACIjD,QAAU,kCACViD,OAAS,wCAEb,CACIjD,QAAU,SACViD,OAAS,gBAEb,CACIjD,QAAU,kFACViD,OAAS,gBAEb,CACIjD,QAAU,8CACViD,OAAS,sBAEb,CACIjD,QAAU,8CACViD,OAAS,sBAEb,CACIjD,QAAU,+CACViD,OAAS,gBAEb,CACIjD,QAAU,uEACViD,OAAS,OAEb,CACIjD,QAAU,kEACViD,OAAS,sBAEb,CACIjD,QAAU,uDACViD,OAAS,sBAEb,CACIjD,QAAU,2FACViD,OAAS,MAEb,CACIjD,QAAU,mNACViD,OAAS,sBAEb,CACIjD,QAAU,2GACViD,OAAS,UAEb,CACIjD,QAAU,2JACViD,OAAS,gBAEb,CACIjD,QAAU,4FACViD,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","file":"static/js/main.a9bc30a8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp6H94uOjFnuEvgDEoTt2V_PLtt0DBnrs\",\r\n  authDomain: \"answercommunity-328ec.firebaseapp.com\",\r\n  projectId: \"answercommunity-328ec\",\r\n  storageBucket: \"answercommunity-328ec.appspot.com\",\r\n  messagingSenderId: \"471754929471\",\r\n  appId: \"1:471754929471:web:76a974475f1d82dbf54f8a\",\r\n  measurementId: \"G-KJV9NQRBNJ\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app();\r\n}\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const messaging = firebase.messaging();\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst LoadingBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    color: white;\r\n`;\r\n\r\nconst Blink = keyframes`\r\n    0% {\r\n        opacity: 100%;\r\n    }\r\n    50% {\r\n        opacity: 30%;\r\n    }\r\n    100% {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst Skew = keyframes`\r\n    0% {\r\n        transform: skew(0)\r\n    }\r\n    33% {\r\n        transform: skew(-1deg)\r\n    }\r\n    66% {\r\n        transform: skew(1deg)\r\n    }\r\n    100% {\r\n        transform: skew(0)\r\n    }\r\n`;\r\n\r\nconst DotBlink = keyframes`\r\n    0% {\r\n        opacity: 0%;\r\n    }\r\n    20% {\r\n        opacity: 0%;\r\n    }\r\n    40% {\r\n        opacity: 100%;\r\n    }\r\n    60% {\r\n        opacity: 100%;\r\n    }\r\n    80% {\r\n        opacity: 100%;\r\n    }\r\n    100% {\r\n        opacity: 100%\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    position: absolute;\r\n    bottom: 55vh;\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Bulb = styled.img`\r\n    position: absolute;\r\n    height: 35vh;\r\n    top: 0;\r\n    animation: ${Blink} 2s ease-in-out infinite;\r\n`;\r\n\r\nconst Drawer = styled.img`\r\n    position: absolute;\r\n    animation: ${Skew} 2s ease-in-out infinite ;\r\n    height: 35vh;\r\n    width: 80%;\r\n    opacity: 80%;\r\n    bottom: 20vh;\r\n`;\r\n\r\nconst Dot = styled.div`\r\n    animation: ${DotBlink} 2s infinite;\r\n    :nth-child(2) {\r\n        animation-delay: 0.5s;\r\n    }\r\n    :last-child {\r\n        animation-delay: 1s;\r\n    }\r\n`;\r\n\r\nconst comment = [\r\n    \"서랍장 문여는 중\", \r\n    \"사람들이 쓴 답변 모으는 중\", \r\n    \"주인장이 편지 쓰는 중\", \r\n    \"서랍장 바닥 닦는 중\", \r\n    \"주인장이 몰래 먹던 야식 감추는 중\", \r\n    \"전구 닦는 중\",\r\n    \"주인장 자세 잡는 중\",\r\n    \"서랍장 손잡이 조정 중\",\r\n    \"전구 밝기 조절 중\",\r\n    \"명예의 전당 기록 중\",\r\n    \"의자 높이 조정 중\",\r\n    ]\r\n\r\nconst Loading = () => {\r\n    const [num, setNum] = useState(\"\");\r\n    useEffect(() => {\r\n        setNum(Math.floor(Math.random()*comment.length))\r\n    }, [])\r\n    return (\r\n       <LoadingBox>\r\n           <Bulb class=\"loading__bulb\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/loading_bulb.png\" alt=\"\" />\r\n           <Title>\r\n               {comment[num]}<Dot>.</Dot><Dot>.</Dot><Dot>.</Dot>\r\n            </Title>\r\n           <Drawer class=\"loading__drawer\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/loading_drawer.png\" alt=\"\" />\r\n       </LoadingBox>\r\n    )\r\n}\r\n\r\nexport default Loading;","import firebase from \"firebase\"\r\n\r\nexport const setToken = async () => {\r\n    if(firebase.messaging.isSupported() === false) {\r\n        console.log(\"isSupported: \", firebase.messaging.isSupported())\r\n        return null;\r\n    }\r\n\r\n    const messaging = firebase.messaging();\r\n    const token = await messaging.getToken()\r\n    .then(token => \r\n        token\r\n    )\r\n    .catch((err) => {\r\n        console.log('error : ', err);\r\n        return null;\r\n    })\r\n\r\n    messaging.onMessage(payload => {\r\n        console.log(payload)\r\n    })\r\n\r\n    console.log('token : ', token)\r\n    return token;\r\n}","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div``;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 95%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NoteFactory = ({answer, userObj, setNoteState}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: answer.userId,\r\n            answer: answer.answer\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        alert(\"쪽지가 성공적으로 보내졌습니다 :)\")\r\n        setNoteState(false);\r\n        setNoteContent('');\r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Title>쪽지</Title>\r\n            <hr />\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={(e) => {\r\n                if(window.confirm(`${answer.userName}님께 쪽지를 보낼까요?`)){\r\n                    onSubmit(e)\r\n                }\r\n                \r\n            }}>\r\n                <PaperAirplaneIcon style={{width:\"16px\", height:\"16px\", transform: \"rotateZ(45deg)\"}} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoteFactory;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailIcon } from \"@heroicons/react/outline\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt, faUserPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"../fBase\";\r\nimport NoteFactory from \"./NoteFactory\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 15px 30px 15px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: white;\r\n  border-radius: 10px;\r\n  background-color: var(--main-color);\r\n  margin: 10px;\r\n  :hover {\r\n      color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst Question = styled.h1`\r\nline-height: 20px;\r\n  text-align: center;\r\n  word-break: keep-all;\r\n  transition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s all ease-in-out;\r\n  color: inherit;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst WriterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst Writer = styled.span`\r\n  transition: 0.3s all ease-in-out;\r\n  text-align: right;\r\n  width: auto;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n  font-size: 10px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  word-break: keep-all;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n  line-height: 17px;\r\n  font-size: 10px;\r\n  width: 90%;\r\n`;\r\n\r\nconst Answer = ({answer, userObj, refreshFriends}) => {\r\n  const [editState, setEditState] = useState(false);\r\n  const [noteState, setNoteState] = useState(false);\r\n  const [changedAnswer, setChangedAnswer] = useState('');\r\n  \r\n  const history = useHistory();\r\n\r\n  const lastTime = (Date.now() - answer.createdAt) / 1000 / 60\r\n  const lastMinutes = Math.round(lastTime)\r\n  const lastHours = Math.round(lastTime / 60)\r\n  const lastDays = Math.round(lastHours / 24)\r\n\r\n  const onClickEdit = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      setEditState(!editState);\r\n      if(changedAnswer !== answer.answer & editState === true) {\r\n        window.confirm(\"내용을 바꿀까요?\") \r\n        && dbService.collection(\"answers\").doc(answer.answerId).update({\r\n          answer: changedAnswer,\r\n          modifedAt: Date.now()\r\n        }) \r\n      }\r\n    }\r\n  }\r\n\r\n  const onClickDelete = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      window.confirm(\"정말 지우실건가요?\") \r\n      && dbService.collection(\"answers\").doc(answer.answerId).delete(); \r\n    }\r\n  }\r\n\r\n  const onClicekFriend = async (answer) => {\r\n    await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n      friends: [...userObj.friends, answer.userId]\r\n    })\r\n    .then(() => {\r\n      refreshFriends([...userObj.friends, answer.userId])\r\n      alert(`${answer.userName}님을 친구로 추가했습니다.`)\r\n    })\r\n  }\r\n  \r\n  const onClickNote = e => {\r\n    e.preventDefault();\r\n    setNoteState(!noteState);\r\n  }\r\n\r\n  const onClickDetail = e => {\r\n    e.preventDefault();\r\n    history.push(`/question/${answer.questionId}`)\r\n  }\r\n\r\n  const onClickUser = e => {\r\n    e.preventDefault();\r\n    history.push(`/useranswer/${answer.userId}`)\r\n  }\r\n\r\n  const onChange = e => {\r\n    setChangedAnswer(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Question onClick={onClickDetail}>{answer.question}</Question>\r\n      <InfoContainer>\r\n        {answer.userId === userObj.uid \r\n        ? (\r\n        <>\r\n          <IconBox onClick={onClickEdit}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faPencilAlt} />\r\n          </IconBox>\r\n          <IconBox onClick={onClickDelete}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faTrashAlt} />\r\n          </IconBox>\r\n        </>\r\n          )\r\n        : (\r\n          <>\r\n            {userObj.friends && !userObj.friends.includes(answer.userId) && \r\n            <IconBox>\r\n              <FontAwesomeIcon onClick={() => {\r\n                onClicekFriend(answer)\r\n              }} icon={faUserPlus} />\r\n            </IconBox>\r\n            }\r\n            <IconBox onClick={onClickNote}>\r\n              <MailIcon style={{width: \"15px\", marginLeft: \"5px\"}} />\r\n            </IconBox>\r\n          </>\r\n        )}\r\n      </InfoContainer>\r\n      <CreatedAt>{lastMinutes < 60 \r\n        ? `${lastMinutes}분 전` \r\n        : lastHours < 24 \r\n          ? `${lastHours}시간 전`\r\n          : `${lastDays}일 전`\r\n        }</CreatedAt>\r\n      <WriterContainer>\r\n        <Writer onClick={onClickUser}>- {answer.userName}</Writer>\r\n      </WriterContainer>\r\n      <Content>\r\n        {editState \r\n        ? <EditInput autoFocus onChange={onChange} value={changedAnswer ? changedAnswer : answer.answer} />\r\n        : answer.answer}\r\n      </Content>\r\n      {noteState && <NoteFactory userObj={userObj} answer={answer} setNoteState={setNoteState} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n  ","export const CheerComment = [\r\n    \"당신이 생각하는 시간이 외롭지 않기를 바랍니다.\",\r\n    \"쉽지는 않겠지만, 분명 해낼 수 있어요.\",\r\n    \"항상 응원하고 있습니다.\",\r\n    \"예쁜 저녁노을이 지고, 기분 좋은 바람이 불던 날을 기억하나요?\",\r\n    \"오늘도 고생 많으셨어요.\",\r\n    \"같은 질문에 여러 번 대답할 수도 있어요.\",\r\n    \"친구 목록에서 친구의 이름을 누르면, 친구의 답들을 볼 수 있어요.\",\r\n    \"코드를 외우기 불편하다면, 비밀번호를 등록하고 코드를 변경해보세요.\",\r\n    \"댓글 없이, 쪽지만 만들었어요. 광장 같은 밀실을 바라요.\",\r\n    \"주인장에게 하고 싶은 말이 있다면, 설정에서 문의하기로 할 수 있어요.\",\r\n]","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { CheerComment } from \"./DB/CheerDB\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: relative;\r\n    margin-top: 50px;\r\n    margin-bottom: 15px;\r\n    width: 90%; \r\n    height: 130px;\r\n    padding: 30px 0;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 50%;\r\n    border-radius: 10px;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nconst CheerPhrase = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    word-break: keep-all;\r\n    line-height: 25px;\r\n    font-size: 18px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Cheer = () => {\r\n    const [cheer, setCheer] = useState();\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            opacity: 0.5,\r\n            y: 0\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        setCheer(CheerComment[Math.floor(Math.random() * CheerComment.length)])\r\n    }, [])\r\n\r\n    return (\r\n        <Container style={animation}>\r\n            <CheerPhrase>\r\n                {cheer}\r\n            </CheerPhrase>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cheer;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Cheer from \"../components/Cheer\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst Home = ({ userObj, refreshFriends }) => {\r\n  const [isLoading, setISLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n    let currentPosts = 0;\r\n    currentPosts = posts.slice(0, currentPage * 5)\r\n    return currentPosts\r\n  }\r\n\r\n  const getData = async () => {\r\n    dbService.collection(\"answers\").onSnapshot(snapshot => {\r\n      const answerArray = snapshot.docs.map(doc => ({\r\n        id:doc.answerId,\r\n        ...doc.data(),\r\n      }));\r\n      answerArray.sort((a, b) => {\r\n        if(a.createdAt > b.createdAt) return -1;\r\n        if(a.createdAt === b.createdAt) return 0;\r\n        if(a.createdAt < b.createdAt) return 1;\r\n      });\r\n      setAnswers(answerArray)\r\n      setISLoading(false)\r\n    });\r\n  };\r\n\r\n  const addBtn = e => {\r\n    setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [])\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        : (\r\n          <>\r\n            <Cheer />\r\n            {answers && currentPosts(answers).map(answer => (\r\n              <Answer key={answer.answerId} userObj={userObj} answer={answer} refreshFriends={refreshFriends} />\r\n            ))\r\n            }\r\n            {currentPage*5 <= answers.length \r\n            ? \r\n            <AddBtn onClick={addBtn}>\r\n              <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n            </AddBtn>\r\n            : <LastAnswer>\r\n                    마지막 대답입니다.\r\n            </LastAnswer>\r\n            }\r\n          </>\r\n        )\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { authService } from \"../fBase\";\r\nimport { useState } from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\n\r\nconst Container = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 9;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst LoginBtn = styled.div`\r\n  color: var(--gold);\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: white;\r\n    }\r\n    :active {\r\n      transform: scale(0.9);\r\n    }\r\n`;\r\n\r\nconst PasswordContainer = styled.div``;\r\n\r\nconst PasswordInput = styled.input``;\r\n\r\nconst PasswordBtn = styled.div`\r\n  color: white;\r\n  opacity: 70%;\r\n  margin-bottom: 10px;\r\n  font-size: 10px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Error = styled(animated.span)`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 5px;\r\n  color: var(--gold);\r\n  word-break: keep-all;\r\n  width: 80%;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Login = ({setCodeState, codeState}) => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(\r\n      code, codeState ? password : code) \r\n      setCode(\"\");\r\n    } catch (error) {\r\n      if (error.message === \"The email address is badly formatted.\") {\r\n        setError(\"코드를 확인해주세요.\")\r\n      } else if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n        setError(\"정확한 코드를 입력했는지 확인해주세요.\")\r\n      }\r\n      else {\r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setCode(e.target.value)\r\n  }\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const animation = useSpring({\r\n      from : {\r\n          opacity : 0\r\n      },\r\n      to: {\r\n          opacity: 1\r\n      },\r\n      config: config.gentle\r\n  })\r\n\r\n  const errorAni = useSpring({\r\n    opacity: error ? 1 : 0,\r\n    config: config.gentle\r\n  })\r\n\r\n  return (\r\n    <Container style={animation}>\r\n      <PasswordBtn onClick={() => {\r\n        setCodeState(!codeState)\r\n      }}>\r\n        {codeState \r\n        ? \"저는 비밀번호가 없습니다\" \r\n        : \"저는 비밀번호가 있습니다\"\r\n        }\r\n      </PasswordBtn>\r\n      <LoginContainer>\r\n        <LoginInput onChange={onChange} value={code} type=\"text\" />\r\n      </LoginContainer>\r\n      {codeState && \r\n        <PasswordContainer>\r\n          <PasswordInput value={password} onChange={onChangePassword} type=\"password\" />\r\n        </PasswordContainer>\r\n      }\r\n      <Error style={errorAni}>{error}</Error>\r\n      <LoginBtn onClick={onSubmit}>\r\n          들어가기\r\n      </LoginBtn>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport Login from \"../components/Login\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled(animated.h1)`\r\n  position: absolute;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n  font-size: 25px;\r\n  font-family: Jeju Myeongjo;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n  color: var(--gold);\r\n  margin-bottom: 15px;\r\n  font-size: 14px;\r\n  z-index: 9;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Welcome = styled(animated.div)`\r\n  color: white;\r\n  font-size: 14px;\r\n  opacity: 0;\r\n  transition: 1s all ease-in-out;\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [authState, setAuthState] = useState(false);\r\n    const [codeState, setCodeState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n      top: authState ? \"150px\" : \"200px\",\r\n      config: config.molasses\r\n    })\r\n\r\n    const welcomeAni = useSpring({\r\n      opacity: !authState && 1,\r\n      config: config.molasses\r\n    })\r\n\r\n    const onClick = () => {\r\n      setAuthState(!authState)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Background onClick={onClick} />\r\n        <Title style={animation}>누군가의 서랍장</Title>\r\n        {authState \r\n        ? (\r\n        <>\r\n        <Notice onClick={() => {setCodeState(!codeState)}}>코드를 입력해주세요.</Notice>\r\n        <Login setCodeState={setCodeState} codeState={codeState} />\r\n        </>\r\n        ) : <Welcome style={welcomeAni}>입장하시려면 터치해주세요.</Welcome>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin-top: 50px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst MyAnswers = ({userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [myAnswers, setMyAnswers] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n\r\n      const addPage = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const getMyAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${userObj.uid}`).get()\r\n        .then(snapshot => {\r\n            const myAnswerArray = snapshot.docs.map(doc => ({\r\n                id: doc.answerId,\r\n                ...doc.data()    \r\n            }))\r\n            setMyAnswers(myAnswerArray)\r\n            setIsLoading(!isLoading)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? <Loading />\r\n            : ( \r\n            <>\r\n                <Title>\r\n                    나의 대답들\r\n                </Title>\r\n                {currentPosts(myAnswers).map(myAnswer => <Answer key={myAnswer.answerId} answer={myAnswer} userObj={userObj}/>)}\r\n                {currentPage*5 <= myAnswers.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastAnswer>\r\n                    마지막 대답입니다.\r\n                </LastAnswer>\r\n                }\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default MyAnswers;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  font-size: 18px;\r\n  word-break: keep-all;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  width: 70%;\r\n  color: white;\r\n  font-family: Jeju myeongjo;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst QuestionDetail = ({userObj, refreshFriends}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const { id } = useParams();\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n\r\n    const addPage = () => {\r\n      setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  const getAnswers = async () => {\r\n    await dbService.collection(\"answers\").where(\"questionId\", \"==\", `${id}`).get()\r\n    .then(snapShot => {\r\n      const answerData = snapShot.docs.map(doc => ({\r\n        ...doc.data()\r\n      }))\r\n      setAnswers(answerData)\r\n      setIsLoading(false);\r\n    }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAnswers();\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading \r\n      ? <Loading />\r\n      :\r\n      <>\r\n      <Question>{answers[0].question}</Question>\r\n      {currentPosts(answers).map(answer => <Answer answer={answer} userObj={userObj} refreshFriends={refreshFriends} />)}\r\n      {currentPage*5 <= answers.length \r\n      ?\r\n      <AddBtn onClick={addPage}>\r\n          <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n      </AddBtn>\r\n      : <LastAnswer>\r\n          마지막 대답입니다.\r\n      </LastAnswer>\r\n      }\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n  }\r\n\r\n  export default QuestionDetail;\r\n    ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    color: white;\r\n`;\r\n\r\nconst QuestionName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst QuestionForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CodeContainer = styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CodeBtn = styled.button``;\r\n\r\nconst CodeDiv = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst QuestionRegister = () => {\r\n    const [questionName, setQuestionName] = useState('');\r\n    const [code, setCode] = useState(\"\");\r\n\r\n    const onChange = (e) => {\r\n        setQuestionName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (questionName) {\r\n            const questionId = uuidv4();\r\n            const question = questionName;\r\n            const questionObj = {\r\n                question,\r\n                questionId,\r\n                answerUsers: [],\r\n                publicAnswer: [],\r\n            }\r\n            await dbService.collection(\"questions\").doc(question).set(questionObj)\r\n            setQuestionName(\"\");\r\n        }\r\n    }\r\n\r\n    const makeCode = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'\r\n        const stringLength = 6\r\n        let randomstring = ''\r\n        for (let i = 0; i < stringLength; i++) {\r\n            const rnum = Math.floor(Math.random() * chars.length)\r\n            randomstring += chars.substring(rnum, rnum + 1)\r\n        }\r\n\r\n        await authService.createUserWithEmailAndPassword(\r\n            `${randomstring}@drawer.book`, \r\n            `${randomstring}@drawer.book`)\r\n        .then(async (data) => {\r\n            const newUserObj = {\r\n                uid: data.user.uid,\r\n                displayName: \"익명\",\r\n                isPassword: false,\r\n                initCode: `${randomstring}@drawer.book`,\r\n            }\r\n            await dbService.collection(\"users\").doc(`${data.user.uid}`).set(newUserObj).then(alert(\"성공했습니다.\"))\r\n        })\r\n        setCode(`${randomstring}@drawer.book`)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <QuestionName>\r\n                무슨 질문을 추가하실 건가요?\r\n            </QuestionName>\r\n            <QuestionForm>\r\n                <QuestionInput onChange={onChange} value={questionName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </QuestionForm>\r\n            <CodeContainer>\r\n                <QuestionName>\r\n                    코드 생성기\r\n                </QuestionName>\r\n                <CodeBtn onClick={makeCode}>생성하기</CodeBtn>\r\n                <CodeDiv>{code && code}</CodeDiv>\r\n            </CodeContainer>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default QuestionRegister;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    border: 1px solid black;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    color: white;\r\n    border-radius: 10px;\r\n    background-color: var(--main-color);\r\n    margin: 10px;\r\n    :focus-within {\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    transition: 0.3s all ease-in-out;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    font-family: Jeju Myeongjo;\r\n    font-size: 14px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst AnswerContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst AnswerInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerTextarea = styled.textarea``;\r\n\r\nconst PrivateLabel = styled.label`\r\n    transition: 0.3s all ease-in-out;\r\n    font-size: 10px;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst AnswerBtn = styled.div`\r\n    margin-left: 5px;\r\n    width: 20px;\r\n    height: 20px;\r\n    transform: rotateZ(45deg);\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        background-color: var(--main-color);\r\n        transform: scale(0.9) rotateZ(45deg);\r\n    }\r\n`;\r\n\r\nconst Question = ({userObj, question}) => {\r\n    const history = useHistory();\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [answer, setAnswer] = useState('');\r\n    const [longAnswer, setLongAnswer] = useState(false);\r\n\r\n    const onClickQuestion = (e) => {\r\n        history.push({\r\n            pathname: `/question/${e.target.getAttribute('name')}`,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer) {\r\n            const answerId = uuidv4();\r\n            const answerObj = {\r\n            question: question.question,\r\n            questionId: question.questionId,\r\n            userId: userObj.uid,\r\n            userName: userObj.displayName,\r\n            answerId,\r\n            answer,\r\n            createdAt: Date.now(),\r\n            editedAt: null,\r\n            isPrivate,\r\n        }\r\n        dbService.collection(\"answers\").doc(`${answerId}`).set(answerObj).then(\r\n            alert(\"답변이 저장되었습니다 :)\")\r\n        ).catch((error) => {\r\n            console.error(\"Submit Error : \", error)\r\n        });\r\n        setAnswer(\"\");}\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const answerValue = e.target.value\r\n        setAnswer(answerValue)\r\n    }\r\n\r\n    const onChangeCheckbox = () => {\r\n        setIsPrivate(!isPrivate)\r\n    }\r\n\r\n    const onChangeAnswerType = () => {\r\n        setLongAnswer(!longAnswer)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title onClick={onClickQuestion} name={question.questionId}>\r\n                {question.question}\r\n            </Title>\r\n            <AnswerContainer>\r\n                {longAnswer \r\n                ? ( <AnswerTextarea onChange={onChange} value={answer} name={question.question} autoFocus />\r\n                ) : (\r\n                <AnswerInput onChange={onChange} value={answer} name={question.question} type=\"text\" />\r\n                )}\r\n                <AnswerBtn onClick={onSubmit}>\r\n                    <PaperAirplaneIcon />\r\n                </AnswerBtn>\r\n            </AnswerContainer>\r\n            <AnswerContainer style={{marginBottom: \"0\"}}>\r\n                <AnswerInput onChange={onChangeAnswerType} type=\"checkbox\"/>\r\n                <PrivateLabel>길게 쓰기</PrivateLabel>\r\n                <AnswerInput onChange={onChangeCheckbox} type=\"checkbox\" />\r\n                <PrivateLabel>답변 비공개하기</PrivateLabel>\r\n            </AnswerContainer>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Question;\r\n  ","import { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 75px;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  transition: 0.3s all ease-in-out;\r\n  background-color: rgba(0,0,0,0.3);\r\n  :hover, :focus-within {\r\n    font-style: italic;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`  \r\n  font-family: Kyobo Handwriting;\r\n  font-size: 14px;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  transition: 0.3s all ease-in-out;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 200px;\r\n  transition: 0.3s all ease-in-out;\r\n  :focus {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Search = ({ searchWord, setSearchWord }) => {\r\n    const [searchState, setSearchState] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n      setSearchWord(e.target.value)      \r\n    }\r\n\r\n    const onClick = () => {\r\n      setSearchState(!searchState)\r\n    }\r\n\r\n    return (\r\n      <>\r\n      {searchState ? \r\n        <Container>\r\n        <Title>찾으시는 질문이 있나요?</Title>\r\n        <SearchInput onChange={onChange} value={searchWord} />\r\n        <CloseBtn onClick={onClick}><FontAwesomeIcon icon={faTimes} size=\"lg\" /></CloseBtn>\r\n      </Container>\r\n      : <SearchBtn onClick={onClick}>\r\n          <FontAwesomeIcon icon={faSearch} size=\"lg\" />\r\n        </SearchBtn>\r\n      }\r\n      </>\r\n    );\r\n}\r\n  \r\nexport default Search;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../components/Loading\";\r\nimport Question from \"../components/Question\";\r\nimport Search from \"../components/Search\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 50px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastQuestion = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst Questions = ({questionArray, userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([]);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n  \r\n    const getQuestions = async () => {\r\n    //     await dbService.collection(\"questions\").get()\r\n    //     .then(querySnapshot => {\r\n    //         const questionArray = querySnapshot.docs.map(doc => ({\r\n    //             id: doc.questionId,\r\n    //             ...doc.data()\r\n    //         }))\r\n            setQuestions(questionArray.sort(() => Math.random() - 0.5))\r\n            setIsLoading(!isLoading)\r\n    //     })\r\n    }\r\n\r\n    const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? <Loading />\r\n            : (\r\n            <>\r\n                {currentPosts(questions.filter(question => question.question.includes(searchWord))).map(question => <Question key={question.questionId} userObj={userObj} question={question} /> )}\r\n                <Search searchWord={searchWord} setSearchWord={setSearchWord} />\r\n                {currentPage*5 <= questions.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastQuestion>\r\n                    마지막 질문입니다.\r\n                </LastQuestion>\r\n                }\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Questions;\r\n  ","import { faBars, faChevronUp, faCog, faDoorOpen, faEdit, faHome, faQuestion, faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\"\r\nimport { authService } from \"../fBase\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100vw;\r\n    height: auto;\r\n    z-index: 9;\r\n    box-sizing: border-box;\r\n    background-color: rgba(0,0,0, 0.2);\r\n`;\r\n\r\nconst NavComponent = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    color: white;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    font-size: 18px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavBtn = styled(animated.button)`\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavCloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin-right: 30px;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Navigation = () => {\r\n    const [navState, setNavState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n        opacity : navState ? 1 : 0, \r\n        y: navState ? 0 : -10,\r\n        reverse: !navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const reverseAnimation = useSpring({\r\n        opacity : navState ? 0 : 1, \r\n        y: navState ? -10 : 0,\r\n        reverse: navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const onNavClick = () => {\r\n        setNavState(!navState)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {navState ?(\r\n            <Container style={animation}>\r\n                <Link to={\"/\"} style={{textDecoration: \"none\", marginLeft: \"30px\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/community\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faUserFriends} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/questions\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faQuestion} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/myanswers\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/settings\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faCog} />\r\n                    </NavComponent>\r\n                </Link> \r\n                <NavCloseBtn style onClick={onNavClick}>\r\n                    <FontAwesomeIcon icon={faChevronUp} />\r\n                </NavCloseBtn>\r\n            </Container>\r\n            ) : (\r\n            <NavBtn style={reverseAnimation} onClick={onNavClick}>\r\n                <FontAwesomeIcon icon={faBars} size=\"lg\" />\r\n            </NavBtn>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    z-index: 999;\r\n`;\r\n\r\nconst CheerName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CheerForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CheerInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CheerRegister = () => {\r\n    const [cheerName, setCheerName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setCheerName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (cheerName) {\r\n            const cheerId = uuidv4();\r\n            const cheer = cheerName;\r\n            const cheerObj = {\r\n                cheer,\r\n                cheerId,\r\n            }\r\n            await dbService.collection(\"cheers\").doc(cheerName).set(cheerObj)\r\n            setCheerName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CheerName>\r\n                무슨 응원을 추가하실 건가요?\r\n            </CheerName>\r\n            <CheerForm>\r\n                <CheerInput onChange={onChange} value={cheerName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </CheerForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default CheerRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: Kyobo Handwriting;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 20px 0px;\r\n    box-sizing: border-box;\r\n    transition: 1s all ease-in-out;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ProfileLabel = styled.label`\r\n    margin: 5px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileInput = styled.input`\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileSubmitBtn = styled.input`\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    margin-top: 5px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst CreditBtn = styled.button`\r\n    margin-bottom: 10px;\r\n    font-size: 12px;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst QnaContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 200px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst QnaLabel =styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst QnaInput = styled.textarea`\r\n    font-size: 12px;\r\n    width: 70%;\r\n    height: 50px;\r\n`;\r\n\r\nconst QnaSubmitBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Settings = ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [report, setReport] = useState('');\r\n    const [nameState, setNameState] = useState(false);\r\n    const [emailState, setEmailState] = useState(false);\r\n    const [passwordState, setPasswordState] = useState(false);\r\n\r\n    const onClickCredit = e => {\r\n        history.push(\"/credit\");\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setDisplayName(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmail(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPassword(e.target.value)\r\n        }\r\n    }\r\n\r\n    const onChangeReport = e => {\r\n        setReport(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (displayName && userObj.displayname !== displayName) {\r\n            await dbService.collection(\"users\").doc(`${userObj.uid}`).set({\r\n                uid: userObj.uid,\r\n                displayName: userObj.displayName\r\n            }).then(() => {\r\n                userObj.updateProfile({\r\n                    displayName\r\n                })\r\n                setTimeout(() => {\r\n                    refreshUser();\r\n                    alert(\"이름이 성공적으로 변경되었습니다 :)\")\r\n                })\r\n            })\r\n            setDisplayName(\"\");\r\n        };\r\n    };\r\n\r\n    const onSubmitEmail = async (e) => {\r\n        e.preventDefault();\r\n        if (window.confirm(`${email}로 로그인 코드를 변경할까요?`)) {\r\n        await authService.currentUser.updateEmail(email).then(()=>{\r\n            dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n                isPassword: true\r\n            }).then(()=>{\r\n                alert(\"코드 변경에 성공했습니다.\", email)\r\n                refreshUser();\r\n                setEmail(\"\");\r\n            })\r\n        })}\r\n    }\r\n\r\n    const onSubmitPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (window.confirm(\"비밀번호를 변경할까요?\")) \r\n        authService.currentUser.updatePassword(password).then(()=>{\r\n            alert(\"비밀번호 변경에 성공했습니다.\")\r\n            refreshUser();\r\n            setPassword(\"\");\r\n        })\r\n    }\r\n\r\n    const onReport = async e => {\r\n        e.preventDefault();\r\n        if (report) { \r\n            const reportObj = {\r\n            report,\r\n            userId : userObj.uid,\r\n            createdAt : Date.now()\r\n        }\r\n        dbService.collection(\"reports\").add(reportObj)\r\n        alert(\"성공적으로 제출되었습니다. 감사합니다 :)\")\r\n        setReport('');\r\n    }\r\n    }\r\n\r\n    const onClick = e =>{\r\n        e.preventDefault();\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setNameState(!nameState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmailState(!emailState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPasswordState(!passwordState)\r\n        }\r\n    }\r\n    \r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>\r\n                {userObj.displayName}의 서랍장\r\n            </Title>\r\n\r\n            <ProfileContainer>\r\n                {!(emailState | passwordState) && \r\n                <> \r\n                <ProfileLabel name=\"name\" onClick={onClick}>이름 바꾸기</ProfileLabel>\r\n                <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                </>\r\n                }\r\n                {nameState &&\r\n                <ProfileForm onSubmit={onSubmit}>\r\n                    <ProfileInput required name=\"name\" onChange={onChange} value={displayName} type=\"text\" />\r\n                    <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\", opacity: \"80%\"}}>이름을 바꿔도, 친구들은 이전 이름을 알 수 있습니다.</ProfileLabel>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"name\" />\r\n                </ProfileForm>\r\n                }\r\n                {userObj.isPassword ? !(nameState | passwordState) && \r\n                <>\r\n                <ProfileLabel name=\"email\" onClick={onClick}>접속 코드 변경</ProfileLabel>\r\n                <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                </>\r\n                : null\r\n                }\r\n                {emailState &&\r\n                <ProfileForm onSubmit={onSubmitEmail}>\r\n                    <ProfileInput required name=\"email\" onChange={onChange} value={email} type=\"email\" />\r\n                    <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\"}}>접속코드는 이메일 형태여야 합니다.</ProfileLabel>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"email\" />\r\n                </ProfileForm>\r\n                }\r\n                {!(nameState | emailState) && \r\n                <>\r\n                    <ProfileLabel name=\"password\" onClick={onClick}>{userObj.isPassword ? \"비밀번호 만들기\" : \"비밀번호 바꾸기\"}</ProfileLabel>\r\n                    {passwordState && <hr style={{width:\"70%\", opacity:\"70%\"}} />}\r\n                </>\r\n                }\r\n                {passwordState &&\r\n                <ProfileForm onSubmit={onSubmitPassword}>\r\n                    <ProfileInput required name=\"password\" onChange={onChange} value={password} type=\"password\" />\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"password\" />\r\n                </ProfileForm>\r\n                }\r\n            </ProfileContainer>\r\n            <CreditBtn onClick={onClickCredit}>명예의 전당</CreditBtn>\r\n            <QnaContainer>\r\n                <QnaLabel>문의하기 & 버그리포트</QnaLabel>\r\n                <QnaInput onChange={onChangeReport} value={report}type=\"text\" />\r\n                <QnaSubmitBtn onClick={onReport} >문의하기</QnaSubmitBtn>\r\n            </QnaContainer>\r\n            <LogOutBtn onClick={onLogOut}>Logout</LogOutBtn>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Settings;\r\n  ","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst Friend = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: white;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FriendRight = styled.div`\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst FriendName = styled.div`\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98)\r\n    }\r\n`;\r\n\r\nconst FriendCode = styled.div``;\r\n\r\nconst FriendIcon = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst Notice = styled.div`\r\n    color: rgba(0,0,0,0.5);\r\n    margin-top: 15px;\r\n    font-size: 14px;\r\n    text-align: center;\r\n    line-height: 130%;\r\n`;\r\n\r\nconst Friends = ({userObj, refreshFriends, getFriendLoading, loading}) => {\r\n    const [friends, setFriends] = useState([]);\r\n    const [friendsId, SetFriendsId] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getFriends = async () => {\r\n        if(userObj.friends && userObj.friends.length !== 0) {\r\n            await dbService.collection(\"users\").where(\"uid\", \"in\", userObj.friends).get().then(\r\n            snapshot => {\r\n                const friendArray = snapshot.docs.map(doc => ({...doc.data()})\r\n                )\r\n                let friendIdArray = [];\r\n                snapshot.docs.forEach(doc => {\r\n                    friendIdArray.push(doc.data().uid)\r\n                })\r\n                setFriends(friendArray)\r\n                SetFriendsId(friendIdArray)\r\n            })\r\n        getFriendLoading(true)\r\n        } else {\r\n            setFriends([]);\r\n            getFriendLoading(true)\r\n        }\r\n    }\r\n\r\n    const onClickUser = (e) => {\r\n        history.push(`/useranswer/${e.target.id}`)\r\n    }\r\n      \r\n    const onDeleteFriend = async (friend) => {\r\n        const newFriends = friendsId.filter(data => data !== friend.uid)\r\n        await dbService.collection(\"users\").doc(`${userObj.uid}`).update(\r\n            {friends : newFriends}\r\n        )\r\n        .then(() => {\r\n            console.log(newFriends)\r\n            refreshFriends(newFriends);\r\n            alert(`${friend.displayName}님을 친구 목록에서 삭제했습니다.`)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends();\r\n    }, [])\r\n    return (\r\n        <>\r\n        {loading ?\r\n\r\n            <Container>\r\n            <Title>친구들</Title>\r\n            <hr />\r\n            {friends.length !== 0 \r\n            ? friends.map(friend => (\r\n                <Friend key={friend.uid}>\r\n                    <FriendName id={friend.uid} onClick={onClickUser}>\r\n                        {friend.displayName}\r\n                    </FriendName>\r\n                    <FriendRight>                        \r\n                        <FriendCode>\r\n                        #{friend.uid.slice(-4).toLowerCase()}\r\n                        </FriendCode>\r\n                        <FriendIcon>\r\n                            <FontAwesomeIcon onClick={() => {\r\n                                if (window.confirm(`${friend.displayName}님을 친구 목록에서 삭제하시겠어요?`)) {\r\n                                    onDeleteFriend(friend)\r\n                                }}\r\n                                } icon={faTrashAlt} size=\"sm\" />\r\n                        </FriendIcon>\r\n                    </FriendRight>\r\n                </Friend>\r\n            ))\r\n            : <Notice>다른 사람의 답변을 통해 <br /> 친구를 추가 할 수 있어요.</Notice>\r\n            }\r\n        </Container>\r\n            : null\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 95%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Reply = ({note, userObj}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: note.writer,\r\n            answer: note.noteContent\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        alert(\"쪽지가 성공적으로 보내졌습니다 :)\")\r\n        setNoteContent('');\r\n        \r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={onSubmit}>\r\n                <PaperAirplaneIcon style={{width:\"16px\", height:\"16px\", transform: \"rotateZ(45deg)\"}} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Reply;","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport Reply from \"./Reply\";\r\n\r\nconst Column = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 15px;\r\n    color: rgba(0,0,0,0.5);\r\n    transition: 0.5s all ease-in-out;\r\n    :focus-within {\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst NoteContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\n\r\nconst NoteTitle = styled.div`\r\n    transition: 0.5s all ease-in-out;\r\n    font-size: 12px;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: black;\r\n    }\r\n`;\r\n\r\nconst NoteWriter = styled.span`\r\n    text-align: right;\r\n    width: 50px;\r\n    word-break: keep-all;\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst NoteAnswer = styled.span`\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nconst NoteIcon = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n`;\r\n\r\nconst DeleteIcon = styled.div`\r\n    :hover {\r\n        cursor: pointer;\r\n        color: black;\r\n        transition: 0.5s all ease-in-out;\r\n    }\r\n`;\r\n\r\nconst Note = ({note, userObj}) => {\r\n    const [replyState, setReplyState] = useState(false);\r\n\r\n    const onDeleteClick = (e) => {\r\n        if (window.confirm(\"삭제할까요?\")) {\r\n            dbService.collection(\"notes\").doc(`${note.noteId}`).delete()\r\n        } \r\n    }\r\n\r\n    const onClickReply = () => {\r\n        setReplyState(!replyState)\r\n    }\r\n    return (\r\n        <Column key={note.noteId}>\r\n            <NoteAnswer>'{note.answer.slice(0, 15)}...'에서 온 쪽지입니다.\r\n            </NoteAnswer>\r\n            <NoteContainer>\r\n                <NoteTitle onClick={onClickReply}>\r\n                    {note.noteContent}\r\n                </NoteTitle>\r\n                <NoteIcon>\r\n                    <NoteWriter>\r\n                        - {note.writerName}\r\n                    </NoteWriter>\r\n                    <DeleteIcon>\r\n                      <FontAwesomeIcon onClick={onDeleteClick} icon={faTrashAlt} size=\"sm\" />\r\n                    </DeleteIcon>\r\n                </NoteIcon>\r\n            </NoteContainer>\r\n            {replyState && <Reply note={note} userObj={userObj} />}\r\n        </Column>\r\n    )\r\n}\r\n\r\nexport default Note;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport Note from \"./Note\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst NoteBox = styled.div`\r\n    color: rgba(0,0,0,0.5);\r\n    margin-top: 15px;\r\n    font-size: 14px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Notes = ({userObj, getNoteLoading, loading}) => {\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    const getNotes = async () => {\r\n        await dbService.collection(\"notes\").where(\"receiver\", \"==\", `${userObj.uid}`).onSnapshot(querySnapshot => {\r\n            const noteArray = querySnapshot.docs.map(doc => ({\r\n                id: doc.noteId,\r\n                ...doc.data(),\r\n            }))\r\n            setNotes(noteArray);\r\n            getNoteLoading(true);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n    return (\r\n        <>\r\n        {loading \r\n            ? <Container>\r\n            <Title>쪽지함</Title>\r\n            <hr />\r\n\r\n            {notes.length === 0 \r\n            ? <NoteBox>표시할 쪽지가 없습니다.</NoteBox>\r\n            : (<>\r\n                {notes.map(note => (\r\n                    <Note userObj={userObj} note={note} />\r\n                ))}\r\n            </>)\r\n            }\r\n            </Container>\r\n            : null\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notes;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Friends from \"../components/Friends\";\r\nimport Loading from \"../components/Loading\";\r\nimport Notes from \"../components/Notes\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Community = ({userObj, refreshFriends}) => {\r\n    const [friendLoading, setFriendLoading] = useState(false);\r\n    const [noteLoading, setNoteLoading] = useState(false);\r\n\r\n    const getFriendLoading = (loading) => {\r\n        setFriendLoading(loading);\r\n    }\r\n\r\n    const getNoteLoading = (loading) => {\r\n        setNoteLoading(loading)\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Notes userObj={userObj} loading={noteLoading} getNoteLoading={getNoteLoading} />\r\n            <Friends userObj={userObj} loading={friendLoading} refreshFriends={refreshFriends} getFriendLoading={getFriendLoading} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Community;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Loading from \"../components/Loading\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Writer = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 20px;\r\n    color: white;\r\n    font-family: Jeju myeongjo;\r\n    margin-top: 50px;\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst UserAnswers = ({userObj, refreshFriends}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [answers, setAnswers] = useState([]);\r\n    const { id } = useParams();\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n  \r\n      const addPage = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n    \r\n    const getAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${id}`).get()\r\n        .then(snapShot => {\r\n          const answerData = snapShot.docs.map(doc => ({\r\n            ...doc.data()\r\n          }))\r\n          setAnswers(answerData)\r\n          setIsLoading(false);\r\n        }\r\n        )\r\n      }\r\n    \r\n      useEffect(() => {\r\n        getAnswers();\r\n      })\r\n\r\n    return (\r\n        <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        :\r\n        <>\r\n        <Writer>{answers[0].userName}의 대답들</Writer>\r\n        {currentPosts(answers).map(answer => <Answer answer={answer} userObj={userObj} refreshFriends={refreshFriends} />)}\r\n        {currentPage*5 <= answers.length \r\n        ?\r\n        <AddBtn onClick={addPage}>\r\n            <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n        </AddBtn>\r\n        : <LastAnswer>\r\n            마지막 대답입니다.\r\n        </LastAnswer>\r\n        }\r\n        </>\r\n        }\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default UserAnswers;","import React, { useEffect } from \"react\";\r\nimport { authService } from \"../fBase\";\r\n\r\nconst SignOut = () => {\r\n    useEffect(() => {\r\n        authService.signOut();\r\n    }, [])\r\n    return (\r\n        \"Signout\"\r\n    )\r\n}\r\n\r\nexport default SignOut;","export const Sponsor = {\r\n    thinkShare : [\r\n        \"원동혁\",\r\n        \"정대림\",\r\n        \"김상목\",\r\n        \"박건휘\",\r\n        \"박서윤\",\r\n        \"윤수민\",\r\n        \"백서연\",\r\n        \"송호재\",\r\n        \"임태홍\",\r\n        \"전윤호\",\r\n        \"최수연\",\r\n        \"김윤선\",\r\n        \"김진용\",\r\n        \"최아룡\",\r\n        \"최지수\",\r\n        \"송시내\",\r\n        \"오세은\",\r\n        \"오승섭\",\r\n        \"이희수\",\r\n        \"김민선\",\r\n        \"나소영\",\r\n        \"백승아\",\r\n        \"신우희\",\r\n        \"조원진\",\r\n        \"한주경\",\r\n        \"박태훈\",\r\n        \"박영민\",\r\n        \"김민지\",\r\n        \"이 은\"\r\n    ],\r\n    sponsor: {\r\n        \"#1\" : [\r\n            { \r\n                comment : \"원진 작가님 항상 응원합니다♥\",\r\n                writer : \"백승아\",\r\n            },\r\n            { \r\n                comment : \"일일이육\",\r\n                writer : \"서연\",\r\n            },\r\n            { \r\n                comment : \"\",\r\n                writer : \"예림\",\r\n            },\r\n            { \r\n                comment : \"청춘(靑春): 새싹이 파랗게 돋아나는 봄철이라는 뜻으로, 십 대 후반에서 이십 대에 걸치는 인생의 젊은 나이 또는 그런 시절을 이르는 말. 예문) 주인장의 청춘을 함께할 수 있어 좋습니다.\",\r\n                writer : \"이랑\",\r\n            },\r\n            { \r\n                comment : \"반갑습니다:)\",\r\n                writer : \"zzzzz\",\r\n            },\r\n            { \r\n                comment : \"또다시 싸워 이길 나의 기쁨 나의 노래야\",\r\n                writer : \"우너진\",\r\n            },\r\n            { \r\n                comment : \"새롭게 바뀌려고 노력하기 위해 글을 남김\",\r\n                writer : \"장우태\",\r\n            },\r\n            { \r\n                comment : \"감사합니다.\",\r\n                writer : \"백지원\",\r\n            },\r\n            { \r\n                comment : \"2021년, 나도 나만의 서랍장도 좋은일만 생기길 !\",\r\n                writer : \"ck\",\r\n            },\r\n            { \r\n                comment : \"정말 멋있는 사람이 만든 멋있는 책을 갖게되어 영광입니다 :)\",\r\n                writer : \"박주현\",\r\n            },\r\n            { \r\n                comment : \"다들 매일이 소중하셨으면 좋겠어요 :-)\",\r\n                writer : \"김민선\",\r\n            },\r\n            { \r\n                comment : \"Done is better than perfect\",\r\n                writer : \"SaTivus\",\r\n            },\r\n            { \r\n                comment : \"다들 어떻게든 버티면서 살아봅시다.\",\r\n                writer : \"금산모기\",\r\n            },\r\n            { \r\n                comment : \"\",\r\n                writer : \"변현경\",\r\n            },\r\n        ],\r\n        \"#2\" : [\r\n            { \r\n                comment : \"\",\r\n                writer : \"구수경\",\r\n            },\r\n            { \r\n                comment : \"언제든 꺼내볼 수 있게 자신의 서랍장을 잘 정리할 것. 그것을 잊지 않는 삶을 살길.\",\r\n                writer : \"HONGZZANG_\",\r\n            },\r\n            { \r\n                comment : \"이렇게라도 현생의 명예를 챙길 수 있어서 다행이다\",\r\n                writer : \"김민정\",\r\n            },\r\n            { \r\n                comment : \"서랍장에서 가장 힘들때 힘을 내는 시간을 가졌었어요. 앞으로 제 인생에 서랍장이 계속 함께하기를 바래요.\",\r\n                writer : \"에이피\",\r\n            },\r\n            { \r\n                comment : \"번창하세요.\",\r\n                writer : \"그로잉마인드\",\r\n            },\r\n            { \r\n                comment : \"앙\",\r\n                writer : \"광기\",\r\n            },\r\n            { \r\n                comment : \"관경아, 멀리서나마 응원할게. :)\",\r\n                writer : \"별명\",\r\n            },\r\n            { \r\n                comment : \"다들 건강하기를\",\r\n                writer : \"정인아\",\r\n            },\r\n            { \r\n                comment : \"다들 건강하기를\",\r\n                writer : \"정인아\",\r\n            },\r\n            { \r\n                comment : \"등록 희망 ㅎㅎㅎ\",\r\n                writer : \"기현\",\r\n            },\r\n            { \r\n                comment : \"기억되고싶은 시간이 되길\",\r\n                writer : \"Ram\",\r\n            },\r\n            { \r\n                comment : \"생각이 많아지게 하는 책\",\r\n                writer : \"이재령\",\r\n            },\r\n            { \r\n                comment : \"응원합니다!! 화이팅!\",\r\n                writer : \"허재경\",\r\n            },\r\n            { \r\n                comment : \"주인장님, 멋지십니다. 응원합니다\",\r\n                writer : \"hl\",\r\n            },\r\n            { \r\n                comment : \"여러분 모두 나만의 서랍장을 통해 생각을 정리하면서  성장하셨으면 좋겠습니다!\",\r\n                writer : \"이은지\",\r\n            },\r\n            { \r\n                comment : \"모두 생기있는 삶을 살아가길 바랍니다 :-)\",\r\n                writer : \"ㅡ\",\r\n            },\r\n            { \r\n                comment : \"그럼에도 불구하고, 당신의 기억하고 싶은 하루를 바랍니다.\",\r\n                writer : \"interstellar\",\r\n            },\r\n            { \r\n                comment : \"올해는 좋은 생각만 했으면 바란다.\",\r\n                writer : \"최승철\",\r\n            },\r\n            { \r\n                comment : \"행복은 찾아오는 것이 아니라, 내가 찾아가는 길일 것입니다.이 서랍장이 행복을 찾아가는 무수한 길 중 한 가지 길이 되기를 바랍니다.\",\r\n                writer : \"지렁잉\",\r\n            },\r\n            { \r\n                comment : \"생각하는 동안에는 어떤 감정에도 휘둘리지 않고 그냥 담담하게 받아들일 수 있었으면 좋겠어요. 다들 흘러가는 대로 행복해지시면 좋겠습니다.\",\r\n                writer : \"임소진\",\r\n            },\r\n            { \r\n                comment : \"어느 때나 행복해주세요.\",\r\n                writer : \"익명\",\r\n            },\r\n            { \r\n                comment : \"2021 화이팅! 원하는 일 모두 이루길\",\r\n                writer : \"AEMIYAGUGIJJADA\",\r\n            },\r\n            { \r\n                comment : \"복잡한 생각을 정리하면 행복이 조금이나마 다가올까 싶다\",\r\n                writer : \"최슬기\",\r\n            },\r\n            { \r\n                comment : \"앞으로도 잘할 수 있을거야 힘내자!!\",\r\n                writer : \"Penna\",\r\n            },\r\n            { \r\n                comment : \"모두들 행복하세요?\",\r\n                writer : \"소연\",\r\n            },\r\n            { \r\n                comment : \"모두 생기있는 삶을 살아가길 바랍니다 :-)\",\r\n                writer : \"호핑피\",\r\n            },\r\n            { \r\n                comment : \"주인장은 기뻐하고, 누군가는 기다린다. 행복하셨으면 좋겠습니다??\",\r\n                writer : \"시작은달콤파게\",\r\n            },\r\n            { \r\n                comment : \"나는 베리굿이다. 너 또한 그렇다.\",\r\n                writer : \"김민지\",\r\n            },\r\n            { \r\n                comment : \"아 형님 여기다가 투자하면 된다고요?\",\r\n                writer : \"keenk\",\r\n            },\r\n            { \r\n                comment : \"정리되지 않은 생각들로 힘들어 하던 당신에게 보냅니다.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"많은 생각들로 밤새우는 당신에게 도움이 되길 바래요.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"정리되지 않은 생각으로 힘들어 하는 당신에게 힘이 되길.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"읽는 이의 마음의 온도를 높여주는 책난로가 되기를.\",\r\n                writer : \"심찬영\",\r\n            },\r\n            { \r\n                comment : \"이 책을 읽게 될  많은 분들이 또 다른 '누군가'가 되어 자신의 생각을 뒤돌아보며 표현해보는 시간이 되길 바랍니다. 제가 그랬던 것 처럼요!\",\r\n                writer : \"이희수\",\r\n            },\r\n        ],\r\n        \"#3\" : [\r\n            { \r\n                comment : \"가끔은 해도 돼요.\",\r\n                writer : \"지용수\",\r\n            },\r\n        ],\r\n        \"#4\" : [\r\n            { \r\n                comment : \"나는 신이다 나는 고로 존재한다\",\r\n                writer : \"윤현식\",\r\n            },\r\n            { \r\n                comment : \"나는 생각한다 고로 서랍장을 이용한다\",\r\n                writer : \"윤현식\",\r\n            },\r\n            { \r\n                comment : \"형 사업번창하면 좋겠어요\",\r\n                writer : \"윤현식\",\r\n            },\r\n        ],\r\n        \"#5\" : [\r\n            { \r\n                comment : \"안녕하세요 반갑습니다 \",\r\n                writer : \"최수연\",\r\n            },\r\n            { \r\n                comment : \"명예의 전당에 뭐라 쓸꺼라 물어보신다면! 대답해 드리는게 인지상정! 이 책의 발매를 위해!\",\r\n                writer : \"오해택\",\r\n            },\r\n            { \r\n                comment : \"주인장의 성공을 바랍니다.\",\r\n                writer : \"세월\",\r\n            },\r\n            { \r\n                comment : \"서랍장에 들어간다면 귀퉁이 자리가 좋겠어요. 모든 기억을 한 눈에 볼 수 있으니까요.\",\r\n                writer : \"ysu\",\r\n            },\r\n        ]\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Soul and Mind - E's Jammy Jams.43e78e83.mp3\";","import { faBackward, faForward, faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Sponsor } from \"../components/DB/Sponsor\";\r\nimport { useInterval } from \"../hooks/UseInterval\";\r\nimport bgm from \"../music/Soul and Mind - E's Jammy Jams.mp3\"\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: black;\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    color: white;\r\n    padding: 100vh 0;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst PlayBox = styled.button`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    bottom: 20px;\r\n    opacity: 50%;\r\n    background-color: transparent;\r\n    border: none;\r\n    transition: 1s all ease-in-out;\r\n    :hover {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst PlayInput = styled.input`\r\n  -webkit-appearance: none;\r\n  margin-right: 15px;\r\n  width: 100%;\r\n  height: 6px;\r\n  border-radius: 7px;\r\n  background-size: 50% 100%;\r\n  background-repeat: no-repeat;\r\n  background-color: white;\r\n  ::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    background: white;\r\n    cursor: ew-resize;\r\n    box-shadow: 0 0 2px 0 #555;\r\n    transition: background .3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst PlayBtnBox = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n    gap: 5px;\r\n`;\r\n\r\nconst PlayBtn = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n    color: white;\r\n    transition: 1s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 24px;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst ThanksContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: auto;\r\n    width: 100%;\r\n`;\r\n\r\nconst ThanksTitle = styled.h2`\r\n    font-size: 20px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ThanksName = styled.h3`\r\n    width: 90%;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n    word-break: keep-all;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst Name = styled.h3`\r\n    display: flex;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst White = styled.h3`\r\n    color: white;\r\n    margin-left: 5px;\r\n`;\r\n\r\nconst Credit = () => {\r\n    const [init, setInit] = useState(false);\r\n    const [speed, setSpeed] = useState(0);\r\n    let currentScroll;\r\n    const [bgmJazz] = useState(new Audio(bgm));\r\n\r\n    const onSpeedChange = e => {\r\n        e.preventDefault();\r\n        setSpeed(e.target.value);\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const onClickBackward = e => {\r\n        if (speed > -10) {\r\n            setSpeed(speed - 1)\r\n        }\r\n    }\r\n\r\n    const onClickPlay = e => {\r\n        if (speed === 0) {\r\n            if (!init) {\r\n                setInit(true)\r\n                setSpeed(1)\r\n                setTimeout(() => {\r\n                    bgmJazz.play();\r\n                }, 1000)\r\n            } else {\r\n                setSpeed(1)\r\n                bgmJazz.play();\r\n            }\r\n        } else if (speed !== 0) {\r\n            setSpeed(0);\r\n            bgmJazz.pause();\r\n        }\r\n    }\r\n\r\n    const onClickForward = e => {\r\n        if (speed < 10) {\r\n            setSpeed(speed + 1)\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        scriptPlay();\r\n    }, 30)\r\n\r\n    const scriptPlay = () => {\r\n        if (window.scrollY !== currentScroll) {\r\n            window.scrollBy({ top: speed, behavior: 'smooth'});\r\n            currentScroll = window.scrollY;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n    \r\n    return (\r\n        <Container>\r\n            <PlayBox style={{bottom: init? \"20px\" : \"50vh\"}} >\r\n                {init && \r\n                <PlayInput max=\"10\" min=\"-10\" value={speed}onChange={onSpeedChange} type=\"range\" />}\r\n                <PlayBtnBox>\r\n                    {init && <PlayBtn onClick={onClickBackward}>\r\n                        <FontAwesomeIcon icon={faBackward} />\r\n                    </PlayBtn>}\r\n                    {speed === 0\r\n                    ?\r\n                    <PlayBtn style={{fontSize: !init && \"30px\"}} onClick={onClickPlay}>\r\n                        <FontAwesomeIcon icon={faPlay} />\r\n                    </PlayBtn>\r\n                    : \r\n                    <PlayBtn onClick={onClickPlay}>\r\n                        <FontAwesomeIcon icon={faPause} />\r\n                    </PlayBtn>\r\n                    }\r\n                    {init && \r\n                    <PlayBtn onClick={onClickForward}>\r\n                        <FontAwesomeIcon icon={faForward} />\r\n                    </PlayBtn>}\r\n                </PlayBtnBox>\r\n            </PlayBox>\r\n            <Title>서랍장 명예의 전당</Title>\r\n            <ThanksContainer>\r\n                <ThanksTitle>후원해주신 분들</ThanksTitle>\r\n                {Sponsor.sponsor[\"#1\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}\r\n                {Sponsor.sponsor[\"#2\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}\r\n                {Sponsor.sponsor[\"#3\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}\r\n                {Sponsor.sponsor[\"#4\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}    \r\n                {Sponsor.sponsor[\"#5\"].map(thinkperson => (\r\n                    <ThanksName>\r\n                        <Comment>{thinkperson.comment}</Comment>\r\n                        <Name> \r\n                            - {thinkperson.writer} \r\n                            <White>\r\n                             님\r\n                            </White>\r\n                        </Name>\r\n                    </ThanksName>\r\n                ))}                            \r\n            </ThanksContainer>\r\n            <ThanksContainer>\r\n                <ThanksTitle>생각을 함께 나눠주신 분들</ThanksTitle>\r\n                {Sponsor.thinkShare.map(thinkperson => (\r\n                    <ThanksName>\r\n                    <Name>{thinkperson}</Name>님\r\n                    </ThanksName>\r\n                ))}\r\n            </ThanksContainer>\r\n            <ThanksContainer>\r\n                <ThanksTitle>도움을 주신 분들</ThanksTitle>\r\n                <ThanksName>수석 디자이너 <Name>경민이</Name></ThanksName>\r\n                <ThanksName>창동관 이웃<Name>영민이</Name></ThanksName>\r\n                <ThanksName>많은 도움을 준 <Name>태일 형</Name></ThanksName>\r\n            </ThanksContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Credit;","import { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n    const intervalRef = useRef(null);\r\n    const savedCallback = useRef(callback);\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n    useEffect(() => {\r\n      const tick = () => savedCallback.current();\r\n      if (typeof delay === 'number') {\r\n        intervalRef.current = window.setInterval(tick, delay);\r\n        return () => window.clearInterval(intervalRef.current);\r\n      }\r\n    }, [delay]);\r\n  }","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport MyAnswers from \"../routes/MyAnswers\";\r\nimport QuestionDetail from \"../routes/QuestionDetail\";\r\nimport QuestionRegister from \"../routes/QuestionRegister\";\r\nimport Questions from \"../routes/Questions\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport CheerRegister from \"../routes/CheerRegister\";\r\nimport Settings from \"../routes/Settings\";\r\nimport Community from \"../routes/Community\";\r\nimport UserAnswers from \"../routes/UserAnswers\";\r\nimport SignOut from \"../routes/SignOut\";\r\nimport Credit from \"../routes/Credit\";\r\n\r\nconst AppRouter = ({ questionArray, isLoggedIn, userObj, refreshUser, refreshFriends }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? \r\n            ( <> \r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} refreshFriends={refreshFriends} />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\" >\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route exact path=\"/community\" >\r\n                        <Community userObj={userObj} refreshFriends={refreshFriends} />\r\n                    </Route>\r\n                    <Route exact path=\"/myanswers\" >\r\n                        <MyAnswers questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/questions\" >\r\n                        <Questions questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/question/:id\" >\r\n                        <QuestionDetail userObj={userObj} refreshFriends={refreshFriends} />\r\n                    </Route>\r\n                    <Route exact path=\"/useranswer/:id\" >\r\n                        <UserAnswers userObj={userObj} refreshFriends={refreshFriends} />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\" >\r\n                        <Settings refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/credit\">\r\n                        <Credit />\r\n                    </Route>\r\n                    <Route exact path=\"/signout\" >\r\n                        <SignOut />\r\n                    </Route>\r\n                </Switch>\r\n                <Switch>\r\n                    <Route exact path=\"/questionregister\" >\r\n                        <QuestionRegister />\r\n                    </Route>\r\n                    <Route exact path=\"/cheerregister\" >\r\n                        <CheerRegister />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { authService, dbService } from \"../fBase\";\nimport Loading from \"./Loading\";\nimport { setToken } from \"./Messaginginit\";\nimport AppRouter from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: Kyobo Handwriting;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const questionArray = [\n    {\n        question : \"결정을 잘 하시나요?\",\n        questionId : \"b8f300df-0fff-4fd0-a066-3c5bafe6d024\"\n    }, \n    {\n        question: \"괜찮아요?\",\n        questionId: \"ce35b720-8cbf-43af-aae6-914403c99789\"\n    },\n    {\n        question: \"그리운가요?\",\n        questionId: \"9428cfbc-2a42-48aa-8e2f-42700e928af4\"\n    },\n    {\n        question: \"꼭 가보고 싶은 곳이 있나요?\",\n        questionId: \"16a9a4c6-d1d9-4977-97ec-1fca76dc7b9c\"\n    },\n    {\n        question: \"꿈이 있나요?\",\n        questionId: \"00d1e249-bd6a-452c-81a4-458b30640945\"\n    },\n    {\n        question: \"누군가에게 말하기 어려운 것이 있다면 여기에 적어보세요.\",\n        questionId: \"f08c3f4a-13b7-4d6a-bf2b-901df73e5751\"\n    },\n    {\n        question: \"느낌을 사기위해 무언가를 지불해본 적이 있나요?\",\n        questionId: \"09770edd-b174-44de-a314-95a83eaa613e\"\n    },\n    {\n        question: \"답답한가요?\",\n        questionId: \"840ce86f-8a9e-444d-b1c1-8dd589c200ab\"\n    },\n    {\n        question: \"당신께 사랑은 무엇인가요?\",\n        questionId: \"4adc09d4-5a43-45b9-a525-d77454fa70a5\"\n    },\n    {\n        question: \"당신께 행복은 무엇인가요?\",\n        questionId: \"4f24a89a-3155-435b-84cb-82c731037942\"\n    },\n    {\n        question: \"당신께도 질문이 있나요?\",\n        questionId: \"88b121a4-e8ab-4d2d-99d3-7fec0876d439\"\n    },\n    {\n        question: \"당신은 누구인가요?\",\n        questionId: \"fa92f9e9-853a-4332-8bc6-79567fa23db5\"\n    },\n    {\n        question: \"당신은 어떤 답장을 쓰고 싶으신가요?\",\n        questionId: \"38beaf3b-90f3-4463-bfed-b5f416459280\"\n    },\n    {\n        question: \"대화가 힘들때가 있나요?\",\n        questionId: \"e459723f-00cb-43c5-8486-6d021433aea1\"\n    },\n    {\n        question: \"두려운가요?\",\n        questionId: \"e4741c08-ad4b-4328-952f-755db960fd38\"\n    },\n    {\n        question: \"모순이 있나요?\",\n        questionId: \"f8e4799a-aa4a-4b04-8e9d-667fb1a1d512\"\n    },\n    {\n        question: \"무엇이라 불리고 싶나요?\",\n        questionId: \"b6e8e867-1483-4249-89c1-9bb4a32517a8\"\n    },\n    {\n        question: \"밤을 좋아하나요?\",\n        questionId: \"d1e623a3-1d3e-45fb-9f3a-e737d9675766\"\n    },\n    {\n        question: \"번외가 있나요?\",\n        questionId: \"c7209c46-b4c0-40d5-ad1c-c420ccb0b9dc\"\n    },\n    {\n        question: \"사랑이란 무엇일까요?\",\n        questionId: \"2075b151-ed2d-4813-953e-a59a1f2d5bc6\"\n    },\n    {\n        question: \"사랑하고 있나요?\",\n        questionId: \"a06a2a77-1d1d-434c-a25d-38b6b4a5d2da\"\n    },\n    {\n        question: \"사랑한다고 말해보세요.\",\n        questionId: \"085e6ddd-7498-4a67-a894-1c42acc1c36a\"\n    },\n    {\n        question: \"생각보다 중요하지 않았던 것이 있었나요?\",\n        questionId: \"1f726ded-2c33-4803-9c5c-23cb63045667\"\n    },\n    {\n        question: \"솔직한가요?\",\n        questionId: \"109366f3-5429-4764-af23-e941e06b6e56\"\n    },\n    {\n        question: \"어리광부리고 싶다면 여기에 부려보세요.\",\n        questionId: \"d79dcd7f-e346-4b8d-9c96-50e8841efe54\"\n    },\n    {\n        question: \"어릴 때 무얼하고 놀았는지 기억나나요?\",\n        questionId: \"4303d851-1cb9-4e99-bfa5-a8735da2914a\"\n    },\n    {\n        question: \"얼었던 것이 녹으면 무엇이 되나요?\",\n        questionId: \"02a8706b-03c3-446c-9500-df3dc8fae4b1\"\n    },\n    {\n        question: \"오늘 하늘은 무슨 색이었나요?\",\n        questionId: \"55b33e10-36a5-4d24-af30-c8fa8bf13113\"\n    },\n    {\n        question: \"용서할 수 있나요?\",\n        questionId: \"640d40e5-8bee-49a8-ac49-f0879defa381\"\n    },\n    {\n        question: \"이끌려본적이 있나요?\",\n        questionId: \"ca706d16-6248-42f2-9826-77a9d8f7f94e\"\n    },\n    {\n        question: \"이상형을 그려보세요.\",\n        questionId: \"f11f02b9-88fb-4632-bdde-f824df368199\"\n    },\n    {\n        question: \"이해받고 있나요?\",\n        questionId: \"69b10746-2ee8-4941-b4d6-b943d6af7960\"\n    },\n    {\n        question: \"잊었던 단어가 있나요?\",\n        questionId: \"2d6d5007-4a8b-4176-8b1b-9556d66a2b05\"\n    },\n    {\n        question: \"정말 소통하고 있나요?\",\n        questionId: \"5dc5d43e-9642-4272-a2cc-5724ef9e95f2\"\n    },\n    {\n        question: \"좋아하는 공간이 있나요?\",\n        questionId: \"5690fbae-3972-4dfc-a21c-d6a3be147b9c\"\n    },\n    {\n        question: \"즐거웠던 순간을 적어보세요.\",\n        questionId: \"4e996e57-2dd3-47a2-b34d-d996678d3f25\"\n    },\n    {\n        question: \"지금, 무슨 생각을 하시나요?\",\n        questionId: \"e57084db-75c3-419c-b34b-fc42088e8d48\"\n    },\n    {\n        question: \"지금, 무엇을 원하시나요?\",\n        questionId: \"4ddb5a9b-415a-44f6-83a6-c86455b2ca7a\"\n    },\n    {\n        question: \"지금, 어떤 감정을 느끼시나요?\",\n        questionId: \"1fe19a57-445c-49ec-bc6b-d5e4aaed4410\"\n    },\n    {\n        question: \"쫓기고 있나요?\",\n        questionId: \"b1d88547-3c58-4a79-a4a1-a9cca797b06f\"\n    },\n    {\n        question: \"큰 일이 닥친다면?\",\n        questionId: \"c483234f-4d47-4786-b28d-29633b1f7644\"\n    },\n    {\n        question: \"편지를 받은 기억이 있나요?\",\n        questionId: \"88b4306d-91b8-43cc-ae82-67457d41d4e3\"\n    },\n    {\n        question: \"표현하지 못하는 것이 있나요?\",\n        questionId: \"a4be7cc2-a279-4715-bbbd-7e5a72f9d20c\"\n    },\n    {\n        question: \"힘들었던 순간은 여기에 두고 가도록해요.\",\n        questionId: \"e7ffd573-2901-45d5-9c79-42bebaa1ea4b\"\n    },\n]\n\n    const requestToken = async () => {\n        let token = await setToken();\n        console.log('token === ', token)\n    }\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        requestToken();\n        dbService.collection(\"users\").doc(`${user.uid}`).get()\n        .then(snapshot => {\n            const userData= snapshot.data()\n            setUserObj({\n                uid: user.uid,\n                friends : (userData.friends \n                    ? userData.friends \n                    : []),\n                isPassword : userData.isPassword,\n                displayName: (user.displayName ? user.displayName : \"익명\"),\n                updateProfile: (args) => user.updateProfile(args),\n              })\n            setInit(true)\n        })\n      } else {\n        setUserObj(null)\n        setInit(true)\n      }\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      friends: user.friends,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  const refreshFriends = (friends) => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      friends,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <Container>\n      <GlobalStyle />\n      {init ? <AppRouter questionArray={questionArray} isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} refreshFriends={refreshFriends} />\n      : <Loading />\n        }\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\"\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}