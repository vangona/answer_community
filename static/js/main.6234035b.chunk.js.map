{"version":3,"sources":["fBase.js","components/Answer.js","components/Cheer.js","routes/Home.js","components/Login.js","routes/Auth.js","components/MyAnswer.js","routes/MyAnswers.js","routes/AnswerDetail.js","components/Question.js","routes/QuestionDetail.js","routes/QuestionRegister.js","components/Search.js","routes/Questions.js","routes/Navigation.js","routes/CheerRegister.js","routes/Settings.js","components/Friends.js","components/Notes.js","routes/Community.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","enablePersistence","authService","auth","dbService","storage","Container","styled","div","Question","h1","InfoContainer","CreatedAt","span","Writer","Content","IconBox","EditInput","textarea","Answer","answer","userObj","useState","editState","setEditState","changedAnswer","setChangedAnswer","lastTime","Date","now","createdAt","lastMinutes","Math","round","lastHours","lastDays","question","userId","uid","onClick","e","preventDefault","window","confirm","collection","doc","answerId","update","modifedAt","style","marginLeft","icon","faPencilAlt","delete","faTrashAlt","width","userName","autoFocus","onChange","target","value","animated","CheerPhrase","Cheer","cheer","animation","useSpring","from","opacity","y","to","AddBtn","button","Home","isLoading","setISLoading","cheerList","setCheerList","randNum","setRandNum","answers","setAnswers","currentPage","setCurrentPage","currentPosts","posts","slice","getData","a","get","then","snapShot","cheerArray","docs","map","id","cheerId","data","onSnapshot","snapshot","answerArray","sort","b","useEffect","number","floor","random","getRandNum","LoginContainer","LoginInput","input","LoginBtn","Error","Login","code","setCode","error","setError","onSubmit","signInWithEmailAndPassword","message","config","gentle","errorAni","type","Background","Title","Notice","Welcome","Auth","authState","setAuthState","top","molasses","welcomeAni","MyAnswer","createdTime","Year","getFullYear","Month","getMonth","DateTime","getDate","MyAnswers","questionArray","setIsLoading","myAnswers","setMyAnswers","getMyAnswers","where","myAnswerArray","myAnswer","AnswerDetail","AnswerContainer","AnswerInput","AnswerTextarea","PrivateLabel","label","AnswerBtn","history","useHistory","isPrivate","setIsPrivate","setAnswer","longAnswer","setLongAnswer","answerValue","push","pathname","getAttribute","name","questionId","uuidv4","answerObj","displayName","editedAt","set","console","log","catch","marginBottom","QuestionDetail","setQuestion","useParams","getQuestion","questionData","QuestionName","h3","QuestionForm","form","QuestionInput","Submit","QuestionRegister","questionName","setQuestionName","questionObj","answerUsers","publicAnswer","SearchInput","Search","searchWord","setSearchWord","Questions","questions","setQuestions","getQuestions","filter","includes","faPlusCircle","size","NavComponent","NavBtn","NavCloseBtn","Navigation","navState","setNavState","x","reverse","reverseAnimation","onNavClick","textDecoration","faHome","signOut","faChevronRight","faBars","CheerName","CheerForm","CheerInput","CheerRegister","cheerName","setCheerName","cheerObj","ProfileContainer","ProfileLabel","ProfileInput","ProfileSubmitBtn","LogOutBtn","QnaContainer","QnaLabel","QnaInput","QnaSubmitBtn","Settings","refreshUser","setDisplayName","report","setReport","displayname","updateProfile","onReport","reportObj","add","Friends","Notes","Community","AppRouter","isLoggedIn","exact","path","GlobalStyle","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6234035b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp6H94uOjFnuEvgDEoTt2V_PLtt0DBnrs\",\r\n  authDomain: \"answercommunity-328ec.firebaseapp.com\",\r\n  projectId: \"answercommunity-328ec\",\r\n  storageBucket: \"answercommunity-328ec.appspot.com\",\r\n  messagingSenderId: \"471754929471\",\r\n  appId: \"1:471754929471:web:76a974475f1d82dbf54f8a\",\r\n  measurementId: \"G-KJV9NQRBNJ\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore().enablePersistence();\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MailIcon } from \"@heroicons/react/outline\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 15px 30px 15px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: white;\r\n  border-radius: 10px;\r\n  background-color: var(--main-color);\r\n  margin: 10px;\r\n  :hover {\r\n      color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst Question = styled.h1`\r\ntransition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s all ease-in-out;\r\n  color: inherit;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Writer = styled.span`\r\n  transition: 0.3s all ease-in-out;\r\n  text-align: right;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  word-break: keep-all;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n  line-height: 17px;\r\n  font-size: 10px;\r\n  width: 90%;\r\n`;\r\n\r\nconst Answer = ({answer, userObj}) => {\r\n  const [editState, setEditState] = useState(false);\r\n  const [changedAnswer, setChangedAnswer] = useState('');\r\n\r\n  const lastTime = (Date.now() - answer.createdAt) / 1000 / 60\r\n  const lastMinutes = Math.round(lastTime)\r\n  const lastHours = Math.round(lastTime / 60)\r\n  const lastDays = Math.round(lastHours / 24)\r\n\r\n  const onClickEdit = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      setEditState(!editState);\r\n      if(changedAnswer !== answer.answer) {\r\n        window.confirm(\"내용을 바꿀까요?\") \r\n        && dbService.collection(\"answers\").doc(answer.answerId).update({\r\n          answer: changedAnswer,\r\n          modifedAt: Date.now()\r\n        }) \r\n      }\r\n    }\r\n  }\r\n\r\n  const onClickDelete = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      window.confirm(\"정말 지우실건가요?\") \r\n      && dbService.collection(\"answers\").doc(answer.answerId).delete(); \r\n    }\r\n  }\r\n\r\n  const onClickNote = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const onChange = e => {\r\n    setChangedAnswer(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Question>{answer.question}</Question>\r\n      <InfoContainer>\r\n        {answer.userId === userObj.uid \r\n        ? (\r\n        <>\r\n          <IconBox onClick={onClickEdit}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faPencilAlt} />\r\n          </IconBox>\r\n          <IconBox onClick={onClickDelete}>\r\n            <FontAwesomeIcon style={{marginLeft: \"5px\"}} icon={faTrashAlt} />\r\n          </IconBox>\r\n        </>\r\n          )\r\n        : (\r\n          <IconBox>\r\n            <MailIcon style={{width: \"15px\", marginLeft: \"5px\"}} />\r\n          </IconBox>\r\n        )}\r\n      </InfoContainer>\r\n      <CreatedAt>{lastMinutes < 60 \r\n        ? `${lastMinutes}분 전` \r\n        : lastHours < 24 \r\n          ? `${lastHours}시간 전`\r\n          : `${lastDays}일 전`\r\n        }</CreatedAt>\r\n      <Writer>- {answer.userName}</Writer>\r\n      <Content>\r\n        {editState \r\n        ? <EditInput autoFocus onChange={onChange} value={changedAnswer ? changedAnswer : answer.answer} />\r\n        : answer.answer}\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: relative;\r\n    margin-top: 50px;\r\n    margin-bottom: 15px;\r\n    width: 90%; \r\n    height: 130px;\r\n    padding: 30px 0;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 50%;\r\n    border-radius: 10px;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nconst CheerPhrase = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 80%;\r\n    word-break: keep-all;\r\n    line-height: 25px;\r\n    font-size: 18px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Cheer = ({cheer}) => {\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            opacity: 0.5,\r\n            y: 0\r\n        }\r\n    })\r\n    return (\r\n        <Container style={animation}>\r\n            <CheerPhrase>\r\n                {cheer.cheer}\r\n            </CheerPhrase>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cheer;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"../components/Answer\";\r\nimport Cheer from \"../components/Cheer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst AddBtn = styled.button``;\r\n\r\nconst ModalBackground = styled.div`\r\nbackground-color: rgba(0,0,0,0.5);\r\nposition: absolute;\r\nbox-sizing: border-box;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [isLoading, setISLoading] = useState(true);\r\n  const [cheerList, setCheerList] = useState([]);\r\n  const [randNum, setRandNum] = useState(null);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n    let currentPosts = 0;\r\n    currentPosts = posts.slice(0, currentPage * 5)\r\n    return currentPosts\r\n  }\r\n\r\n  const getRandNum = () => {\r\n    const number = Math.floor(Math.random() * 5);\r\n    setRandNum(number)\r\n  }\r\n\r\n  const getData = async () => {\r\n    await dbService.collection(\"cheers\").get()\r\n    .then(snapShot => {\r\n      const cheerArray = snapShot.docs.map(doc => ({\r\n        id: doc.cheerId,\r\n        ...doc.data()\r\n    }))\r\n    setCheerList(cheerArray)\r\n    })\r\n\r\n    await dbService.collection(\"answers\").onSnapshot(snapshot => {\r\n      const answerArray = snapshot.docs.map(doc => ({\r\n        id:doc.answerId,\r\n        ...doc.data(),\r\n      }));\r\n      answerArray.sort((a, b) => {\r\n        if(a.createdAt > b.createdAt) return -1;\r\n        if(a.createdAt === b.createdAt) return 0;\r\n        if(a.createdAt < b.createdAt) return 1;\r\n      });\r\n      setAnswers(answerArray)\r\n      setISLoading(false)\r\n    });\r\n  };\r\n\r\n  const addBtn = e => {\r\n    setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    getRandNum();\r\n  }, [])\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading ? \"Loading...\" \r\n        : (\r\n          <>\r\n            {cheerList && <Cheer key={cheerList[randNum].cheerId} cheer={cheerList[randNum]} />}\r\n            {answers && currentPosts(answers).map(answer => (\r\n              <Answer key={answer.answerId} userObj={userObj} answer={answer} />\r\n            ))\r\n            }\r\n          </>\r\n        )\r\n        }\r\n        {currentPosts(answers) > 5 && <AddBtn onClick={addBtn}></AddBtn>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { authService } from \"../fBase\";\r\nimport { useState } from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\n\r\nconst Container = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 9;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst LoginBtn = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-left: 5px;\r\n  transform: rotateZ(45deg);\r\n  color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n      transform: rotateZ(45deg) scale(0.9);\r\n    }\r\n`;\r\n\r\nconst Error = styled(animated.span)`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: var(--gold);\r\n  word-break: keep-all;\r\n  width: 80%;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(\r\n      code, code) \r\n      setCode(\"\");\r\n    } catch (error) {\r\n      if (error.message === \"The email address is badly formatted.\") {\r\n        setError(\"코드를 확인해주세요.\")\r\n      } else if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n        setError(\"정확한 코드를 입력했는지 확인해주세요.\")\r\n      }\r\n      else {\r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setCode(e.target.value)\r\n  }\r\n\r\n  const animation = useSpring({\r\n      from : {\r\n          opacity : 0\r\n      },\r\n      to: {\r\n          opacity: 1\r\n      },\r\n      config: config.gentle\r\n  })\r\n\r\n  const errorAni = useSpring({\r\n    opacity: error ? 1 : 0,\r\n    config: config.gentle\r\n  })\r\n\r\n  return (\r\n    <Container style={animation}>\r\n      <LoginContainer>\r\n        <LoginInput onChange={onChange} value={code} type=\"text\" />\r\n          <LoginBtn onClick={onSubmit}>\r\n            <PaperAirplaneIcon />\r\n          </LoginBtn>\r\n      </LoginContainer>\r\n          <Error style={errorAni}>{error}</Error>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport Login from \"../components/Login\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled(animated.h1)`\r\n  position: absolute;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n  font-size: 25px;\r\n  font-family: Jeju Myeongjo;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Welcome = styled(animated.div)`\r\n  color: white;\r\n  font-size: 14px;\r\n  opacity: 0;\r\n  transition: 1s all ease-in-out;\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [authState, setAuthState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n      top: authState ? \"150px\" : \"200px\",\r\n      config: config.molasses\r\n    })\r\n\r\n    const welcomeAni = useSpring({\r\n      opacity: !authState && 1,\r\n      config: config.molasses\r\n    })\r\n\r\n    const onClick = () => {\r\n      setAuthState(!authState)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Background onClick={onClick} />\r\n        <Title style={animation}>누군가의 서랍장</Title>\r\n        {authState \r\n        ? (\r\n        <>\r\n        <Notice>코드를 입력해주세요.</Notice>\r\n        <Login />\r\n        </>\r\n        ) : <Welcome style={welcomeAni}>입장하시려면 터치해주세요.</Welcome>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 30px 20px 30px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: white;\r\n  border-radius: 10px;\r\n  background-color: var(--main-color);\r\n  margin: 10px;\r\n  :hover {\r\n      color: var(--gold);\r\n      cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  color: white;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  font-size: 10px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  word-break: keep-all;\r\n`;\r\n\r\nconst Question = styled.h1`\r\n    transition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst MyAnswer = ({answer}) => {\r\n    const createdTime = new Date(answer.createdAt);\r\n  const Year = createdTime.getFullYear();\r\n  const Month = createdTime.getMonth();\r\n  const DateTime = createdTime.getDate();\r\n\r\n  return (\r\n    <Container>\r\n        <Question>{answer.question}</Question>\r\n        <CreatedAt>\r\n            {Year} - {Month < 10 ? `0${Month}` : Month} - {DateTime < 10 ? `0${DateTime}` : DateTime}\r\n        </CreatedAt>\r\n        <Content>{answer.answer}</Content>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MyAnswer;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MyAnswer from \"../components/MyAnswer\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 90vh;\r\n    width: 100%;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst MyAnswers = ({questionArray, userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [myAnswers, setMyAnswers] = useState(null);\r\n\r\n    const getMyAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${userObj.uid}`).get()\r\n        .then(snapshot => {\r\n            const myAnswerArray = snapshot.docs.map(doc => ({\r\n                id: doc.answerId,\r\n                ...doc.data()    \r\n            }))\r\n            setMyAnswers(myAnswerArray)\r\n            setIsLoading(!isLoading)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? \"Loading...\"\r\n            : ( \r\n            <>\r\n                <Title>\r\n                    나의 대답들\r\n                </Title>\r\n                {myAnswers.map(myAnswer => <MyAnswer key={myAnswer.answerId} questionArray={questionArray} answer={myAnswer} />)}\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default MyAnswers;\r\n  ","import React from \"react\";\r\n\r\nconst AnswerDetail = () => {\r\n    return (\r\n      \"AnswerDetail\"\r\n    );\r\n  }\r\n  \r\n  export default AnswerDetail;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/outline\"\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    border: 1px solid black;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    color: white;\r\n    border-radius: 10px;\r\n    background-color: var(--main-color);\r\n    margin: 10px;\r\n    :focus-within {\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    transition: 0.3s all ease-in-out;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    font-family: Jeju Myeongjo;\r\n    font-size: 14px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst AnswerContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst AnswerInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerTextarea = styled.textarea``;\r\n\r\nconst PrivateLabel = styled.label`\r\n    transition: 0.3s all ease-in-out;\r\n    font-size: 10px;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst AnswerBtn = styled.div`\r\n    margin-left: 5px;\r\n    width: 20px;\r\n    height: 20px;\r\n    transform: rotateZ(45deg);\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        background-color: var(--main-color);\r\n        transform: scale(0.9) rotateZ(45deg);\r\n    }\r\n`;\r\n\r\nconst Question = ({userObj, question}) => {\r\n    const history = useHistory();\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [answer, setAnswer] = useState('');\r\n    const [longAnswer, setLongAnswer] = useState(false);\r\n\r\n    const onClickQuestion = (e) => {\r\n        history.push({\r\n            pathname: `/question/${e.target.getAttribute('name')}`,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer) {\r\n            const answerId = uuidv4();\r\n            const answerObj = {\r\n            question: question.question,\r\n            questionId: question.questionId,\r\n            userId: userObj.uid,\r\n            userName: userObj.displayName,\r\n            answerId,\r\n            answer,\r\n            createdAt: Date.now(),\r\n            editedAt: null,\r\n            isPrivate,\r\n        }\r\n        dbService.collection(\"answers\").doc(`${answerId}`).set(answerObj).then(\r\n            console.log(\"Submit Success\")\r\n        ).catch((error) => {\r\n            console.error(\"Submit Error : \", error)\r\n        });\r\n        setAnswer(\"\");}\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const answerValue = e.target.value\r\n        setAnswer(answerValue)\r\n    }\r\n\r\n    const onChangeCheckbox = () => {\r\n        setIsPrivate(!isPrivate)\r\n    }\r\n\r\n    const onChangeAnswerType = () => {\r\n        setLongAnswer(!longAnswer)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title onClick={onClickQuestion} name={question.questionId}>\r\n                {question.question}\r\n            </Title>\r\n            <AnswerContainer>\r\n                {longAnswer \r\n                ? ( <AnswerTextarea onChange={onChange} value={answer} name={question.question} autoFocus />\r\n                ) : (\r\n                <AnswerInput onChange={onChange} value={answer} name={question.question} type=\"text\" />\r\n                )}\r\n                <AnswerBtn onClick={onSubmit}>\r\n                    <PaperAirplaneIcon />\r\n                </AnswerBtn>\r\n            </AnswerContainer>\r\n            <AnswerContainer style={{marginBottom: \"0\"}}>\r\n                <AnswerInput onChange={onChangeAnswerType} type=\"checkbox\"/>\r\n                <PrivateLabel>길게 쓰기</PrivateLabel>\r\n                <AnswerInput onChange={onChangeCheckbox} type=\"checkbox\" />\r\n                <PrivateLabel>답변 비공개하기</PrivateLabel>\r\n            </AnswerContainer>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Question;\r\n  ","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Question from \"../components/Question\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst QuestionDetail = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const questionId = useParams().id;\r\n  \r\n  const getQuestion = async () => {\r\n    await dbService.collection(\"questions\").where(\"questionId\", \"==\", `${questionId}`).get()\r\n    .then(snapShot => {\r\n      const questionData = snapShot.docs.map(doc => ({\r\n        ...doc.data()\r\n      }))\r\n      setQuestion(questionData)\r\n      setIsLoading(false);\r\n    }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getQuestion();\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? \"Loading...\"\r\n      : <Question question={question[0]} />\r\n      }\r\n    </Container>\r\n  );\r\n  }\r\n\r\n  export default QuestionDetail;\r\n    ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst QuestionName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst QuestionForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst QuestionRegister = () => {\r\n    const [questionName, setQuestionName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setQuestionName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (questionName) {\r\n            const questionId = uuidv4();\r\n            const question = questionName;\r\n            const questionObj = {\r\n                question,\r\n                questionId,\r\n                answerUsers: [],\r\n                publicAnswer: [],\r\n            }\r\n            await dbService.collection(\"questions\").doc(question).set(questionObj)\r\n            setQuestionName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <QuestionName>\r\n                무슨 질문을 추가하실 건가요?\r\n            </QuestionName>\r\n            <QuestionForm>\r\n                <QuestionInput onChange={onChange} value={questionName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </QuestionForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default QuestionRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 75px;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  transition: 0.3s all ease-in-out;\r\n  background-color: rgba(0,0,0,0.3);\r\n  :hover, :focus-within {\r\n    font-style: italic;\r\n    background-color: var(--main-color);\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`  \r\n  font-family: Kyobo Handwriting;\r\n  font-size: 14px;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  transition: 0.3s all ease-in-out;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 200px;\r\n  transition: 0.3s all ease-in-out;\r\n  :focus {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst Search = ({ searchWord, setSearchWord }) => {\r\n    const onChange = (e) => {\r\n      setSearchWord(e.target.value)      \r\n    }\r\n    return (\r\n      <Container>\r\n        <Title>찾으시는 질문이 있나요?</Title>\r\n        <SearchInput onChange={onChange} value={searchWord} />\r\n      </Container>\r\n    );\r\n}\r\n  \r\nexport default Search;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Question from \"../components/Question\";\r\nimport Search from \"../components/Search\";\r\nimport { dbService } from \"../fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst Questions = ({questionArray, userObj}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([]);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n  \r\n    const getQuestions = async () => {\r\n    //     await dbService.collection(\"questions\").get()\r\n    //     .then(querySnapshot => {\r\n    //         const questionArray = querySnapshot.docs.map(doc => ({\r\n    //             id: doc.questionId,\r\n    //             ...doc.data()\r\n    //         }))\r\n            setQuestions(questionArray)\r\n            setIsLoading(!isLoading)\r\n    //     })\r\n    }\r\n\r\n    const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? \"Loading...\" \r\n            : (\r\n            <>\r\n                { currentPosts(questions.filter(question => question.question.includes(searchWord))).map(question => <Question key={question.questionId} userObj={userObj} question={question} /> )}\r\n                <Search searchWord={searchWord} setSearchWord={setSearchWord} />\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"3x\" />\r\n                </AddBtn>\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Questions;\r\n  ","import { faBars, faChevronRight, faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\"\r\nimport { authService } from \"../fBase\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: auto;\r\n    width: 50px;\r\n    z-index: 9;\r\n`;\r\n\r\nconst NavComponent = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 60px;\r\n    color: white;\r\n    background-color: rgba(0,0,0, 0.2);\r\n    opacity: 1;\r\n    z-index: 9;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavBtn = styled(animated.button)`\r\n    position: fixed;\r\n    top: 10px;\r\n    right: 10px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavCloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin: 10px;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Navigation = () => {\r\n    const [navState, setNavState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n        opacity : navState ? 1 : 0, \r\n        x: navState ? 0 : 100,\r\n        reverse: !navState,\r\n        config: config.gentle,\r\n    })\r\n\r\n    const reverseAnimation = useSpring({\r\n        opacity : navState ? 0 : 1, \r\n        x: navState ? 100 : 0,\r\n        reverse: navState,\r\n        config: config.gentle,\r\n    })\r\n\r\n    const onNavClick = () => {\r\n        setNavState(!navState)\r\n    }\r\n\r\n    const onClickLogout = () => {\r\n        authService.signOut();\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {navState ?(\r\n            <Container style={animation}>\r\n                <Link to={\"/\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/community\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>C</NavComponent>\r\n                </Link> \r\n                <Link to={\"/questions\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>Q</NavComponent>\r\n                </Link>\r\n                <Link to={\"/myanswers\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>A</NavComponent>\r\n                </Link> \r\n                <Link to={\"/settings\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>S</NavComponent>\r\n                </Link> \r\n                <NavComponent onClick={onClickLogout}>O</NavComponent>\r\n                <NavCloseBtn style onClick={onNavClick}>\r\n                    <FontAwesomeIcon icon={faChevronRight} />\r\n                </NavCloseBtn>\r\n            </Container>\r\n            ) : (\r\n            <NavBtn style={reverseAnimation} onClick={onNavClick}>\r\n                <FontAwesomeIcon icon={faBars} size=\"lg\" />\r\n            </NavBtn>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"../fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    z-index: 999;\r\n`;\r\n\r\nconst CheerName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CheerForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CheerInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CheerRegister = () => {\r\n    const [cheerName, setCheerName] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setCheerName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (cheerName) {\r\n            const cheerId = uuidv4();\r\n            const cheer = cheerName;\r\n            const cheerObj = {\r\n                cheer,\r\n                cheerId,\r\n            }\r\n            await dbService.collection(\"cheers\").doc(cheerName).set(cheerObj)\r\n            setCheerName(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CheerName>\r\n                무슨 응원을 추가하실 건가요?\r\n            </CheerName>\r\n            <CheerForm>\r\n                <CheerInput onChange={onChange} value={cheerName} type=\"text\" />\r\n                <Submit onClick={onSubmit}>추가하기</Submit>\r\n            </CheerForm>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default CheerRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"../fBase\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 150px;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 25px;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ProfileLabel = styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ProfileInput = styled.input`\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileSubmitBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst QnaContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 200px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst QnaLabel =styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst QnaInput = styled.textarea`\r\n    font-size: 12px;\r\n    width: 70%;\r\n    height: 50px;\r\n`;\r\n\r\nconst QnaSubmitBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Settings = ({ refreshUser, userObj }) => {\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [report, setReport] = useState('');\r\n\r\n    const onChange = e => {\r\n        setDisplayName(e.target.value)\r\n    }\r\n\r\n    const onChangeReport = e => {\r\n        setReport(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (displayName && userObj.displayname !== displayName) {\r\n            await userObj.updateProfile({\r\n                displayName\r\n            });\r\n            refreshUser();\r\n            setDisplayName(\"\");\r\n        };\r\n    };\r\n\r\n    const onReport = async e => {\r\n        e.preventDefault();\r\n        const reportObj = {\r\n            report,\r\n            userId : userObj.uid,\r\n            createdAt : Date.now()\r\n        }\r\n        dbService.collection(\"reports\").add(reportObj)\r\n    }\r\n\r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>\r\n                {userObj.displayName}의 서랍장\r\n            </Title>\r\n\r\n            <ProfileContainer>\r\n                <ProfileLabel>이름 바꾸기</ProfileLabel>\r\n                <ProfileInput onChange={onChange} value={displayName} type=\"text\" />\r\n                <ProfileSubmitBtn onClick={onSubmit}>변경하기</ProfileSubmitBtn>\r\n            </ProfileContainer>\r\n\r\n            <QnaContainer>\r\n                <QnaLabel>문의하기 & 버그리포트</QnaLabel>\r\n                <QnaInput onChange={onChangeReport} value={report}type=\"text\" />\r\n                <QnaSubmitBtn onClick={onReport} >문의하기</QnaSubmitBtn>\r\n            </QnaContainer>\r\n            <LogOutBtn onClick={onLogOut}>Logout</LogOutBtn>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Settings;\r\n  ","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst Friends = () => {\r\n    return (\r\n        <Container>\r\n            <Title>친구들</Title>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst Notes = () => {\r\n    return (\r\n        <Container>\r\n            <Title>쪽지함</Title>\r\n            <hr />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notes;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Friends from \"../components/Friends\";\r\nimport Notes from \"../components/Notes\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Community = () => {\r\n    return (\r\n        <Container>\r\n            <Notes />\r\n            <Friends />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Community;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Auth from \"../routes/Auth\";\r\nimport MyAnswers from \"../routes/MyAnswers\";\r\nimport AnswerDetail from \"../routes/AnswerDetail\";\r\nimport QuestionDetail from \"../routes/QuestionDetail\";\r\nimport QuestionRegister from \"../routes/QuestionRegister\";\r\nimport Questions from \"../routes/Questions\";\r\nimport Navigation from \"../routes/Navigation\";\r\nimport CheerRegister from \"../routes/CheerRegister\";\r\nimport Settings from \"../routes/Settings\";\r\nimport Community from \"../routes/Community\";\r\n\r\nconst AppRouter = ({ questionArray, isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? \r\n            ( <> \r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\" >\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route exact path=\"/community\" >\r\n                        <Community userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/myanswers\" >\r\n                        <MyAnswers questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/questions\" >\r\n                        <Questions questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/question/:id\" >\r\n                        <QuestionDetail />\r\n                    </Route>\r\n                    <Route exact path=\"/answer/:id\" >\r\n                        <AnswerDetail />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\" >\r\n                        <Settings refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                </Switch>\r\n                <Switch>\r\n                    <Route exact path=\"/questionregister\" >\r\n                        <QuestionRegister />\r\n                    </Route>\r\n                    <Route exact path=\"/cheerregister\" >\r\n                        <CheerRegister />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { authService } from \"../fBase\";\nimport AppRouter from \"./Router\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: Kyobo Handwriting;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const questionArray = [\n    {\n        question : \"결정을 잘 하시나요?\",\n        questionId : \"b8f300df-0fff-4fd0-a066-3c5bafe6d024\"\n    }, \n    {\n        question: \"괜찮아요?\",\n        questionId: \"ce35b720-8cbf-43af-aae6-914403c99789\"\n    },\n    {\n        question: \"그리운가요?\",\n        questionId: \"9428cfbc-2a42-48aa-8e2f-42700e928af4\"\n    },\n    {\n        question: \"꼭 가보고 싶은 곳이 있나요?\",\n        questionId: \"16a9a4c6-d1d9-4977-97ec-1fca76dc7b9c\"\n    },\n    {\n        question: \"꿈이 있나요?\",\n        questionId: \"00d1e249-bd6a-452c-81a4-458b30640945\"\n    },\n    {\n        question: \"누군가에게 말하기 어려운 것이 있다면 여기에 적어보세요.\",\n        questionId: \"f08c3f4a-13b7-4d6a-bf2b-901df73e5751\"\n    },\n    {\n        question: \"느낌을 사기위해 무언가를 지불해본 적이 있나요?\",\n        questionId: \"09770edd-b174-44de-a314-95a83eaa613e\"\n    },\n    {\n        question: \"답답한가요?\",\n        questionId: \"840ce86f-8a9e-444d-b1c1-8dd589c200ab\"\n    },\n    {\n        question: \"당신께 사랑은 무엇인가요?\",\n        questionId: \"4adc09d4-5a43-45b9-a525-d77454fa70a5\"\n    },\n    {\n        question: \"당신께 행복은 무엇인가요?\",\n        questionId: \"4f24a89a-3155-435b-84cb-82c731037942\"\n    },\n    {\n        question: \"당신께도 질문이 있나요?\",\n        questionId: \"88b121a4-e8ab-4d2d-99d3-7fec0876d439\"\n    },\n    {\n        question: \"당신은 누구인가요?\",\n        questionId: \"fa92f9e9-853a-4332-8bc6-79567fa23db5\"\n    },\n    {\n        question: \"당신은 어떤 답장을 쓰고 싶으신가요?\",\n        questionId: \"38beaf3b-90f3-4463-bfed-b5f416459280\"\n    },\n    {\n        question: \"대화가 힘들때가 있나요?\",\n        questionId: \"e459723f-00cb-43c5-8486-6d021433aea1\"\n    },\n    {\n        question: \"두려운가요?\",\n        questionId: \"e4741c08-ad4b-4328-952f-755db960fd38\"\n    },\n    {\n        question: \"모순이 있나요?\",\n        questionId: \"f8e4799a-aa4a-4b04-8e9d-667fb1a1d512\"\n    },\n    {\n        question: \"무엇이라 불리고 싶나요?\",\n        questionId: \"b6e8e867-1483-4249-89c1-9bb4a32517a8\"\n    },\n    {\n        question: \"밤을 좋아하나요?\",\n        questionId: \"d1e623a3-1d3e-45fb-9f3a-e737d9675766\"\n    },\n    {\n        question: \"번외가 있나요?\",\n        questionId: \"c7209c46-b4c0-40d5-ad1c-c420ccb0b9dc\"\n    },\n    {\n        question: \"사랑이란 무엇일까요?\",\n        questionId: \"2075b151-ed2d-4813-953e-a59a1f2d5bc6\"\n    },\n    {\n        question: \"사랑하고 있나요?\",\n        questionId: \"a06a2a77-1d1d-434c-a25d-38b6b4a5d2da\"\n    },\n    {\n        question: \"사랑한다고 말해보세요.\",\n        questionId: \"085e6ddd-7498-4a67-a894-1c42acc1c36a\"\n    },\n    {\n        question: \"생각보다 중요하지 않았던 것이 있었나요?\",\n        questionId: \"1f726ded-2c33-4803-9c5c-23cb63045667\"\n    },\n    {\n        question: \"솔직한가요?\",\n        questionId: \"109366f3-5429-4764-af23-e941e06b6e56\"\n    },\n    {\n        question: \"어리광부리고 싶다면 여기에 부려보세요.\",\n        questionId: \"d79dcd7f-e346-4b8d-9c96-50e8841efe54\"\n    },\n    {\n        question: \"어릴 때 무얼하고 놀았는지 기억나나요?\",\n        questionId: \"4303d851-1cb9-4e99-bfa5-a8735da2914a\"\n    },\n    {\n        question: \"얼었던 것이 녹으면 무엇이 되나요?\",\n        questionId: \"02a8706b-03c3-446c-9500-df3dc8fae4b1\"\n    },\n    {\n        question: \"오늘 하늘은 무슨 색이었나요?\",\n        questionId: \"55b33e10-36a5-4d24-af30-c8fa8bf13113\"\n    },\n    {\n        question: \"용서할 수 있나요?\",\n        questionId: \"640d40e5-8bee-49a8-ac49-f0879defa381\"\n    },\n    {\n        question: \"이끌려본적이 있나요?\",\n        questionId: \"ca706d16-6248-42f2-9826-77a9d8f7f94e\"\n    },\n    {\n        question: \"이상형을 그려보세요.\",\n        questionId: \"f11f02b9-88fb-4632-bdde-f824df368199\"\n    },\n    {\n        question: \"이해받고 있나요?\",\n        questionId: \"69b10746-2ee8-4941-b4d6-b943d6af7960\"\n    },\n    {\n        question: \"잊었던 단어가 있나요?\",\n        questionId: \"2d6d5007-4a8b-4176-8b1b-9556d66a2b05\"\n    },\n    {\n        question: \"이해받고 있나요?\",\n        questionId: \"69b10746-2ee8-4941-b4d6-b943d6af7960\"\n    },\n    {\n        question: \"정말 소통하고 있나요?\",\n        questionId: \"5dc5d43e-9642-4272-a2cc-5724ef9e95f2\"\n    },\n    {\n        question: \"좋아하는 공간이 있나요?\",\n        questionId: \"5690fbae-3972-4dfc-a21c-d6a3be147b9c\"\n    },\n    {\n        question: \"즐거웠던 순간을 적어보세요.\",\n        questionId: \"4e996e57-2dd3-47a2-b34d-d996678d3f25\"\n    },\n    {\n        question: \"지금, 무슨 생각을 하시나요?\",\n        questionId: \"e57084db-75c3-419c-b34b-fc42088e8d48\"\n    },\n    {\n        question: \"지금, 무엇을 원하시나요?\",\n        questionId: \"4ddb5a9b-415a-44f6-83a6-c86455b2ca7a\"\n    },\n    {\n        question: \"지금, 어떤 감정을 느끼시나요?\",\n        questionId: \"1fe19a57-445c-49ec-bc6b-d5e4aaed4410\"\n    },\n    {\n        question: \"쫓기고 있나요?\",\n        questionId: \"b1d88547-3c58-4a79-a4a1-a9cca797b06f\"\n    },\n    {\n        question: \"큰 일이 닥친다면?\",\n        questionId: \"c483234f-4d47-4786-b28d-29633b1f7644\"\n    },\n    {\n        question: \"편지를 받은 기억이 있나요?\",\n        questionId: \"88b4306d-91b8-43cc-ae82-67457d41d4e3\"\n    },\n    {\n        question: \"표현하지 못하는 것이 있나요?\",\n        questionId: \"a4be7cc2-a279-4715-bbbd-7e5a72f9d20c\"\n    },\n    {\n        question: \"힘들었던 순간은 여기에 두고 가도록해요.\",\n        questionId: \"e7ffd573-2901-45d5-9c79-42bebaa1ea4b\"\n    },\n]\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: (user.displayName ? user.displayName : \"익명\"),\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      } else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  }, [])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <Container>\n      <GlobalStyle />\n      {init ? <AppRouter questionArray={questionArray} isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser = {refreshUser} />\n      : \"Loading...\"\n        }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}