{"version":3,"sources":["utils/fBase.js","components/answer/FriendBtn.js","components/answer/BookmarkBtn.js","components/comment/CommentFactory.js","components/answer/Answer.js","components/DB/CheerDB.js","components/auth/Cheer.js","components/loading/Loading.js","components/hooks/useScrollMove.js","pages/Home.js","components/auth/TermModal.js","components/auth/Login.js","pages/Auth.js","components/settings/ProfileBio.js","pages/MyAnswers.js","pages/QuestionDetail.js","pages/QuestionRegister.js","components/questions/Question.js","components/commons/Search.js","pages/Questions.js","pages/Navigation.js","pages/Settings.js","components/community/Friends.js","components/community/Bookmarks.js","pages/Community.js","pages/UserAnswers.js","pages/SignOut.js","components/credit/SpecialThanksTo.js","components/DB/Sponsor.js","components/credit/Sponsors.js","components/credit/Thankyou.js","components/credit/ThinkGivers.js","assets/music/Soul and Mind - E's Jammy Jams.mp3","components/credit/MusicComponent.js","components/hooks/UseInterval.js","pages/Credit.js","components/note/NotesList.js","pages/NotesUser.js","components/note/NoteDetail.js","pages/NotesAnswer.js","pages/Manual.js","components/comment/Comment.js","pages/AnswerDetail.js","components/error/NotFound.js","components/Router.js","components/DB/ErrorDB.js","components/error/ErrorPage.js","components/error/ErrorBoundary.js","lib/Messaginginit.js","components/App.js","utils/serviceWorkerRegistration.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","messaging","isSupported","auth","dbService","firestore","storage","Container","styled","div","FriendBtn","answer","userObj","refreshFriends","onClickFriend","a","collection","doc","uid","update","friends","userId","then","alert","userName","includes","onClick","icon","faUserFriends","BookmarkBtn","refreshBookmarks","onClickBookmark","e","preventDefault","bookmarks","answerId","bookmarkCount","FieldValue","increment","console","log","onDeleteBookmark","window","confirm","filter","el","faBookReader","faBookOpen","Title","NoteTextarea","textarea","IconBox","CommentFactory","setNoteState","useState","noteContent","setNoteContent","onSubmit","noteId","uuidv4","noteObj","createdAt","Date","now","writer","writerName","displayName","receiver","isRead","set","get","snapshot","token","data","axios","post","headers","value","onChange","target","slice","faSave","Question","h1","InfoContainer","CreatedAt","span","WriterContainer","Writer","Content","ReplyIcon","PrivateBtn","button","EditInput","PaperClip","Answer","id","useParams","editState","setEditState","noteState","changedAnswer","setChangedAnswer","history","useHistory","Time","year","getFullYear","month","getMonth","day","getDate","date","lastTime","lastMinutes","Math","round","lastHours","lastDays","onClickPrivate","isPrivate","style","margin","random","left","Array","map","index","faBookmark","push","questionId","question","editedAt","marginLeft","faPencilAlt","delete","answers","faTrashAlt","faReply","transform","autoFocus","CheerComment","animated","CloseBtn","RefreshBtn","CheerPhrase","Cheer","cheer","setCheer","cheerState","setCheerState","animation","useSpring","from","opacity","y","to","minHeight","padding","useEffect","floor","color","faChevronUp","faChevronDown","faSyncAlt","LoadingBox","Blink","keyframes","Skew","DotBlink","Bulb","img","Drawer","Dot","AnswerCount","comment","Loading","num","setNum","answerCount","setAnswerCount","localStorage","getItem","JSON","parse","className","src","alt","useScrollMove","page","path","dom","scrollInfos","setScrollInfos","match","useRouteMatch","scrollSave","useCallback","scrollPos","scrollTop","scrollY","setItem","scrollRemove","removeItem","listen","location","isExact","pathname","RandomBtn","AddBtn","LastAnswer","DiceContainer","Dice","Notice","Home","isLoading","setISLoading","setAnswers","currentPage","setCurrentPage","diceState","setDiceState","randomState","setRandomState","makeRandArray","randArray","i","l","getData","setTimeout","where","onSnapshot","answerArray","docs","sort","b","orderBy","limitToLast","catch","error","isFirst","scrollTo","max","document","documentElement","body","posts","currentPosts","faDice","size","faPlusCircle","Terms","TermModal","closeModal","faCheck","AuthConatiner","LoginContainer","LoginLabel","label","LoginInput","input","LoginBtn","PasswordContainer","PasswordLabel","PasswordInput","PasswordBtn","Error","Login","setCodeState","codeState","code","setCode","password","setPassword","setError","modalState","setModalState","signInWithEmailAndPassword","message","config","gentle","errorAni","width","type","Background","AuthBox","Welcome","Auth","authState","setAuthState","top","molasses","welcomeAni","EditBtn","BioContainer","BioTitle","BioLine","hr","BioContent","BioTextarea","TextCounter","ProfileBio","refreshBio","isProfile","setIsLoading","bio","setBio","count","setCount","onClickEdit","getBio","maxLength","WriteBtn","MyAnswers","myAnswers","setMyAnswers","getMyAnswers","myAnswerArray","myAnswer","textDecoration","faEdit","QuestionDetail","getAnswers","snapShot","answerData","QuestionContainer","CheerContainer","QuestionName","h3","QuestionForm","form","QuestionInput","Submit","CheerName","CheerForm","CheerInput","CodeContainer","CodeInput","CodeBtn","CodeDiv","QuestionRegister","questionName","setQuestionName","cheerName","setCheerName","specific","setSpecific","questionObj","answerUsers","publicAnswer","onSubmitCheer","cheerId","cheerObj","makeCode","chars","randomstring","rnum","substring","createUserWithEmailAndPassword","newUserObj","user","isPassword","initCode","updateProfile","signOut","AnswerContainer","AnswerInput","AnswerCheckbox","AnswerTextarea","PrivateLabel","AnswerBtn","setIsPrivate","setAnswer","longAnswer","setLongAnswer","answerValue","getAttribute","name","answerObj","marginBottom","for","SearchContainer","SearchInput","SearchSubmit","SearchBtn","SearchBtnLabel","Search","onSearch","searchWord","setSearchWord","searchState","setSearchState","fromHome","faTimes","faSearch","BackBtn","LastQuestion","Questions","questionArray","questions","setQuestions","getQuestions","countData","goBack","faChevronLeft","NavComponent","NavTitle","NavBtn","NavCloseBtn","Navigation","navState","setNavState","x","reverse","default","reverseAnimation","onNavClick","faHome","faInbox","faCog","faChevronRight","ProfileContainer","ProfileLabel","ProfileForm","PasswordForm","ProfileBox","ProfileInput","ProfileSubmitBtn","BtnContainer","ManualBtn","CreditBtn","LogOutBtn","QnaContainer","QnaLabel","QnaInput","QnaSubmitBtn","PurchaseBtn","Crown","Settings","refreshUser","setDisplayName","email","setEmail","report","setReport","nameState","setNameState","emailState","setEmailState","passwordState","setPasswordState","passwordCheck","setPasswordCheck","displayname","onSubmitEmail","currentUser","updateEmail","onSubmitPassword","updatePassword","onReport","reportObj","add","required","marginTop","fontSize","faCrown","href","FriendList","Friend","FriendRight","FriendName","FriendCode","FriendIcon","Friends","friendsLoading","setFriendsLoading","setFriends","getFriends","friendsArray","forEach","friend","onClickUser","onDeleteFriend","newFriends","toLowerCase","Bookmarks","bookmarksLoading","setBookmarksLoading","someoneAnswers","setSomeoneAnswers","getBookmarks","bookmarksArray","bookmark","Community","UserAnswers","SignOut","ThanksFor","h2","Name","SpecialThanksTo","init","Sponsor","thinkShare","sponsor","ThanksContainer","ThanksTitle","ThanksName","Comment","White","Sponsors","thinkperson","Thankyou","commentState","transitionDelay","ThinkGivers","PlayBox","PlayInput","PlayBtnBox","PlayBtn","MusicComponent","setInit","setCommentState","speed","setSpeed","setScroll","Audio","bgm","bgmJazz","onScroll","onClickPlay","isMobile","play","pause","callback","delay","intervalRef","useRef","savedCallback","current","setInterval","clearInterval","useInterval","paused","innerHeight","scrollHeight","scrollBy","behavior","screenY","addEventListener","bottom","min","faBackward","faPlay","faPause","faForward","Credit","NoteTitle","NoteContent","NoteWriter","NoteTime","NotesList","noteData","faCommentAlt","NotesContainer","NotesAnswer","setUserName","notesCategory","setNotesCategory","querySnapshot","notesCategoryData","notesCategoryAnswer","notesArray","category","NoteDetail","alignSelf","notesData","setNotesData","setQuestion","note","Farewell","ManualPic","Page","StartBtn","NextBtn","PrevBtn","Manual","refreshFirst","setPage","onClickStart","right","IconContainer","Icon","editContent","setEditContent","dttm","faTrash","NotesConatiner","AnswerDetail","notes","setNotes","getNotes","getAnswer","NotFound","class","AppRouter","isLoggedIn","exact","NotesUser","ErrorComment","Pic","ErrorPage","replace","ErrorBoundary","props","state","hasError","this","children","React","Component","setToken","getToken","err","onMessage","payload","notification","GlobalStyle","createGlobalStyle","reset","App","setUserObj","bioData","setBioData","requestToken","stringify","querySelector","onAuthStateChanged","navigator","userData","args","Boolean","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b00a9faf.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/messaging\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCp6H94uOjFnuEvgDEoTt2V_PLtt0DBnrs\",\r\n  authDomain: \"answercommunity-328ec.firebaseapp.com\",\r\n  projectId: \"answercommunity-328ec\",\r\n  storageBucket: \"answercommunity-328ec.appspot.com\",\r\n  messagingSenderId: \"471754929471\",\r\n  appId: \"1:471754929471:web:76a974475f1d82dbf54f8a\",\r\n  measurementId: \"G-KJV9NQRBNJ\"\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n} else {\r\n  firebase.app();\r\n}\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const messaging = firebase.messaging.isSupported() ? firebase.messaging() : null;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { faUserFriends } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { dbService } from 'utils/fBase';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  color: inherit;\r\n  transition: 0.5s all ease-in-out;\r\n  z-index: 9;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst FriendBtn = ({ answer, userObj, refreshFriends }) => {\r\n    const onClickFriend = async (answer) => {\r\n        await dbService.collection('users')\r\n          .doc(`${userObj.uid}`)\r\n          .update({\r\n            friends: [...userObj.friends, answer.userId]\r\n          })\r\n        .then(() => {\r\n          refreshFriends(userObj, [...userObj.friends, answer.userId])\r\n          alert(`${answer.userName}님을 서랍장에 추가했습니다.`)\r\n        })\r\n      }\r\n\r\n    return (\r\n      <>\r\n        {userObj.friends && !userObj.friends.includes(answer.userId) && \r\n          <Container onClick={() => {onClickFriend(answer)}}>\r\n              <FontAwesomeIcon icon={faUserFriends} />\r\n          </Container>\r\n        }\r\n      </>\r\n    );\r\n};\r\n\r\nexport default FriendBtn;","import { faBookOpen, faBookReader } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { dbService, firebaseInstance } from 'utils/fBase';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  color: inherit;\r\n  transition: 0.5s all ease-in-out;\r\n  z-index: 9;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst BookmarkBtn = ({answer, userObj, refreshBookmarks}) => {\r\n    const onClickBookmark = async (e) => {\r\n        e.preventDefault();\r\n        if (!userObj.bookmarks) {\r\n          await dbService.collection('users')\r\n            .doc(`${userObj.uid}`)\r\n            .update({\r\n              bookmarks: [answer.answerId]\r\n            })\r\n          .then(async () => {\r\n            await dbService.collection('answers')\r\n              .doc(`${answer.answerId}`)\r\n              .update({\r\n                bookmarkCount: firebaseInstance.firestore.FieldValue.increment(1)\r\n              });\r\n    \r\n            refreshBookmarks(userObj, [answer.answerId]);\r\n          }) \r\n        } else {\r\n          await dbService.collection('users')\r\n            .doc(`${userObj.uid}`)\r\n            .update({\r\n              bookmarks: [...userObj.bookmarks, answer.answerId]\r\n            })\r\n          .then(async () => {\r\n            await dbService.collection('answers')\r\n              .doc(`${answer.answerId}`)\r\n              .update({\r\n                bookmarkCount: firebaseInstance.firestore.FieldValue.increment(1)\r\n              })\r\n    \r\n            refreshBookmarks(userObj, [...userObj.bookmarks, answer.answerId]);\r\n          })  \r\n        }\r\n        console.log(userObj);\r\n      }\r\n    \r\n      const onDeleteBookmark = async (e) => {\r\n        console.log(userObj);\r\n        e.preventDefault();\r\n        window.confirm('책갈피를 빼시겠어요?') &&\r\n        await dbService.collection('users')\r\n          .doc(`${userObj.uid}`\r\n          ).update({\r\n            bookmarks: [...userObj.bookmarks.filter((el) => el !== answer.answerId)],\r\n          })\r\n        .then(async () => {\r\n          await dbService.collection('answers')\r\n            .doc(`${answer.answerId}`)\r\n            .update({\r\n              bookmarkCount: firebaseInstance.firestore.FieldValue.increment(-1)\r\n            })\r\n    \r\n          refreshBookmarks(userObj, [...userObj.bookmarks.filter((el) => el !== answer.answerId)]);\r\n        })       \r\n      }\r\n\r\n    return (\r\n        <>\r\n            {userObj.bookmarks && userObj.bookmarks.includes(answer.answerId)\r\n            ? \r\n              <Container onClick={onDeleteBookmark}>\r\n                <FontAwesomeIcon icon={faBookReader} />\r\n              </Container>\r\n            :\r\n              <Container onClick={onClickBookmark}>\r\n                <FontAwesomeIcon icon={faBookOpen} />\r\n              </Container>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BookmarkBtn;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    text-indent: 5px;\r\n  line-height: 17px;\r\n  background-color: white;\r\n  word-break: keep-all;\r\n  border-bottom-right-radius: 10px;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 12px;\r\n  opacity: 70%;\r\n  color: black;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.div``;\r\n\r\nconst NoteTextarea = styled.textarea`\r\n    font-size: 12px;\r\n    width: 100%;\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst CommentFactory = ({answer, userObj, setNoteState}) => {\r\n    const [noteContent, setNoteContent] = useState('');\r\n\r\n    const onChange = e => {\r\n        setNoteContent(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (noteContent) {\r\n            const noteId = uuidv4()\r\n            const noteObj = {\r\n            noteContent,\r\n            noteId,\r\n            createdAt: Date.now(),\r\n            writer: userObj.uid,\r\n            writerName: userObj.displayName,\r\n            receiver: answer.userId,\r\n            answer: answer.answer,\r\n            answerId: answer.answerId,\r\n            isRead: false,\r\n        }\r\n        dbService.collection(\"notes\").doc(`${noteId}`).set(noteObj)\r\n        await dbService.collection(\"users\").doc(`${answer.userId}`).get()\r\n        .then(snapshot => {\r\n            const data = snapshot.data()\r\n            const token = data.token\r\n            axios.post(\"https://fcm.googleapis.com/fcm/send\", {\r\n                \"to\": `${token}`,\r\n                \"notification\": {\r\n                    \"title\": `${answer.answer}에 메모가 달렸습니다.`,\r\n                    \"body\": `${noteContent}`\r\n                }\r\n            }, \r\n            {\r\n                headers:  \r\n                {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"key=AAAAbdbI9T8:APA91bHBHA83-rpRKMQChKE7FcUkvFSzbZ1qHOBZhrXNxBdo6U2cfB89xqpbsLIjYbBHVyGhOMFWwZNlRMF0I9cAshUvrkhyWDZqMcjgx5FzuAL3P9IK2YivTtQfdvygSIAhk9HVM30K\"\r\n                }\r\n            })\r\n        })\r\n        alert(\"메모가 성공적으로 남겨졌습니다 :)\")\r\n        setNoteState(false);\r\n        setNoteContent('');\r\n    }\r\n    }\r\n    return (\r\n        <Container>\r\n            <Title>답변에 메모 달기</Title>\r\n            <hr />\r\n            <NoteTextarea value={noteContent} onChange={onChange} />\r\n            <IconBox onClick={(e) => {\r\n                if(noteContent && window.confirm(`${answer.answer.slice(0, 9)}${answer.answer.length > 10 ? '...' : ''}에 메모를 달아놓을까요?`)){\r\n                    onSubmit(e)\r\n                }\r\n                \r\n            }}>\r\n                <FontAwesomeIcon icon={faSave} />\r\n            </IconBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CommentFactory;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBookmark, faBookOpen, faBookReader,  faPencilAlt, faReply, faSave, faTrashAlt, faUserFriends } from '@fortawesome/free-solid-svg-icons';\r\nimport FriendBtn from 'components/answer/FriendBtn';\r\nimport BookmarkBtn from 'components/answer/BookmarkBtn';\r\nimport NoteFactory from 'components/comment/CommentFactory';\r\nimport { dbService, firebaseInstance } from 'utils/fBase';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  padding: 25px 15px 30px 15px;\r\n  box-sizing: border-box;\r\n  border: 1px solid black;\r\n  box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n  color: black;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n  opacity: 70%;\r\n  transition: 0.3s all ease-in-out;\r\n  transform: skewX(-0.5deg);\r\n  z-index: 1;\r\n  :hover {\r\n      color: var(--main-color);\r\n      transform: skew(0, 0);\r\n      opacity: 95%;\r\n  }\r\n`;\r\n\r\nconst Question = styled.h1`\r\n  line-height: 20px;\r\n  text-align: center;\r\n  word-break: keep-all;\r\n  transition: 0.3s all ease-in-out;\r\n  font-family: Jeju Myeongjo;\r\n  margin-bottom: 20px;\r\n  font-size: 0.9rem;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.1s all ease-in-out;\r\n  color: black;\r\n  position: absolute;\r\n  bottom: 10px;\r\n  right: 15px;\r\n  font-size: 0.8rem;\r\n  z-index: 9;\r\n`;\r\n\r\nconst CreatedAt = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.5s all ease-in-out;\r\n  color: black;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 0.6rem;\r\n`;\r\n\r\nconst WriterContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  color: black;\r\n  z-index: 9;\r\n`;\r\n\r\nconst Writer = styled.span`\r\n  transition: 0.3s all ease-in-out;\r\n  text-align: right;\r\n  width: auto;\r\n  box-sizing: border-box;\r\n  margin-bottom: 10px;\r\n  font-size: 0.7rem;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  white-space: pre-wrap;\r\n  text-indent: 5px;\r\n  line-height: 160%;\r\n  background-color: white;\r\n  opacity: inherit;\r\n  border-radius: 10px;\r\n  word-break: keep-all;\r\n  font-family: Jeju Myeongjo;\r\n  width: 100%;\r\n  padding: 15px;\r\n  font-size: 0.8rem;\r\n  color: black;\r\n  box-sizing: border-box;\r\n  transition: all 0.5s ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst IconBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  color: inherit;\r\n  transition: 0.5s all ease-in-out;\r\n  z-index: 9;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ReplyIcon = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 5px;\r\n  color: inherit;\r\n  transition: 0.5s all ease-in-out;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  font-size: 0.8rem;\r\n  z-index: 9;\r\n  :hover {\r\n    color: var(--gold);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst PrivateBtn = styled.button`\r\n  font-family: Kyobo Handwriting;\r\n  background: none;\r\n  border: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n  line-height: 17px;\r\n  font-size: 0.7rem;\r\n  width: 90%;\r\n  min-height: 100px;\r\n  z-index: 9;\r\n`;\r\n\r\nconst PaperClip = styled.div`\r\n  display: flex;\r\n  gap: 3px;\r\n  position: absolute;\r\n  top: -7px;\r\n  left: 0;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Answer = ({ answer, userObj, refreshFriends, refreshBookmarks }) => {\r\n  const { id } = useParams();\r\n  const [editState, setEditState] = useState(false);\r\n  const [noteState, setNoteState] = useState(false);\r\n  const [changedAnswer, setChangedAnswer] = useState('');\r\n  \r\n  const history = useHistory();\r\n\r\n  const Time = new Date(answer.createdAt) \r\n  const year = Time.getFullYear();\r\n  const month = Time.getMonth() + 1;\r\n  const day = Time.getDate();\r\n  const date = `${year}년 ${month < 10 ? '0'+month : month}월 ${day < 10 ? '0'+day : day}일`\r\n  const lastTime = (Date.now() - answer.createdAt) / 1000 / 60\r\n  const lastMinutes = Math.round(lastTime)\r\n  const lastHours = Math.round(lastTime / 60)\r\n  const lastDays = Math.round(lastHours / 24)\r\n\r\n  const onClickEdit = e => {\r\n    e.preventDefault();\r\n    setChangedAnswer(answer.answer)\r\n    if (answer.userId === userObj.uid) {\r\n      setEditState(!editState);\r\n      if(changedAnswer !== answer.answer & editState === true) {\r\n        window.confirm('내용을 수정하시겠어요?') && dbService.collection('answers')\r\n        .doc(answer.answerId)\r\n        .update({\r\n          answer: changedAnswer,\r\n          editedAt: Date.now()\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const onClickDelete = e => {\r\n    e.preventDefault();\r\n    if (answer.userId === userObj.uid) {\r\n      window.confirm('정말 지우실건가요?') && \r\n      dbService.collection('answers')\r\n        .doc(`${answer.answerId}`)\r\n        .delete()\r\n      .then(() => {\r\n        dbService.collection('main')\r\n          .doc('counts')\r\n          .update({\r\n            answers: firebaseInstance.firestore.FieldValue.increment(-1)\r\n          })\r\n        \r\n        alert('삭제되었습니다.');\r\n      })\r\n    }\r\n  }\r\n  \r\n  const onClickNote = e => {\r\n    e.preventDefault();\r\n    setNoteState(!noteState);\r\n  }\r\n\r\n  const onClickDetail = e => {\r\n    e.preventDefault();\r\n    history.push(`/question/${answer.questionId}`);\r\n  }\r\n\r\n  const onClickUser = e => {\r\n    e.preventDefault();\r\n    history.push(`/useranswer/${answer.userId}`);\r\n  }\r\n\r\n  const onChange = e => {\r\n    setChangedAnswer(e.target.value);\r\n  }\r\n\r\n  const onClickPrivate = async () => {\r\n    window.confirm('공개 상태를 바꾸시겠어요?') &&\r\n    await dbService.collection('answers')\r\n      .doc(`${answer.answerId}`)\r\n      .update({\r\n        isPrivate: !answer.isPrivate\r\n      })\r\n    .then(() => {\r\n      alert('성공적으로 변경되었습니다!');\r\n    })\r\n  }\r\n\r\n  const onClickAnswer = e => {\r\n    if (!editState) {\r\n      if (id) {\r\n        if (id !== answer.answerId) history.push(`/answer/${answer.answerId}`);\r\n      } else {\r\n        history.push(`/answer/${answer.answerId}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container style={{margin: `${Math.random() * 10 + 5}px`, left: `${Math.random() * 6 - 3}%`}}>\r\n      {answer.bookmarkCount \r\n        ? \r\n          <PaperClip>\r\n            {[...Array(answer.bookmarkCount)].map((el, index) => {\r\n                  return <FontAwesomeIcon key={index} icon={faBookmark} />\r\n                }\r\n              )\r\n            }\r\n          </PaperClip>\r\n        : null\r\n      }\r\n      <Question onClick={onClickDetail}>\r\n        {answer.question}\r\n      </Question>\r\n      <InfoContainer>\r\n        {answer.userId === userObj.uid \r\n        ? (\r\n        <>\r\n          <PrivateBtn onClick={onClickPrivate}>\r\n            {answer.isPrivate \r\n              ? '공개하기'\r\n              : '나만 보기'\r\n            }\r\n          </PrivateBtn>\r\n          <IconBox onClick={onClickEdit}>\r\n            {editState\r\n              ? <FontAwesomeIcon style={{marginLeft: '5px'}} icon={faSave} />\r\n              : <FontAwesomeIcon style={{marginLeft: '5px'}} icon={faPencilAlt} />\r\n            }\r\n          </IconBox>\r\n          <IconBox onClick={onClickDelete}>\r\n            <FontAwesomeIcon style={{marginLeft: '5px'}} icon={faTrashAlt} />\r\n          </IconBox>\r\n        </>\r\n          )\r\n        : (\r\n          <>\r\n            <FriendBtn \r\n              answer={answer} \r\n              userObj={userObj} \r\n              refreshFriends={refreshFriends} \r\n            />\r\n            <BookmarkBtn \r\n              answer={answer} \r\n              userObj={userObj} \r\n              refreshBookmarks={refreshBookmarks} \r\n            />\r\n          </>\r\n        )}\r\n      </InfoContainer>\r\n      <ReplyIcon onClick={onClickNote}>\r\n        <FontAwesomeIcon icon={faReply} style={{ transform: 'rotate(180deg)' }} />\r\n      </ReplyIcon>\r\n      <CreatedAt>\r\n        {lastMinutes < 60 \r\n        ? `${lastMinutes}분 전` \r\n        : lastHours < 24 \r\n          ? `${lastHours}시간 전`\r\n          : lastDays > 7\r\n            ? `${date}`\r\n            : `${lastDays}일 전`\r\n        }\r\n        {answer.editedAt && '(수정됨)'}\r\n      </CreatedAt>\r\n      <WriterContainer>\r\n        <Writer onClick={onClickUser}>\r\n          - {answer.userName}{answer.isPrivate && ' (나에게만 보임)'}\r\n        </Writer>\r\n      </WriterContainer>\r\n      <Content onClick={onClickAnswer}>\r\n        {editState \r\n          ? <EditInput autoFocus onChange={onChange} value={changedAnswer} />\r\n          : answer.answer\r\n        }\r\n      </Content>\r\n      {noteState && \r\n        <NoteFactory userObj={userObj} answer={answer} setNoteState={setNoteState} />\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n  ","export const CheerComment = [\r\n    \"당신이 생각하는 시간이 외롭지 않기를 바랍니다.\",\r\n    \"쉽지는 않겠지만, 분명 해낼 수 있어요.\",\r\n    \"항상 응원하고 있습니다.\",\r\n    \"예쁜 저녁노을이 지고, 기분 좋은 바람이 불던 날을 기억하나요?\",\r\n    \"오늘도 고생 많으셨어요.\",\r\n    \"같은 질문에 여러 번 대답할 수도 있어요.\",\r\n    \"친구 목록에서 친구의 이름을 누르면, 친구의 답들을 볼 수 있어요.\",\r\n    \"코드를 외우기 불편하다면, 비밀번호를 등록하고 코드를 변경해보세요.\",\r\n    \"채팅 없이 댓글만 구현했어요. 누군가에게 방해받지 않는 광장 같은 밀실을 바라요.\",\r\n    \"알림을 구현하지 않은 건, 이곳은 가끔씩 생각나는 담벼락되길 바랬기 때문이에요. 생각은 이곳에 정리되고, 집중은 현재에 하시길 바라면서요.\",\r\n    \"행복하시면 좋겠습니다.\",\r\n    \"주인장에게 하고 싶은 말이 있다면, 설정에서 문의하기로 할 수 있어요.\",\r\n    \"상세로 들어가기 전까지 다른 사람이 남겨놓은 메모가 보이지 않는건, 다른 사람의 생각에 대한 다른 사람의 답장을 보기전에 오롯한 당신의 답장이 써지길 바래서였습니다.\",\r\n    \"꾸준히 업데이트하고 있습니다. 감사합니다.\",\r\n]","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown, faChevronUp, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { CheerComment } from \"components/DB/CheerDB\";\r\n\r\nconst Container = styled(animated.div)`\r\n    position: relative;\r\n    margin-top: 20px;\r\n    margin-bottom: 15px;\r\n    width: 90%; \r\n    min-height: 100px;\r\n    padding: 30px 0;\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: 50%;\r\n    border-radius: 10px;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 10px;\r\n    border: none;\r\n    background: transparent;\r\n    color: white;\r\n    transition: all 0.3s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst RefreshBtn = styled.button`\r\n    position: absolute;\r\n    bottom: 10px;\r\n    left: 10px;\r\n    border: none;\r\n    background: transparent;\r\n    color: black;\r\n    transition: all 0.3s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst CheerPhrase = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    width: 90%;\r\n    word-break: keep-all;\r\n    line-height: 25px;\r\n    font-size: 0.9rem;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Cheer = () => {\r\n    const [cheer, setCheer] = useState();\r\n    const [cheerState, setCheerState] = useState(true);\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            minHeight: cheerState ? '100px' : '0px',\r\n            padding: cheerState ? '30px' : '0px',\r\n            opacity: 0.7,\r\n            y: 0\r\n        }\r\n    })\r\n\r\n    const onClick = () => {\r\n        setCheerState(!cheerState);\r\n    }\r\n\r\n    const onClickRefresh = () => {\r\n        setCheer(CheerComment[Math.floor(Math.random() * CheerComment.length)])\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCheer(CheerComment[Math.floor(Math.random() * CheerComment.length)])\r\n    }, [])\r\n\r\n    return (\r\n        <Container style={animation}>\r\n            <CloseBtn onClick={onClick} style={{color: cheerState ? 'black' : 'white'}} >\r\n                {cheerState \r\n                ? <FontAwesomeIcon icon={faChevronUp} />\r\n                : <FontAwesomeIcon icon={faChevronDown} />\r\n                }\r\n            </CloseBtn>\r\n            {cheerState && \r\n            <>\r\n                <CheerPhrase>\r\n                    {cheer}\r\n                </CheerPhrase>\r\n                <RefreshBtn onClick={onClickRefresh}>\r\n                    <FontAwesomeIcon icon={faSyncAlt} />\r\n                </RefreshBtn>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Cheer;","import React, { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst LoadingBox = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    color: white;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Blink = keyframes`\r\n    0% {\r\n        opacity: 100%;\r\n    }\r\n    50% {\r\n        opacity: 30%;\r\n    }\r\n    100% {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst Skew = keyframes`\r\n    0% {\r\n        transform: skew(0)\r\n    }\r\n    33% {\r\n        transform: skew(-1deg)\r\n    }\r\n    66% {\r\n        transform: skew(1deg)\r\n    }\r\n    100% {\r\n        transform: skew(0)\r\n    }\r\n`;\r\n\r\nconst DotBlink = keyframes`\r\n    0% {\r\n        opacity: 0%;\r\n    }\r\n    20% {\r\n        opacity: 0%;\r\n    }\r\n    40% {\r\n        opacity: 100%;\r\n    }\r\n    60% {\r\n        opacity: 100%;\r\n    }\r\n    80% {\r\n        opacity: 100%;\r\n    }\r\n    100% {\r\n        opacity: 100%\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    position: absolute;\r\n    bottom: 60vh;\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst Bulb = styled.img`\r\n    position: absolute;\r\n    height: 35vh;\r\n    width: auto;\r\n    top: 0;\r\n    animation: ${Blink} 2s ease-in-out infinite;\r\n`;\r\n\r\nconst Drawer = styled.img`\r\n    position: absolute;\r\n    animation: ${Skew} 2s ease-in-out infinite ;\r\n    height: 35vh;\r\n    width: auto;\r\n    opacity: 80%;\r\n    bottom: 25vh;\r\n    object-fit: cover;\r\n`;\r\n\r\nconst Dot = styled.div`\r\n    animation: ${DotBlink} 2s infinite;\r\n    :nth-child(2) {\r\n        animation-delay: 0.5s;\r\n    }\r\n    :last-child {\r\n        animation-delay: 1s;\r\n    }\r\n`;\r\n\r\nconst AnswerCount = styled.span`\r\n    position: absolute;\r\n    bottom: 15vh;\r\n`;\r\n\r\nconst comment = [\r\n    \"서랍장 문여는 중\", \r\n    \"사람들이 쓴 답변 모으는 중\", \r\n    \"주인장이 편지 쓰는 중\", \r\n    \"서랍장 바닥 닦는 중\", \r\n    \"주인장이 몰래 먹던 야식 감추는 중\", \r\n    \"전구 닦는 중\",\r\n    \"주인장 자세 잡는 중\",\r\n    \"서랍장 손잡이 조정 중\",\r\n    \"전구 밝기 조절 중\",\r\n    \"명예의 전당 기록 중\",\r\n    \"의자 높이 조정 중\",\r\n    ]\r\n\r\nconst Loading = () => {\r\n    const [num, setNum] = useState(\"\");\r\n    const [answerCount, setAnswerCount] = useState('');\r\n\r\n    useEffect(() => {\r\n        localStorage.getItem(\"drawerAnswers\") && setAnswerCount(JSON.parse(localStorage.getItem(\"drawerAnswers\")));\r\n        setNum(Math.floor(Math.random()*comment.length));\r\n    }, [])\r\n\r\n    return (\r\n       <LoadingBox>\r\n           <Bulb className=\"loading__bulb\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/assets/img/loading_bulb.png\" alt=\"\" />\r\n           <Title>\r\n               {comment[num]}<Dot>.</Dot><Dot>.</Dot><Dot>.</Dot>\r\n            </Title>\r\n           <Drawer className=\"loading__drawer\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/assets/img/loading_drawer.png\" alt=\"\" />\r\n           <AnswerCount>지금까지 {answerCount}칸의 서랍장이 정리되었습니다.</AnswerCount>\r\n       </LoadingBox>\r\n    )\r\n}\r\n\r\nexport default Loading;","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst useScrollMove = ({ page, path, dom }) => {\r\n    const history = useHistory();\r\n    const [scrollInfos, setScrollInfos] = useState(() => localStorage.getItem(`${page}_scroll_pos`));\r\n    const match = useRouteMatch(path);\r\n    const scrollSave = useCallback(() => {\r\n        const scrollPos = dom ? dom.scrollTop : window.scrollY;\r\n        setScrollInfos(scrollPos);\r\n        return localStorage.setItem(`${page}_scroll_pos`, scrollPos);\r\n    }, [dom]);\r\n\r\n    const scrollRemove = useCallback(() => {\r\n        setScrollInfos(0);\r\n        localStorage.removeItem(`${page}_scroll_pos`);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return history.listen((location) => {\r\n            if (match?.isExact && location.pathname !== path) {\r\n                scrollSave();\r\n            }\r\n        });\r\n    }, [history, scrollSave, match]);\r\n\r\n    return { scrollInfos, scrollRemove };\r\n};\r\n\r\nexport default useScrollMove;","import { faDice, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport Answer from \"components/answer/Answer\";\r\nimport Cheer from \"components/auth/Cheer\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport { dbService } from \"utils/fBase\";\r\nimport useScrollMove from \"components/hooks/useScrollMove\";\r\n\r\nconst Container = styled.div`\r\n  padding: 40px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--main-color);\r\n`;\r\n\r\nconst RandomBtn = styled.button`\r\n    margin-bottom: 10px;\r\n    font-size: 0.8rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 0.8rem;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst DiceContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Dice = styled.div``;\r\n\r\nconst Notice = styled.span`\r\n  font-size: 0.8rem;\r\n  display: flex;\r\n  font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst DotBlink = keyframes`\r\n    0% {\r\n        opacity: 0%;\r\n    }\r\n    20% {\r\n        opacity: 0%;\r\n    }\r\n    40% {\r\n        opacity: 100%;\r\n    }\r\n    60% {\r\n        opacity: 100%;\r\n    }\r\n    80% {\r\n        opacity: 100%;\r\n    }\r\n    100% {\r\n        opacity: 100%\r\n    }\r\n`;\r\n\r\nconst Dot = styled.div`\r\n    animation: ${DotBlink} 0.9s infinite;\r\n    :nth-child(2) {\r\n        animation-delay: 0.3s;\r\n    }\r\n    :last-child {\r\n        animation-delay: 6s;\r\n    }\r\n`;\r\n\r\nconst Home = ({ userObj, refreshFriends, refreshBookmarks, answerCount }) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  const [isLoading, setISLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [diceState, setDiceState] = useState(false);\r\n  const [randomState, setRandomState] = useState(false);\r\n\r\n  const { scrollInfos, scrollRemove } = useScrollMove({\r\n    page: `home`,\r\n    path: `/`\r\n  });\r\n\r\n  const currentPosts = (posts) => {\r\n    let currentPosts = 0;\r\n    currentPosts = posts.slice(0, currentPage * 5)\r\n    return currentPosts\r\n  }\r\n\r\n  const makeRandArray = () => {\r\n    let randArray = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      randArray[i] = Math.floor(Math.random() * answerCount);\r\n      for (let l = 0; l < i; l++) {\r\n        if(randArray[i] === randArray[l]) {\r\n          i--;\r\n          break;\r\n        };\r\n      };\r\n    };\r\n    return randArray;\r\n  };\r\n\r\n  const getData = async () => {\r\n    if (randomState) {\r\n      setDiceState(true);\r\n      setTimeout(() => {\r\n        const randArray = makeRandArray();\r\n        dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"index\", \"in\", randArray).onSnapshot(snapshot => {\r\n          const answerArray = snapshot.docs.map(doc => ({\r\n            id:doc.answerId,\r\n            ...doc.data(),\r\n          }));\r\n          answerArray.sort((a, b) => {\r\n            if(a.createdAt > b.createdAt) return -1;\r\n            if(a.createdAt === b.createdAt) return 0;\r\n            if(a.createdAt < b.createdAt) return 1;\r\n          });\r\n          setAnswers(answerArray)\r\n          if (isLoading) {\r\n            setISLoading(false)\r\n          }\r\n        });\r\n        setDiceState(false);\r\n      }, 500)\r\n    }\r\n    else {\r\n      dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).get().then(snapshot => {\r\n        const answerArray = snapshot.docs.map(doc => ({\r\n          id:doc.answerId,\r\n          ...doc.data(),\r\n        }));\r\n        answerArray.sort((a, b) => {\r\n          if(a.createdAt > b.createdAt) return -1;\r\n          if(a.createdAt === b.createdAt) return 0;\r\n          if(a.createdAt < b.createdAt) return 1;\r\n        });\r\n        setAnswers(answerArray)\r\n        if (isLoading) {\r\n          setISLoading(false)\r\n        }\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n    };\r\n  };\r\n\r\n  const addBtn = e => {\r\n    if (currentPage*5 >= answers.length | randomState) {\r\n      getData();\r\n    }\r\n    if (!randomState) {\r\n      setCurrentPage(currentPage + 1)\r\n    }\r\n  }\r\n\r\n  const onToggleRandom = e => {\r\n    setRandomState(!randomState);\r\n  };\r\n\r\n  // const onSearch = async (e) => {\r\n  //   await dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"answer\", \"array-contains\", searchWord).get()\r\n  //   .then(snapshot => {\r\n  //     console.log(snapshot.docs)\r\n  //     const answerArray = snapshot.docs.map(doc => ({\r\n  //       id:doc.answerId,\r\n  //       ...doc.data(),\r\n  //     }));\r\n  //     answerArray.sort((a, b) => {\r\n  //       if(a.createdAt > b.createdAt) return -1;\r\n  //       if(a.createdAt === b.createdAt) return 0;\r\n  //       if(a.createdAt < b.createdAt) return 1;\r\n  //     });\r\n  //     setAnswers(answerArray)\r\n  //   });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (userObj.isFirst) {\r\n      history.push(\"/manual\")\r\n    }\r\n    getData();\r\n    if (scrollInfos && match?.isExact) {\r\n      window.scrollTo(0, scrollInfos);\r\n      const scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\r\n      if (scrollTop === scrollInfos) {\r\n        scrollRemove();\r\n      }\r\n    }\r\n  }, [randomState, scrollInfos, scrollRemove, match, isLoading]);\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        : (\r\n          <>\r\n            <Cheer />\r\n            <RandomBtn onClick={onToggleRandom}>\r\n              {randomState ? \"시간 순서대로 보기\" : \"랜덤으로 보기\"}\r\n            </RandomBtn>\r\n            {answers && currentPosts(answers).map(answer => (\r\n              <Answer key={answer.answerId} userObj={userObj} answer={answer} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n            ))\r\n            }\r\n            {(answers.length < 5 | currentPage*5 <= answers.length | randomState)\r\n            ?\r\n            <AddBtn onClick={addBtn}>\r\n              {randomState \r\n              ? \r\n              <DiceContainer>\r\n                <Dice>\r\n                  <FontAwesomeIcon icon={faDice} size=\"2x\" />\r\n                </Dice>\r\n                {diceState && \r\n                  <Notice>주사위 굴리는 중\r\n                    <Dot>.</Dot><Dot>.</Dot><Dot>.</Dot>\r\n                  </Notice>}\r\n              </DiceContainer>\r\n              : <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n              }\r\n            </AddBtn>\r\n            : <LastAnswer>\r\n                    마지막 대답입니다.\r\n            </LastAnswer>\r\n            }\r\n            {/* {randomState && <Search onSearch={onSearch} from=\"home\" searchWord={searchWord} setSearchWord={setSearchWord} />} */}\r\n          </>\r\n        )\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Home;\r\n  ","import { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    position: absolute;\r\n    width: 80%;\r\n    min-height: 80%;\r\n    color: white;\r\n    z-index: 1;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 80vh;\r\n    background: black;\r\n    opacity: 60%;\r\n`;\r\n\r\nconst Terms = styled.div`\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    line-height: 140%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    height: 80vh;\r\n    background: black;\r\n    opacity: 100%;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    background: none;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst TermModal = ({ closeModal }) => {\r\n\r\n    const onClickClose = () => {\r\n        closeModal(false);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CloseBtn onClick={onClickClose}>\r\n                <FontAwesomeIcon icon={faCheck} />\r\n            </CloseBtn>\r\n            <Terms>\r\n                이용약관 <br /><br />\r\n\r\n                '누군가의 서랍장' 이하 '사이트' <br /><br />\r\n\r\n                1. 이용자가 작성한 글에 대한 모든 책임은 작성한 이용자에게 있습니다. <br />\r\n                2. 이용자는 타인이 불쾌할 수 있는 내용은 쪽지에도 글에도 쓰지 않습니다. <br />\r\n                3. 이용자는 타인이 불쾌할 수 있는 내용을 작성시 언제든 글과 쪽지가 삭제될 수 있으며, 이용이 정지될 수 있습니다. <br />\r\n                4. 이용자는 법의 이전, 최소한의 윤리의식을 가지고 사이트를 이용합니다. <br />\r\n                5. 그러나 법의 심판이 필요할 때는 사이트는 적극적으로 협조합니다. <br />\r\n            </Terms>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TermModal;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { authService } from \"utils/fBase\";\r\nimport { useState } from \"react\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport TermModal from \"./TermModal\";\r\n\r\n\r\nconst Container = styled(animated.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  z-index: 9;\r\n`;\r\n\r\nconst AuthConatiner = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst LoginContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  transition: 0.5s all ease-in-out;\r\n  :focus-within {\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst LoginLabel = styled.label`\r\n  width: 70px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst LoginInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst Notice = styled.span`\r\n  margin: 10px;\r\n  color: white;\r\n  font-size: 0.7rem;\r\n`;\r\n\r\nconst Terms = styled.a`\r\n  text-decoration: underline;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst LoginBtn = styled.button`\r\n  color: var(--gold);\r\n  background-color: transparent;\r\n  border: 1px solid var(--gold);\r\n  padding : 3px 10px;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n  font-size: 0.9rem;\r\n  font-family: Kyobo Handwriting;\r\n  transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid white;\r\n        color: white;\r\n    }\r\n    :active {\r\n      transform: scale(0.9);\r\n    }\r\n`;\r\n\r\nconst PasswordContainer = styled.div`\r\n  color: white;\r\n  transition: 0.5s all ease-in-out;\r\n  :focus-within {\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst PasswordLabel = styled.label`\r\n  width: 70px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n    transition: 0.3s all ease-in-out;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }   \r\n`;\r\n\r\nconst PasswordBtn = styled.div`\r\n  color: white;\r\n  opacity: 70%;\r\n  padding: 7px;\r\n  margin: 10px 0 20px 0;\r\n  font-size: 0.8rem;\r\n  border: 1px solid;\r\n  border-radius: 10px;\r\n  transition: all 0.5s ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst Error = styled(animated.span)`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 5px;\r\n  color: var(--gold);\r\n  word-break: keep-all;\r\n  width: 80%;\r\n  font-size: 0.7rem;\r\n`;\r\n\r\nconst Login = ({setCodeState, codeState}) => {\r\n  const [code, setCode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [modalState, setModalState] = useState(false);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await authService.signInWithEmailAndPassword(\r\n      code, codeState ? password : code) \r\n      setCode(\"\");\r\n    } catch (error) {\r\n      if (error.message === \"The email address is badly formatted.\") {\r\n        setError(\"코드를 확인해주세요.\")\r\n      } else if (error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\r\n        setError(\"정확한 코드를 입력했는지 확인해주세요.\")\r\n      }\r\n      else {\r\n        setError(error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChange = e => {\r\n    setCode(e.target.value)\r\n  }\r\n\r\n  const onChangePassword = e => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n\r\n  const closeModal = (e) => {\r\n    setModalState(e);\r\n}\r\n\r\n  const animation = useSpring({\r\n      from : {\r\n          opacity : 0\r\n      },\r\n      to: {\r\n          opacity: 1\r\n      },\r\n      config: config.gentle\r\n  })\r\n\r\n  const errorAni = useSpring({\r\n    opacity: error ? 1 : 0,\r\n    config: config.gentle\r\n  })\r\n\r\n  return (\r\n    <Container style={animation}>\r\n      {modalState && <TermModal closeModal={closeModal} />}\r\n      <PasswordBtn onClick={() => {\r\n        setCodeState(!codeState)\r\n      }}>\r\n        {codeState \r\n        ? \"저는 비밀번호가 없습니다\" \r\n        : \"저는 비밀번호가 있습니다\"\r\n        }\r\n      </PasswordBtn>\r\n      <AuthConatiner>\r\n        <LoginContainer>\r\n          <LoginLabel style={{width: !codeState && \"auto\"}}>Code :</LoginLabel>\r\n          <LoginInput onChange={onChange} value={code} type=\"text\" />\r\n        </LoginContainer>\r\n        {codeState && \r\n          <PasswordContainer>\r\n            <PasswordLabel>Password :</PasswordLabel>\r\n            <PasswordInput value={password} onChange={onChangePassword} type=\"password\" />\r\n          </PasswordContainer>\r\n        }\r\n      </AuthConatiner>\r\n      <Error style={errorAni}>{error}</Error>\r\n      {code && \r\n      <>\r\n        <Notice>\r\n          입장과 함께 <Terms onClick={() => {setModalState(true)}}>이용약관</Terms>에 동의합니다.\r\n        </Notice>\r\n        <LoginBtn onClick={onSubmit}>\r\n            들어가기\r\n        </LoginBtn>\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n  ","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\r\nimport Login from \"components/auth/Login\";\r\n\r\nconst Container = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled(animated.h1)`\r\n  position: absolute;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n  font-size: 1.5rem;\r\n  font-family: Jeju Myeongjo;\r\n  z-index: 9;\r\n`;\r\n\r\nconst AuthBox = styled.div`\r\n  background-color: black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 10px;\r\n  width: 100%;\r\n  z-index: 5;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n  color: var(--gold);\r\n  margin-bottom: 15px;\r\n  font-size: 1rem;\r\n  z-index: 9;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Welcome = styled(animated.div)`\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  opacity: 0;\r\n  transition: 1s all ease-in-out;\r\n`;\r\n\r\nconst Auth = () => {\r\n    const [authState, setAuthState] = useState(false);\r\n    const [codeState, setCodeState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n      top: authState ? \"20vh\" : \"35vh\",\r\n      config: config.molasses\r\n    })\r\n\r\n    const welcomeAni = useSpring({\r\n      opacity: !authState && 1,\r\n      config: config.molasses\r\n    })\r\n\r\n    const onClick = () => {\r\n      setAuthState(!authState)\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Background onClick={onClick} />\r\n        <Title style={animation}>누군가의 서랍장</Title>\r\n        {authState \r\n        ? (\r\n        <AuthBox>\r\n        <Notice onClick={() => {setCodeState(!codeState)}}>코드를 입력해주세요.</Notice>\r\n        <Login setCodeState={setCodeState} codeState={codeState} />\r\n        </AuthBox>\r\n        ) : <Welcome style={welcomeAni}>입장하시려면 터치해주세요.</Welcome>}\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default Auth;\r\n  ","import { faPencilAlt, faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 80%;\r\n    padding: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin: 15px 0;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst EditBtn = styled.button`\r\n    align-self: flex-end;\r\n    border: none;\r\n    background: none;\r\n    color: white;\r\n    transition: all 0.5s ease-in-out;\r\n    margin-top: 10px;\r\n    font-size: 0.9rem;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst BioContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n`;\r\n\r\nconst BioTitle = styled.h1`\r\n    color: white;\r\n    font-size: 1.1rem;\r\n`;\r\n\r\nconst BioLine = styled.hr`\r\n    width: 100%;\r\n`;\r\n\r\nconst BioContent = styled.div`  \r\n    white-space: pre-wrap;\r\n    margin-top: 5px;\r\n    color: white;\r\n    font-size: 1rem;\r\n    line-height: 140%;\r\n`;\r\n\r\nconst BioTextarea = styled.textarea`\r\n    width: 100%;\r\n    min-height: 100px;\r\n`;\r\n\r\nconst TextCounter = styled.span`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst ProfileBio = ({ userObj, refreshBio, isProfile }) => {\r\n    const { id } = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [editState, setEditState] = useState(false);\r\n    const [bio, setBio] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n    const onClickEdit = async () => {\r\n        setEditState(!editState)\r\n        setBio(userObj.bio);\r\n        if (editState && bio !== userObj.bio) {\r\n            if (window.confirm('소개를 바꾸시겠어요?')) {\r\n                await dbService.collection(\"profiles\").doc(`${userObj.uid}`)\r\n                .set({\r\n                    bio,\r\n                })\r\n                .then(() => {\r\n                    refreshBio(bio)\r\n                    setCount(bio.length)\r\n                    alert('소개를 적었습니다 :)')\r\n                }).catch((e) => {\r\n                    alert(e.message);\r\n                })    \r\n            }\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setBio(e.target.value);\r\n        setCount(e.target.value.length);\r\n    }\r\n\r\n    const getBio = async () => {\r\n        await dbService.collection(\"profiles\").doc(`${id}`).get().then(snapshot => {\r\n            const data = snapshot.data();\r\n            if (data) {\r\n                setBio(data.bio);\r\n            } else {\r\n                setBio('');\r\n            }\r\n            setIsLoading(false);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isProfile) {\r\n            getBio();\r\n        } else {\r\n            setIsLoading(false);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? ''\r\n            : \r\n            <>\r\n                <BioContainer>\r\n                    <BioTitle>\r\n                        소개\r\n                    </BioTitle>\r\n                    <BioLine />\r\n                {editState \r\n                ? \r\n                <>\r\n                <BioTextarea maxLength={200} onChange={onChange} value={bio} />\r\n                <TextCounter>{count} / 200</TextCounter>\r\n                </>\r\n                : \r\n                    <BioContent>\r\n                        {isProfile \r\n                        ? userObj.bio \r\n                            ? userObj.bio\r\n                            : \"소개말이 없습니다.\"\r\n                        : bio\r\n                            ? bio\r\n                            : \"소개말이 없습니다.\"\r\n                        }                    \r\n                    </BioContent>\r\n                }\r\n                {isProfile &&\r\n                <EditBtn onClick={onClickEdit}>\r\n                    {editState \r\n                    ? <FontAwesomeIcon icon={faSave} />\r\n                    : <FontAwesomeIcon icon={faPencilAlt} />\r\n                    }\r\n                </EditBtn>\r\n                }\r\n                </BioContainer>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfileBio;","import { faEdit, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"components/answer/Answer\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport ProfileBio from \"components/settings/ProfileBio\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding-top: 30px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.3rem;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 0.7rem;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst WriteBtn = styled.button`\r\n    position: fixed;\r\n    bottom: 30px;\r\n    right: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 5px;\r\n    font-family: Kyobo Handwriting;\r\n    background: none;\r\n    border: none;\r\n    color: white;\r\n    font-size: 0.8rem;\r\n    transition: all 0.5s ease-in-out;\r\n    z-index: 9;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`\r\n\r\nconst MyAnswers = ({userObj, refreshBio}) => {\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [myAnswers, setMyAnswers] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n\r\n      const addPage = () => {\r\n        if (currentPage*5 >= myAnswers.length) {\r\n            getMyAnswers();\r\n          }\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const getMyAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"userId\", \"==\", `${userObj.uid}`).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).onSnapshot(snapshot => {\r\n            const myAnswerArray = snapshot.docs.map(doc => ({\r\n                id: doc.answerId,\r\n                ...doc.data()    \r\n            }))\r\n            myAnswerArray.sort((a, b) => {\r\n                if(a.createdAt > b.createdAt) return -1;\r\n                if(a.createdAt === b.createdAt) return 0;\r\n                if(a.createdAt < b.createdAt) return 1;\r\n              });\r\n            setMyAnswers(myAnswerArray)\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getMyAnswers();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? <Loading />\r\n            : ( \r\n            <>\r\n                <Title>\r\n                    나만의 서랍장\r\n                </Title>\r\n                <ProfileBio userObj={userObj} refreshBio={refreshBio} isProfile={true} />\r\n                {currentPosts(myAnswers).map(myAnswer => <Answer key={myAnswer.answerId} answer={myAnswer} userObj={userObj}/>)}\r\n                {currentPage*5 <= myAnswers.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastAnswer>\r\n                    마지막 대답입니다.\r\n                </LastAnswer>\r\n                }\r\n                <Link to={\"/questions\"} style={{textDecoration: \"none\"}}>\r\n                <WriteBtn>\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                    대답쓰기\r\n                </WriteBtn>\r\n                </Link>\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default MyAnswers;\r\n  ","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"components/answer/Answer\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  font-size: 18px;\r\n  word-break: keep-all;\r\n  text-align: center;\r\n  line-height: 25px;\r\n  width: 70%;\r\n  color: white;\r\n  font-family: Jeju myeongjo;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst QuestionDetail = ({userObj, refreshFriends, refreshBookmarks}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answers, setAnswers] = useState([]);\r\n  const { id } = useParams();\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n\r\n    const addPage = () => {\r\n      if (currentPage*5 >= answers.length) {\r\n        getAnswers();\r\n      }\r\n      setCurrentPage(currentPage + 1)\r\n  }\r\n\r\n  const getAnswers = async () => {\r\n    await dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"questionId\", \"==\", `${id}`).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).get()\r\n    .then(snapShot => {\r\n      const answerData = snapShot.docs.map(doc => ({\r\n        ...doc.data()\r\n      }))\r\n      answerData.sort((a, b) => {\r\n        if(a.createdAt > b.createdAt) return -1;\r\n        if(a.createdAt === b.createdAt) return 0;\r\n        if(a.createdAt < b.createdAt) return 1;\r\n      });\r\n      setAnswers(answerData)\r\n      setIsLoading(false);\r\n    }\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAnswers();\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading \r\n      ? <Loading />\r\n      :\r\n      <>\r\n      <Question>{answers[0].question}</Question>\r\n      {currentPosts(answers).map(answer => <Answer answer={answer} userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />)}\r\n      {currentPage*5 <= answers.length \r\n      ?\r\n      <AddBtn onClick={addPage}>\r\n          <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n      </AddBtn>\r\n      : <LastAnswer>\r\n          마지막 대답입니다.\r\n      </LastAnswer>\r\n      }\r\n      </>\r\n      }\r\n    </Container>\r\n  );\r\n  }\r\n\r\n  export default QuestionDetail;\r\n    ","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { authService, dbService } from \"utils/fBase\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    color: white;\r\n`;\r\n\r\nconst QuestionContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px;\r\n`;\r\n\r\nconst CheerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px;\r\n`;\r\n\r\nconst QuestionName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst QuestionForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n`;\r\n\r\nconst Submit = styled.button`\r\n`;\r\n\r\nconst CheerName = styled.h3`\r\n    margin-bottom: 20px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst CheerForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CheerInput = styled.input`\r\n`;\r\n\r\nconst CodeContainer = styled.div`\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CodeInput = styled.input``;\r\n\r\nconst CodeBtn = styled.button``;\r\n\r\nconst CodeDiv = styled.div`\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst QuestionRegister = ({userObj}) => {\r\n    const [questionName, setQuestionName] = useState('');\r\n    const [cheerName, setCheerName] = useState('');\r\n    const [code, setCode] = useState(\"\");\r\n    const [specific, setSpecific] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        setQuestionName(e.target.value);\r\n    }\r\n\r\n    const onChangeCode = e => {\r\n        setSpecific(e.target.value);\r\n    }\r\n\r\n    const onChangeCheer = (e) => {\r\n        setCheerName(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (questionName) {\r\n            const questionId = uuidv4();\r\n            const question = questionName;\r\n            const questionObj = {\r\n                question,\r\n                questionId,\r\n                answerUsers: [],\r\n                publicAnswer: [],\r\n            }\r\n            await dbService.collection(\"questions\").doc(question).set(questionObj)\r\n            setQuestionName(\"\");\r\n        }\r\n    }\r\n\r\n    const onSubmitCheer = async (e) => {\r\n        e.preventDefault();\r\n        if (cheerName) {\r\n            const cheerId = uuidv4();\r\n            const cheer = cheerName;\r\n            const cheerObj = {\r\n                cheer,\r\n                cheerId,\r\n            }\r\n            await dbService.collection(\"cheers\").doc(cheerName).set(cheerObj)\r\n            setCheerName(\"\");\r\n        }\r\n    }\r\n\r\n    const makeCode = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'\r\n        const stringLength = 6\r\n        let randomstring = ''\r\n\r\n        if (specific) {\r\n            randomstring = specific;\r\n        } else {\r\n            for (let i = 0; i < stringLength; i++) {\r\n                const rnum = Math.floor(Math.random() * chars.length)\r\n                randomstring += chars.substring(rnum, rnum + 1)\r\n            }\r\n        };\r\n\r\n        await authService.createUserWithEmailAndPassword(\r\n            `${randomstring}@drawer.book`, \r\n            `${randomstring}@drawer.book`)\r\n        .then(async (data) => {\r\n            const newUserObj = {\r\n                uid: data.user.uid,\r\n                displayName: \"익명\",\r\n                isPassword: false,\r\n                initCode: `${randomstring}@drawer.book`,\r\n                friends: [],\r\n                bookmarks: [],\r\n                token: \"\",  \r\n                isFirst: true,\r\n            }\r\n            \r\n            await data.user.updateProfile({\r\n                displayName: \"익명\",\r\n            })\r\n\r\n            await dbService.collection(\"users\").doc(`${data.user.uid}`).set(newUserObj)\r\n            .then(() => {\r\n                alert(\"성공했습니다.\")\r\n            })\r\n        })\r\n        setCode(`${randomstring}@drawer.book`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userObj.uid !== \"oaQ2Ruq5mVZbFDb9t5E2fukKhox2\") {\r\n            authService.signOut();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <QuestionContainer>\r\n                <QuestionName>\r\n                    무슨 질문을 추가하실 건가요?\r\n                </QuestionName>\r\n                <QuestionForm>\r\n                    <QuestionInput onChange={onChange} value={questionName} type=\"text\" />\r\n                    <Submit onClick={onSubmit}>추가하기</Submit>\r\n                </QuestionForm>\r\n            </QuestionContainer>\r\n            <CheerContainer>\r\n                <CheerName>\r\n                    무슨 응원을 추가하실 건가요?\r\n                </CheerName>\r\n                <CheerForm>\r\n                    <CheerInput onChange={onChangeCheer} value={cheerName} type=\"text\" />\r\n                    <Submit onClick={onSubmitCheer}>추가하기</Submit>\r\n                </CheerForm>\r\n            </CheerContainer>\r\n            <CodeContainer>\r\n                <QuestionName>\r\n                    코드 생성기\r\n                </QuestionName>\r\n                <CodeInput onChange={onChangeCode} value={specific} type=\"text\"/>\r\n                <CodeBtn onClick={makeCode}>생성하기</CodeBtn>\r\n                <CodeDiv>{code && code}</CodeDiv>\r\n            </CodeContainer>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default QuestionRegister;\r\n  ","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService, firebaseInstance } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 90%;\r\n    padding: 20px;\r\n    box-sizing: border-box;\r\n    border: 1px solid black;\r\n    box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -webkit-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    -moz-box-shadow: 5px 5px 10px 0px rgba(0,0,0,0.75);\r\n    color: white;\r\n    border-radius: 10px;\r\n    background-color: var(--main-color);\r\n    margin: 10px;\r\n    :focus-within {\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    display: flex;\r\n    transition: 0.3s all ease-in-out;\r\n    margin-bottom: 20px;\r\n    line-height: 25px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    word-break: keep-all;\r\n    font-family: Jeju Myeongjo;\r\n    font-size: 0.8rem;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst AnswerContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-bottom: 15px;\r\n    width: 90%;\r\n`;\r\n\r\nconst AnswerInput = styled.input`\r\n    padding: 4px 7px;\r\n    transition: 0.3s all ease-in-out;\r\n    font-family: Jeju Myeongjo;\r\n    width: 100%;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerCheckbox = styled.input`\r\n    padding: 4px 7px;\r\n    transition: 0.3s all ease-in-out;\r\n    font-family: Jeju Myeongjo;\r\n    :focus {\r\n      border-radius: 10px;\r\n    }    \r\n`;\r\n\r\nconst AnswerTextarea = styled.textarea`\r\n    width: 100%;\r\n    min-height: 100px;\r\n    font-family: Jeju Myeongjo;\r\n    padding: 5px;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst PrivateLabel = styled.label`\r\n    transition: 0.3s all ease-in-out;\r\n    font-size: 0.7rem;\r\n    margin-right: 5px;\r\n`;\r\n\r\nconst AnswerBtn = styled.div`\r\n    margin-left: 5px;\r\n    width: 20px;\r\n    height: 20px;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n    :active {\r\n        background-color: var(--main-color);\r\n        transform: scale(0.9);\r\n    }\r\n`;\r\n\r\nconst Question = ({userObj, question, answerCount}) => {\r\n    const history = useHistory();\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [answer, setAnswer] = useState('');\r\n    const [longAnswer, setLongAnswer] = useState(false);\r\n\r\n    const onClickQuestion = (e) => {\r\n        history.push({\r\n            pathname: `/question/${e.target.getAttribute('name')}`,\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (answer) {\r\n            const answerId = uuidv4();\r\n            const answerObj = {\r\n            question: question.question,\r\n            questionId: question.questionId,\r\n            userId: userObj.uid,\r\n            userName: userObj.displayName,\r\n            answerId,\r\n            answer,\r\n            createdAt: Date.now(),\r\n            editedAt: null,\r\n            isPrivate,\r\n            index: answerCount + 1,\r\n            bookmarkCount: 0,\r\n        }\r\n        dbService.collection(\"answers\").doc(`${answerId}`).set(answerObj).then(async () => {\r\n            await dbService.collection(\"main\").doc(\"counts\").update({\r\n                answers: firebaseInstance.firestore.FieldValue.increment(1)\r\n            })\r\n            alert(\"답변이 저장되었습니다 :)\")\r\n        }\r\n        ).catch((error) => {\r\n            console.error(\"Submit Error : \", error)\r\n        });\r\n        setAnswer(\"\");}\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        const answerValue = e.target.value\r\n        setAnswer(answerValue)\r\n    }\r\n\r\n    const onChangeCheckbox = () => {\r\n        setIsPrivate(!isPrivate)\r\n    }\r\n\r\n    const onChangeAnswerType = () => {\r\n        setLongAnswer(!longAnswer)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title onClick={onClickQuestion} name={question.questionId}>\r\n                {question.question}\r\n            </Title>\r\n            <AnswerContainer>\r\n                {longAnswer \r\n                ? ( <AnswerTextarea onChange={onChange} value={answer} name={question.question} autoFocus />\r\n                ) : (\r\n                <AnswerInput onChange={onChange} value={answer} name={question.question} type=\"text\" />\r\n                )}\r\n                <AnswerBtn onClick={onSubmit}>\r\n                    <FontAwesomeIcon icon={faSave} />\r\n                </AnswerBtn>\r\n            </AnswerContainer>\r\n            <AnswerContainer style={{marginBottom: \"0\"}}>\r\n                <AnswerCheckbox id=\"long-answer\" onChange={onChangeAnswerType} type=\"checkbox\"/>\r\n                <PrivateLabel for=\"long-answer\">길게 쓰기</PrivateLabel>\r\n                <AnswerCheckbox id=\"private-answer\" onChange={onChangeCheckbox} type=\"checkbox\" />\r\n                <PrivateLabel for=\"private-answer\">답변 비공개하기</PrivateLabel>\r\n            </AnswerContainer>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Question;\r\n  ","import { faSearch, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 75px;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  z-index: 10;\r\n  transition: 0.3s all ease-in-out;\r\n  background-color: rgba(0,0,0,0.5);\r\n  :hover, :focus-within {\r\n    background-color: rgba(0,0,0,0.8);\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`  \r\n  font-family: Kyobo Handwriting;\r\n  font-size: 14px;\r\n  color: var(--gold);\r\n  margin-bottom: 20px;\r\n  transition: 0.3s all ease-in-out;\r\n`;\r\n\r\nconst SearchContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 3px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 200px;\r\n  transition: 0.3s all ease-in-out;\r\n  :focus {\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nconst SearchSubmit = styled.button`\r\n    font-size: 0.8rem;\r\n    border-radius: 5px;\r\n    padding: 3px 5px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n    :active {\r\n      transform: scale(0.95)\r\n    }\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 5px;\r\n  color: white;\r\n  background-color: transparent;\r\n  border: 0;\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 30px;\r\n  font-size: 1rem;\r\n  font-family: Kyobo Handwriting;\r\n  transition: 0.5s all ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst SearchBtnLabel = styled.span`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Search = ({ onSearch, from, searchWord, setSearchWord }) => {\r\n    const [searchState, setSearchState] = useState(false);\r\n    const fromHome = from === \"home\" ? true : false\r\n\r\n    const onChange = (e) => {\r\n      setSearchWord(e.target.value)      \r\n    }\r\n\r\n    const onClick = () => {\r\n      setSearchState(!searchState)\r\n    }\r\n    return (\r\n      <>\r\n      {searchState ? \r\n        <Container>\r\n        <Title>찾으시는 {fromHome ? \"답변\" : \"질문\"}이 있나요?</Title>\r\n        <SearchContainer>\r\n          <SearchInput onChange={onChange} value={searchWord} />\r\n          {from === \"home\" && <SearchSubmit onClick={onSearch}>검색하기</SearchSubmit>}\r\n        </SearchContainer>\r\n        <CloseBtn onClick={onClick}><FontAwesomeIcon icon={faTimes} size=\"lg\" /></CloseBtn>\r\n      </Container>\r\n      : <SearchBtn onClick={onClick}>\r\n          <FontAwesomeIcon icon={faSearch} />\r\n          <SearchBtnLabel>\r\n          {fromHome ? \"답변\" : \"질문\"} 찾기\r\n          </SearchBtnLabel>\r\n        </SearchBtn>\r\n      }\r\n      </>\r\n    );\r\n}\r\n  \r\nexport default Search;\r\n  ","import { faChevronLeft, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport Question from \"components/questions/Question\";\r\nimport Search from \"components/commons/Search\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    padding-top: 30px;\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    margin: 15px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n    position: fixed;\r\n    bottom: 30px;\r\n    left: 30px;\r\n    background: none;\r\n    border: none;\r\n    color: white;\r\n    font-size: 1.1rem;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastQuestion = styled.div`\r\n    color: white;\r\n    font-size: 12px;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst Questions = ({questionArray, userObj}) => {\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [questions, setQuestions] = useState([]);\r\n    const [searchWord, setSearchWord] = useState(\"\");\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [answerCount, setAnswerCount] = useState('');\r\n\r\n    const currentPosts = (posts) => {\r\n      let currentPosts = 0;\r\n      currentPosts = posts.slice(0, currentPage * 5)\r\n      return currentPosts\r\n    }\r\n  \r\n    const getQuestions = async () => {\r\n        dbService.collection(\"main\").doc(\"counts\")\r\n        .onSnapshot((snapshot) => {\r\n            const countData = snapshot.data();\r\n            setAnswerCount(countData.answers);\r\n        });\r\n        setQuestions(questionArray.sort(() => Math.random() - 0.5))\r\n        setIsLoading(!isLoading)\r\n    }\r\n\r\n    const addPage = e => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading\r\n            ? <Loading />\r\n            : (\r\n            <>\r\n                {currentPosts(questions.filter(question => question.question.includes(searchWord))).map(question => <Question key={question.questionId} userObj={userObj} question={question} answerCount={answerCount} /> )}\r\n                <BackBtn onClick={history.goBack}>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                </BackBtn>\r\n                <Search from=\"question\" searchWord={searchWord} setSearchWord={setSearchWord} />\r\n                {currentPage*5 <= questions.length \r\n                ?\r\n                <AddBtn onClick={addPage}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n                </AddBtn>\r\n                : <LastQuestion>\r\n                    마지막 질문입니다.\r\n                </LastQuestion>\r\n                }\r\n            </>\r\n            )}\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Questions;\r\n  ","import { faChevronLeft, faChevronRight, faCog, faHome, faInbox, faUserFriends } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useSpring, animated, config } from \"react-spring\"\r\n\r\nconst Container = styled(animated.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    height: auto;\r\n    z-index: 9;\r\n    box-sizing: border-box;\r\n    background-color: rgba(0,0,0, 0.5);\r\n`;\r\n\r\nconst NavComponent = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    color: white;\r\n    gap: 5px;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    font-size: 1rem;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavTitle = styled.span`\r\n    font-size: 0.7rem;\r\n`;\r\n\r\nconst NavBtn = styled(animated.button)`\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 20px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    opacity: 1;\r\n    z-index: 9;\r\n    color: white;\r\n    font-family: sans-serif;\r\n    font-weight: bolder;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NavCloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: transparent;\r\n    margin-right: 5%;\r\n    z-index: 9;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Navigation = () => {\r\n    const [navState, setNavState] = useState(false);\r\n\r\n    const animation = useSpring({\r\n        opacity : navState ? 1 : 0, \r\n        x: navState ? 0 : -10,\r\n        reverse: !navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const reverseAnimation = useSpring({\r\n        opacity : navState ? 0 : 1, \r\n        x: navState ? -10 : 0,\r\n        reverse: navState,\r\n        config: config.default,\r\n    })\r\n\r\n    const onNavClick = () => {\r\n        setNavState(!navState)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {navState ?(\r\n            <Container style={animation}>\r\n                <Link to={\"/\"} style={{textDecoration: \"none\", marginLeft: \"5%\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faHome} />\r\n                        <NavTitle>담벼락</NavTitle>\r\n                    </NavComponent>\r\n                </Link>\r\n                <Link to={\"/myanswers\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                    <FontAwesomeIcon icon={faInbox} />\r\n                    <NavTitle>나만의 서랍장</NavTitle>\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/community\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faUserFriends} />\r\n                        <NavTitle>누군가의 서랍장</NavTitle>\r\n                    </NavComponent>\r\n                </Link> \r\n                <Link to={\"/settings\"} style={{textDecoration: \"none\"}}>\r\n                    <NavComponent>\r\n                        <FontAwesomeIcon icon={faCog} />\r\n                        <NavTitle>설정</NavTitle>\r\n                    </NavComponent>\r\n                </Link> \r\n                <NavCloseBtn style onClick={onNavClick}>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                </NavCloseBtn>\r\n            </Container>\r\n            ) : (\r\n            <NavBtn style={reverseAnimation} onClick={onNavClick}>\r\n                Menu<FontAwesomeIcon icon={faChevronRight} style={{marginLeft: \"5px\"}} />\r\n            </NavBtn>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"utils/fBase\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCrown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding: 40px 0;\r\n    flex-direction: column;\r\n    width: 90%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: auto;\r\n    padding: 20px 0px;\r\n    box-sizing: border-box;\r\n    transition: 1s all ease-in-out;\r\n    background-color: rgba(255,255,255,0.5);\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ProfileLabel = styled.label`\r\n    margin: 5px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ProfileForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst PasswordForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileBox = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst ProfileInput = styled.input`\r\n    font-family: Kyobo Handwriting;\r\n`;\r\n\r\nconst ProfileSubmitBtn = styled.input`\r\n    font-size: 0.6rem;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    margin-top: 5px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst BtnContainer = styled.div`\r\n    display: flex;\r\n    gap: 5px;\r\n`;\r\n\r\nconst ManualBtn = styled.button`\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst CreditBtn = styled.button`\r\n    position: relative;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst LogOutBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst QnaContainer = styled.div`\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    height: 200px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst QnaLabel =styled.label`\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst QnaInput = styled.textarea`\r\n    font-size: 0.8rem;\r\n    width: 70%;\r\n    height: 50px;\r\n`;\r\n\r\nconst QnaSubmitBtn = styled.button`\r\n    margin-top: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(0,0,0,0.5);\r\n    color: black;\r\n    background-color: rgba(255,255,255,0.5);\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst PurchaseBtn = styled.a`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    text-decoration: none;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Crown = styled.div`\r\n    position: absolute;\r\n    top: -10px;\r\n    right: -3px;\r\n    transform: rotate(20deg);\r\n`;\r\n\r\nconst Error = styled.span`\r\n    font-size: 0.8rem;\r\n    margin: 10px;\r\n`;\r\n\r\nconst Settings = ({ refreshUser, userObj, refreshBio }) => {\r\n    const history = useHistory();\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [report, setReport] = useState('');\r\n    const [nameState, setNameState] = useState(false);\r\n    const [emailState, setEmailState] = useState(false);\r\n    const [passwordState, setPasswordState] = useState(false);\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const onClickCredit = e => {\r\n        history.push(\"/credit\");\r\n    }\r\n\r\n    const onClickManual = e => {\r\n        history.push('/manual');\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setDisplayName(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmail(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPassword(e.target.value)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"passwordCheck\") {\r\n            setPasswordCheck(e.target.value)\r\n        }\r\n    }\r\n\r\n    const onChangeReport = e => {\r\n        setReport(e.target.value)\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (displayName && userObj.displayname !== displayName) {\r\n            await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n                displayName: displayName\r\n            }).then(() => {\r\n                userObj.updateProfile({\r\n                    displayName\r\n                })\r\n                refreshUser();\r\n                setTimeout(() => {\r\n                    alert(\"이름이 성공적으로 변경되었습니다 :)\")\r\n                })\r\n            })\r\n            setDisplayName(\"\");\r\n        };\r\n    };\r\n\r\n    const onSubmitEmail = async (e) => {\r\n        e.preventDefault();\r\n        if (window.confirm(`${email}로 로그인 코드를 변경할까요?`)) {\r\n        await authService.currentUser.updateEmail(email).then(()=>{\r\n                alert(\"코드 변경에 성공했습니다.\", email)\r\n                refreshUser();\r\n                setEmail(\"\");\r\n        }).catch((e) => {\r\n            setError(e.message);\r\n        })\r\n    }\r\n    }\r\n\r\n    const onSubmitPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (password === passwordCheck) {\r\n            if (window.confirm(\"비밀번호를 변경할까요?\")) {\r\n                await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n                    isPassword: true,\r\n                })\r\n                authService.currentUser.updatePassword(password).then(()=>{\r\n                    alert(\"비밀번호 변경에 성공했습니다.\")\r\n                    refreshUser();\r\n                    setPassword(\"\");\r\n                    setPasswordCheck(\"\");\r\n                    setError('');\r\n                }).catch((e) => {\r\n                    setError(e.message);\r\n                })\r\n        }\r\n        } else {\r\n            setError('비밀번호가 다릅니다.');\r\n        }\r\n    }\r\n\r\n    const onReport = async e => {\r\n        e.preventDefault();\r\n        if (report) { \r\n            const reportObj = {\r\n            report,\r\n            userId : userObj.uid,\r\n            createdAt : Date.now()\r\n        }\r\n        dbService.collection(\"reports\").add(reportObj)\r\n        alert(\"성공적으로 제출되었습니다. 감사합니다 :)\")\r\n        setReport('');\r\n    }\r\n    }\r\n\r\n    const onClick = e =>{\r\n        e.preventDefault();\r\n        if (e.target.getAttribute(\"name\") === \"name\") {\r\n            setNameState(!nameState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"email\") {\r\n            setEmailState(!emailState)\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"password\") {\r\n            setPasswordState(!passwordState)\r\n        }\r\n    }\r\n    \r\n    const onLogOut = (e) => {\r\n        e.preventDefault();\r\n        authService.signOut();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>\r\n                {userObj.displayName}의 서랍장\r\n            </Title>\r\n            <ProfileContainer>\r\n                {!(emailState | passwordState) && \r\n                <> \r\n                <ProfileLabel name=\"name\" onClick={onClick}>이름 바꾸기</ProfileLabel>\r\n                <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                </>\r\n                }\r\n                {nameState &&\r\n                <ProfileForm onSubmit={onSubmit}>\r\n                    <ProfileInput required name=\"name\" onChange={onChange} value={displayName} type=\"text\" />\r\n                    <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\", opacity: \"80%\"}}>이름을 바꿔도, 친구들은 이전 이름을 알 수 있습니다.</ProfileLabel>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"name\" />\r\n                </ProfileForm>\r\n                }\r\n                {userObj.isPassword \r\n                ? !(nameState | passwordState) && \r\n                    <>\r\n                    <ProfileLabel name=\"email\" onClick={onClick}>접속 코드 변경</ProfileLabel>\r\n                    <hr style={{width:\"70%\", opacity:\"70%\"}} />\r\n                    </>\r\n                : null\r\n                }\r\n                {emailState &&\r\n                <ProfileForm onSubmit={onSubmitEmail}>\r\n                    <ProfileInput required name=\"email\" onChange={onChange} value={email} type=\"email\" />\r\n                    <ProfileLabel style={{marginTop: \"5px\", fontSize:\"10px\"}}>접속코드는 이메일 형태여야 합니다.</ProfileLabel>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"email\" />\r\n                    <Error>{error}</Error>\r\n                </ProfileForm>\r\n                }\r\n                {!(nameState | emailState) && \r\n                <>\r\n                    <ProfileLabel name=\"password\" onClick={onClick}>{userObj.isPassword ? \"비밀번호 바꾸기\" : \"비밀번호 설정하기\"}</ProfileLabel>\r\n                    {passwordState && <hr style={{width:\"70%\", opacity:\"70%\"}} />}\r\n                </>\r\n                }\r\n                {passwordState &&\r\n                <PasswordForm onSubmit={onSubmitPassword}>\r\n                    <ProfileBox>\r\n                        <ProfileLabel name=\"password\">비밀번호 : </ProfileLabel>\r\n                        <ProfileInput required name=\"password\" onChange={onChange} value={password} type=\"password\" />\r\n                    </ProfileBox>\r\n                    <ProfileBox>\r\n                        <ProfileLabel name=\"passwordCheck\">비밀번호 확인 : </ProfileLabel>\r\n                        <ProfileInput required name=\"passwordCheck\" onChange={onChange} value={passwordCheck} type=\"password\" />\r\n                    </ProfileBox>\r\n                    <Error>{error}</Error>\r\n                    <ProfileSubmitBtn value=\"변경하기\" type=\"submit\" name=\"password\" />\r\n                </PasswordForm>\r\n                }\r\n            </ProfileContainer>\r\n            <BtnContainer>\r\n                <ManualBtn onClick={onClickManual}>서랍장 사용 설명서</ManualBtn>\r\n                <CreditBtn onClick={onClickCredit}>\r\n                    명예의 전당\r\n                    <Crown>\r\n                        <FontAwesomeIcon icon={faCrown } />\r\n                    </Crown>\r\n                </CreditBtn>\r\n                <PurchaseBtn target=\"_blank\" href=\"https://smartstore.naver.com/myowndrawer/products/5772880639\">책 선물 & 구매하러 가기</PurchaseBtn>\r\n            </BtnContainer>\r\n            <QnaContainer>\r\n                <QnaLabel>문의하기 & 버그리포트</QnaLabel>\r\n                <QnaInput onChange={onChangeReport} value={report}type=\"text\" />\r\n                <QnaSubmitBtn onClick={onReport} >문의하기</QnaSubmitBtn>\r\n            </QnaContainer>\r\n            <LogOutBtn onClick={onLogOut}>Logout</LogOutBtn>\r\n        </Container>\r\n    );\r\n  }\r\n  \r\n  export default Settings;\r\n  ","import { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    background-color: rgba(255,255,255,0.5);\r\n    border-radius: 10px;\r\n    padding: 20px;\r\n    box-sizing: border-box;    \r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n`;\r\n\r\nconst FriendList = styled.div`\r\n    width: 100%;\r\n    padding: 3px 0;\r\n    max-height: 25vh;\r\n    overflow: auto;\r\n    ::-webkit-scrollbar {\r\n        width: 7px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: rgba(255,255,255,0.7);\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nconst Friend = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    color: white;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst FriendRight = styled.div`\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst FriendName = styled.div`\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98)\r\n    }\r\n`;\r\n\r\nconst FriendCode = styled.div``;\r\n\r\nconst FriendIcon = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 5px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst Notice = styled.div`\r\n    color: rgba(0,0,0,0.5);\r\n    margin-top: 15px;\r\n    font-size: 0.9rem;\r\n    text-align: center;\r\n    line-height: 130%;\r\n`;\r\n\r\nconst Friends = ({ userObj, refreshFriends, friendsLoading, setFriendsLoading }) => {\r\n    const [friends, setFriends] = useState([]);\r\n    const history = useHistory();\r\n\r\n    const getFriends = async () => {\r\n        if(userObj.friends && userObj.friends.length !== 0) {\r\n            let friendsArray = [];\r\n            await userObj.friends.forEach(async (friend) => {\r\n                await dbService.collection(\"users\")\r\n                    .where(\"uid\", \"==\", friend)\r\n                    .get()\r\n                .then(snapshot => {\r\n                    const data = snapshot.docs[0].data();\r\n                    friendsArray.push(data);\r\n\r\n                    if (friendsArray.length === userObj.friends.length) {\r\n                        setFriends(friendsArray);\r\n                        setFriendsLoading(false);\r\n                    }\r\n                });\r\n            })\r\n        } else {\r\n            setFriends([]);\r\n            setFriendsLoading(false);\r\n        }\r\n    }\r\n\r\n    const onClickUser = (e) => {\r\n        history.push(`/useranswer/${e.target.id}`)\r\n    }\r\n      \r\n    const onDeleteFriend = async (friend) => {\r\n        const newFriends = friends.filter(data => data !== friend.uid)\r\n        await dbService.collection(\"users\").doc(`${userObj.uid}`).update(\r\n            {friends : newFriends}\r\n        )\r\n        .then(() => {\r\n            refreshFriends(newFriends);\r\n            alert(`${friend.displayName}님을 서랍장에서 꺼냈습니다.`)\r\n        }).catch(() => {\r\n            throw new Error('친구 삭제 에러');\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFriends();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            { friendsLoading \r\n                ? null\r\n                :\r\n                <Container>\r\n                    <Title>내가 아끼는 누군가들</Title>\r\n                    <hr />\r\n                    <FriendList>\r\n                        {friends.length !== 0 \r\n                        ? friends.map(friend => (\r\n                            <Friend key={friend.uid}>\r\n                                <FriendName id={friend.uid} onClick={onClickUser}>\r\n                                    {friend.displayName}\r\n                                </FriendName>\r\n                                <FriendRight>                        \r\n                                    <FriendCode>\r\n                                    #{friend.uid.slice(-4).toLowerCase()}\r\n                                    </FriendCode>\r\n                                    <FriendIcon>\r\n                                        <FontAwesomeIcon onClick={() => {\r\n                                            if (window.confirm(`${friend.displayName}님을 목록에서 삭제하시겠어요?`)) {\r\n                                                onDeleteFriend(friend)\r\n                                            }}\r\n                                            } icon={faTrashAlt} size=\"sm\" />\r\n                                    </FriendIcon>\r\n                                </FriendRight>\r\n                            </Friend>\r\n                        ))\r\n                        : \r\n                            <Notice>\r\n                                다른 사람의 답변을 통해 <br /> 다른 누군가의 서랍장을 추가 할 수 있어요.\r\n                            </Notice>\r\n                        }\r\n                    </FriendList>\r\n                </Container>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React, { useEffect, useState } from 'react';\r\nimport Answer from 'components/answer/Answer';\r\nimport styled from 'styled-components';\r\nimport { dbService } from 'utils/fBase';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    width: 90%;\r\n    height: 100%;\r\n    color: white;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    margin: 30px;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nconst Bookmarks = ({ userObj, refreshFriends, refreshBookmarks, bookmarksLoading, setBookmarksLoading }) => {\r\n    const [someoneAnswers, setSomeoneAnswers] = useState([]);\r\n\r\n    const getBookmarks = async () => {\r\n        if(userObj.bookmarks && userObj.bookmarks.length !== 0) {\r\n            let bookmarksArray = [];\r\n            await userObj.bookmarks.forEach(async (bookmark) => {\r\n                await dbService.collection(\"answers\")\r\n                    .where(\"answerId\", \"==\", bookmark)\r\n                    .get()\r\n                .then(snapshot => {\r\n                    const data = snapshot.docs[0].data();\r\n                    bookmarksArray.push(data);\r\n\r\n                    if (bookmarksArray.length === userObj.friends.length) {\r\n                        setSomeoneAnswers(bookmarksArray);\r\n                        setBookmarksLoading(false);\r\n                    }\r\n                });\r\n            })\r\n        } else {\r\n            setSomeoneAnswers([]);\r\n            setBookmarksLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getBookmarks();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n        { bookmarksLoading \r\n        ? null\r\n        : \r\n        <>\r\n            <Title>\r\n                책갈피함\r\n            </Title>\r\n            {someoneAnswers.length \r\n            ?             \r\n                someoneAnswers.map(answer => \r\n                    <Answer \r\n                        key={answer.answerId} \r\n                        answer={answer} \r\n                        refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} userObj={userObj}\r\n                    />\r\n                )\r\n            : `아직 비어있어요. 다른 사람들의 대답으로 채워보세요!`\r\n            }\r\n\r\n        </> \r\n        }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Bookmarks;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Friends from \"components/community/Friends\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport Bookmarks from \"components/community/Bookmarks\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 80px;\r\n    padding: 10px 0; \r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: white;\r\n    margin: 20px;\r\n    font-size: 1.5rem;\r\n`;\r\n\r\nconst Community = ({userObj, refreshFriends, refreshBookmarks}) => {\r\n    const [friendsLoading, setFriendsLoading] = useState(true);\r\n    const [bookmarksLoading, setBookmarksLoading] = useState(true);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                friendsLoading && bookmarksLoading && <Loading />\r\n            }\r\n            <Title>\r\n                누군가의 서랍장\r\n            </Title>\r\n            <Friends \r\n                userObj={ userObj } \r\n                refreshFriends={ refreshFriends } \r\n                friendsLoading={ friendsLoading }\r\n                setFriendsLoading={ setFriendsLoading }\r\n            />\r\n            <Bookmarks \r\n                userObj={ userObj } \r\n                refreshFriends={ refreshFriends } \r\n                refreshBookmarks={ refreshBookmarks } \r\n                bookmarksLoading={ bookmarksLoading }\r\n                setBookmarksLoading={ setBookmarksLoading }\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Community;","import { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"components/answer/Answer\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport ProfileBio from \"components/settings/ProfileBio\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Writer = styled.div`\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 1.2rem;\r\n    color: white;\r\n    font-family: Jeju myeongjo;\r\n    margin-top: 50px;\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst AddBtn = styled.button`\r\n    background-color: transparent;\r\n    border: 0;\r\n    color: white;\r\n    opacity: 0.7;\r\n    padding: 15px 0;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n    :active {\r\n        transform: scale(0.98);\r\n    }\r\n`;\r\n\r\nconst LastAnswer = styled.div`\r\n    color: white;\r\n    font-size: 0.7rem;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst UserAnswers = ({userObj, refreshFriends, refreshBookmarks}) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [answers, setAnswers] = useState([]);\r\n    const { id } = useParams();\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const currentPosts = (posts) => {\r\n        let currentPosts = 0;\r\n        currentPosts = posts.slice(0, currentPage * 5)\r\n        return currentPosts\r\n      }\r\n  \r\n      const addPage = () => {\r\n        if (currentPage*5 >= answers.length) {\r\n          getAnswers();\r\n        }\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n    \r\n    const getAnswers = async () => {\r\n        await dbService.collection(\"answers\").where(\"isPrivate\", \"==\", false).where(\"userId\", \"==\", `${id}`).orderBy(\"createdAt\").limitToLast(currentPage*5 + 10).get()\r\n        .then(snapShot => {\r\n          const answerData = snapShot.docs.map(doc => ({\r\n            ...doc.data()\r\n          }))\r\n          answerData.sort((a, b) => {\r\n            if(a.createdAt > b.createdAt) return -1;\r\n            if(a.createdAt === b.createdAt) return 0;\r\n            if(a.createdAt < b.createdAt) return 1;\r\n          });\r\n          setAnswers(answerData)\r\n          setIsLoading(false);\r\n        }\r\n        )\r\n      }\r\n      useEffect(() => {\r\n        getAnswers();\r\n      }, [])\r\n\r\n    return (\r\n        <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        :\r\n        <>\r\n        <Writer>{answers[0].userName}의 대답들</Writer>\r\n        <ProfileBio userObj={userObj} refreshBio='' isProfile={false} />\r\n        {currentPosts(answers).map((answer, index) => <Answer key={index} answer={answer} userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />)}\r\n        {currentPage*5 <= answers.length \r\n        ?\r\n        <AddBtn onClick={addPage}>\r\n            <FontAwesomeIcon icon={faPlusCircle} size=\"2x\" />\r\n        </AddBtn>\r\n        : <LastAnswer>\r\n            마지막 대답입니다.\r\n        </LastAnswer>\r\n        }\r\n        </>\r\n        }\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default UserAnswers;","import { useEffect } from \"react\";\r\nimport { authService } from \"utils/fBase\";\r\n\r\nconst SignOut = () => {\r\n    useEffect(() => {\r\n        authService.signOut();\r\n    }, [])\r\n    return (\r\n        \"Signout\"\r\n    )\r\n}\r\n\r\nexport default SignOut;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: auto;\r\n    width: 100%;\r\n`;\r\n\r\nconst ThanksFor = styled.h3`\r\n    width: 90%;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    font-size: 1.3rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Name = styled.h3`\r\n    display: flex;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst SpecialThanksTo = ({ init }) => {\r\n    return (\r\n        <Container style={{opacity: !init && \"0\"}}>\r\n            <Title>도움을 주신 분들</Title>\r\n            <ThanksFor>\r\n                수석 디자이너 <Name>경민이</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>\r\n                창동관 이웃<Name>영민이</Name>\r\n                </ThanksFor>\r\n            <ThanksFor>\r\n                많은 도움을 준<Name>태일 형</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>\r\n                창업 초기부터 많은 도움 주신<Name>허재경 대표님</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>\r\n                SAYU PARTNER-S<Name>준성이형</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>\r\n                사람에게 정 붙일 수 있게 도와준<Name>태훈이형</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>\r\n                여러가지로 도와주시고 응원해주신<Name>창업 동아리 선생님들</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>많은 동기부여 주신<Name>대표님들</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>\r\n                응원해준<Name>친구들</Name>\r\n            </ThanksFor>\r\n            <ThanksFor>\r\n                저보고 할 수 있다고 해주신<Name>모든 분들</Name>\r\n            </ThanksFor>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SpecialThanksTo;","export const Sponsor = {\r\n    thinkShare : [\r\n        \"원동혁\",\r\n        \"정대림\",\r\n        \"김상목\",\r\n        \"박건휘\",\r\n        \"박서윤\",\r\n        \"윤수민\",\r\n        \"백서연\",\r\n        \"송호재\",\r\n        \"임태홍\",\r\n        \"전윤호\",\r\n        \"최수연\",\r\n        \"김윤선\",\r\n        \"김진용\",\r\n        \"최아룡\",\r\n        \"최지수\",\r\n        \"송시내\",\r\n        \"오세은\",\r\n        \"오승섭\",\r\n        \"이희수\",\r\n        \"김민선\",\r\n        \"나소영\",\r\n        \"백승아\",\r\n        \"신우희\",\r\n        \"조원진\",\r\n        \"한주경\",\r\n        \"박태훈\",\r\n        \"박영민\",\r\n        \"김민지\",\r\n        \"이 은\"\r\n    ],\r\n    sponsor: {\r\n        \"#1\" : [\r\n            { \r\n                comment : \"원진 작가님 항상 응원합니다♥\",\r\n                writer : \"백승아\",\r\n            },\r\n            { \r\n                comment : \"일일이육\",\r\n                writer : \"서연\",\r\n            },\r\n            { \r\n                comment : \"\",\r\n                writer : \"예림\",\r\n            },\r\n            { \r\n                comment : \"청춘(靑春): 새싹이 파랗게 돋아나는 봄철이라는 뜻으로, 십 대 후반에서 이십 대에 걸치는 인생의 젊은 나이 또는 그런 시절을 이르는 말. 예문) 주인장의 청춘을 함께할 수 있어 좋습니다.\",\r\n                writer : \"이랑\",\r\n            },\r\n            { \r\n                comment : \"반갑습니다:)\",\r\n                writer : \"zzzzz\",\r\n            },\r\n            { \r\n                comment : \"또다시 싸워 이길 나의 기쁨 나의 노래야\",\r\n                writer : \"우너진\",\r\n            },\r\n            { \r\n                comment : \"새롭게 바뀌려고 노력하기 위해 글을 남김\",\r\n                writer : \"장우태\",\r\n            },\r\n            { \r\n                comment : \"감사합니다.\",\r\n                writer : \"백지원\",\r\n            },\r\n            { \r\n                comment : \"2021년, 나도 나만의 서랍장도 좋은일만 생기길 !\",\r\n                writer : \"ck\",\r\n            },\r\n            { \r\n                comment : \"정말 멋있는 사람이 만든 멋있는 책을 갖게되어 영광입니다 :)\",\r\n                writer : \"박주현\",\r\n            },\r\n            { \r\n                comment : \"다들 매일이 소중하셨으면 좋겠어요 :-)\",\r\n                writer : \"김민선\",\r\n            },\r\n            { \r\n                comment : \"Done is better than perfect\",\r\n                writer : \"SaTivus\",\r\n            },\r\n            { \r\n                comment : \"다들 어떻게든 버티면서 살아봅시다.\",\r\n                writer : \"금산모기\",\r\n            },\r\n            { \r\n                comment : \"\",\r\n                writer : \"변현경\",\r\n            },\r\n        ],\r\n        \"#2\" : [\r\n            { \r\n                comment : \"\",\r\n                writer : \"구수경\",\r\n            },\r\n            { \r\n                comment : \"언제든 꺼내볼 수 있게 자신의 서랍장을 잘 정리할 것. 그것을 잊지 않는 삶을 살길.\",\r\n                writer : \"HONGZZANG_\",\r\n            },\r\n            { \r\n                comment : \"이렇게라도 현생의 명예를 챙길 수 있어서 다행이다\",\r\n                writer : \"김민정\",\r\n            },\r\n            { \r\n                comment : \"서랍장에서 가장 힘들때 힘을 내는 시간을 가졌었어요. 앞으로 제 인생에 서랍장이 계속 함께하기를 바래요.\",\r\n                writer : \"에이피\",\r\n            },\r\n            { \r\n                comment : \"번창하세요.\",\r\n                writer : \"그로잉마인드\",\r\n            },\r\n            { \r\n                comment : \"앙\",\r\n                writer : \"광기\",\r\n            },\r\n            { \r\n                comment : \"관경아, 멀리서나마 응원할게. :)\",\r\n                writer : \"별명\",\r\n            },\r\n            { \r\n                comment : \"다들 건강하기를\",\r\n                writer : \"정인아\",\r\n            },\r\n            { \r\n                comment : \"다들 건강하기를\",\r\n                writer : \"정인아\",\r\n            },\r\n            { \r\n                comment : \"등록 희망 ㅎㅎㅎ\",\r\n                writer : \"기현\",\r\n            },\r\n            { \r\n                comment : \"기억되고싶은 시간이 되길\",\r\n                writer : \"Ram\",\r\n            },\r\n            { \r\n                comment : \"생각이 많아지게 하는 책\",\r\n                writer : \"이재령\",\r\n            },\r\n            { \r\n                comment : \"응원합니다!! 화이팅!\",\r\n                writer : \"허재경\",\r\n            },\r\n            { \r\n                comment : \"주인장님, 멋지십니다. 응원합니다\",\r\n                writer : \"hl\",\r\n            },\r\n            { \r\n                comment : \"여러분 모두 나만의 서랍장을 통해 생각을 정리하면서  성장하셨으면 좋겠습니다!\",\r\n                writer : \"이은지\",\r\n            },\r\n            { \r\n                comment : \"모두 생기있는 삶을 살아가길 바랍니다 :-)\",\r\n                writer : \"ㅡ\",\r\n            },\r\n            { \r\n                comment : \"그럼에도 불구하고, 당신의 기억하고 싶은 하루를 바랍니다.\",\r\n                writer : \"interstellar\",\r\n            },\r\n            { \r\n                comment : \"올해는 좋은 생각만 했으면 바란다.\",\r\n                writer : \"최승철\",\r\n            },\r\n            { \r\n                comment : \"행복은 찾아오는 것이 아니라, 내가 찾아가는 길일 것입니다.이 서랍장이 행복을 찾아가는 무수한 길 중 한 가지 길이 되기를 바랍니다.\",\r\n                writer : \"지렁잉\",\r\n            },\r\n            { \r\n                comment : \"생각하는 동안에는 어떤 감정에도 휘둘리지 않고 그냥 담담하게 받아들일 수 있었으면 좋겠어요. 다들 흘러가는 대로 행복해지시면 좋겠습니다.\",\r\n                writer : \"임소진\",\r\n            },\r\n            { \r\n                comment : \"어느 때나 행복해주세요.\",\r\n                writer : \"익명\",\r\n            },\r\n            { \r\n                comment : \"2021 화이팅! 원하는 일 모두 이루길\",\r\n                writer : \"AEMIYAGUGIJJADA\",\r\n            },\r\n            { \r\n                comment : \"복잡한 생각을 정리하면 행복이 조금이나마 다가올까 싶다\",\r\n                writer : \"최슬기\",\r\n            },\r\n            { \r\n                comment : \"앞으로도 잘할 수 있을거야 힘내자!!\",\r\n                writer : \"Penna\",\r\n            },\r\n            { \r\n                comment : \"모두들 행복하세요?\",\r\n                writer : \"소연\",\r\n            },\r\n            { \r\n                comment : \"모두 생기있는 삶을 살아가길 바랍니다 :-)\",\r\n                writer : \"호핑피\",\r\n            },\r\n            { \r\n                comment : \"주인장은 기뻐하고, 누군가는 기다린다. 행복하셨으면 좋겠습니다??\",\r\n                writer : \"시작은달콤파게\",\r\n            },\r\n            { \r\n                comment : \"나는 베리굿이다. 너 또한 그렇다.\",\r\n                writer : \"김민지\",\r\n            },\r\n            { \r\n                comment : \"아 형님 여기다가 투자하면 된다고요?\",\r\n                writer : \"keenk\",\r\n            },\r\n            { \r\n                comment : \"정리되지 않은 생각들로 힘들어 하던 당신에게 보냅니다.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"많은 생각들로 밤새우는 당신에게 도움이 되길 바래요.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"정리되지 않은 생각으로 힘들어 하는 당신에게 힘이 되길.\",\r\n                writer : \"savannah\",\r\n            },\r\n            { \r\n                comment : \"읽는 이의 마음의 온도를 높여주는 책난로가 되기를.\",\r\n                writer : \"심찬영\",\r\n            },\r\n            { \r\n                comment : \"이 책을 읽게 될  많은 분들이 또 다른 '누군가'가 되어 자신의 생각을 뒤돌아보며 표현해보는 시간이 되길 바랍니다. 제가 그랬던 것 처럼요!\",\r\n                writer : \"이희수\",\r\n            },\r\n        ],\r\n        \"#3\" : [\r\n            { \r\n                comment : \"가끔은 해도 돼요.\",\r\n                writer : \"지용수\",\r\n            },\r\n        ],\r\n        \"#4\" : [\r\n            { \r\n                comment : \"나는 신이다 나는 고로 존재한다\",\r\n                writer : \"윤현식\",\r\n            },\r\n            { \r\n                comment : \"나는 생각한다 고로 서랍장을 이용한다\",\r\n                writer : \"윤현식\",\r\n            },\r\n            { \r\n                comment : \"형 사업번창하면 좋겠어요\",\r\n                writer : \"윤현식\",\r\n            },\r\n        ],\r\n        \"#5\" : [\r\n            { \r\n                comment : \"안녕하세요 반갑습니다 \",\r\n                writer : \"최수연\",\r\n            },\r\n            { \r\n                comment : \"명예의 전당에 뭐라 쓸꺼라 물어보신다면! 대답해 드리는게 인지상정! 이 책의 발매를 위해!\",\r\n                writer : \"오해택\",\r\n            },\r\n            { \r\n                comment : \"주인장의 성공을 바랍니다.\",\r\n                writer : \"세월\",\r\n            },\r\n            { \r\n                comment : \"서랍장에 들어간다면 귀퉁이 자리가 좋겠어요. 모든 기억을 한 눈에 볼 수 있으니까요.\",\r\n                writer : \"ysu\",\r\n            },\r\n        ]\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Sponsor } from \"components/DB/Sponsor\";\r\n\r\nconst ThanksContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: auto;\r\n    width: 100%;\r\n`;\r\n\r\nconst ThanksTitle = styled.h2`\r\n    font-size: 1.3rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ThanksName = styled.h3`\r\n    width: 90%;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Comment = styled.div`\r\n    word-break: keep-all;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst Name = styled.h3`\r\n    display: flex;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst White = styled.h3`\r\n    color: white;\r\n    margin-left: 5px;\r\n`;\r\n\r\n\r\nconst Sponsors = ({ init }) => {\r\n    return (\r\n        <ThanksContainer style={{opacity: !init && \"0\"}}>\r\n        <ThanksTitle>후원해주신 분들</ThanksTitle>\r\n        {Sponsor.sponsor[\"#1\"].map((thinkperson, index) => (\r\n            <ThanksName key={index}>\r\n                <Comment>{thinkperson.comment}</Comment>\r\n                <Name> \r\n                    - {thinkperson.writer} <White>님</White>\r\n                </Name>\r\n            </ThanksName>\r\n        ))}\r\n        {Sponsor.sponsor[\"#2\"].map((thinkperson, index) => (\r\n            <ThanksName key={index}>\r\n                <Comment>{thinkperson.comment}</Comment>\r\n                <Name> \r\n                    - {thinkperson.writer} <White>님</White>\r\n                </Name>\r\n            </ThanksName>\r\n        ))}\r\n        {Sponsor.sponsor[\"#3\"].map((thinkperson, index) => (\r\n            <ThanksName key={index}>\r\n                <Comment>{thinkperson.comment}</Comment>\r\n                <Name> \r\n                    - {thinkperson.writer} <White>님</White>\r\n                </Name>\r\n            </ThanksName>\r\n        ))}\r\n        {Sponsor.sponsor[\"#4\"].map((thinkperson, index) => (\r\n            <ThanksName key={index}>\r\n                <Comment>{thinkperson.comment}</Comment>\r\n                <Name> \r\n                    - {thinkperson.writer} <White>님</White>\r\n                </Name>\r\n            </ThanksName>\r\n        ))}    \r\n        {Sponsor.sponsor[\"#5\"].map((thinkperson, index) => (\r\n            <ThanksName key={index}>\r\n                <Comment>{thinkperson.comment}</Comment>\r\n                <Name> \r\n                    - {thinkperson.writer} <White>님</White>\r\n                </Name>\r\n            </ThanksName>\r\n        ))}                            \r\n    </ThanksContainer>\r\n    );\r\n};\r\n\r\nexport default Sponsors;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    top: 40vh;\r\n    color: white;\r\n    transition: 1s all ease-in-out;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst Thankyou = ({ commentState }) => {\r\n    return (\r\n        <>\r\n            <Container style={{opacity: commentState ? \"100%\" : \"0%\"}}>\r\n            아직 무언가를 이뤄낸건 아니지만, \r\n            </Container>\r\n            <Container style={{marginTop: \"30px\", opacity: commentState ? \"100%\" : \"0%\", transitionDelay: \"1s\"}}>\r\n                덕분에 여기까지라도 올 수 있었습니다.\r\n            </Container>\r\n            <Container style={{marginTop: \"60px\", opacity: commentState ? \"100%\" : \"0%\", transitionDelay: \"2s\"}}>\r\n                정말 감사합니다. 행복하시면 좋겠습니다.\r\n            </Container>\r\n            <Container style={{marginTop: \"90px\", opacity: commentState ? \"100%\" : \"0%\", transitionDelay: \"3s\"}}>\r\n                서랍장 주인장 드림\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Thankyou;","import { Sponsor } from 'components/DB/Sponsor';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: auto;\r\n    width: 100%;\r\n`;\r\n\r\nconst ThanksTitle = styled.h2`\r\n    font-size: 1.3rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst ThanksName = styled.h3`\r\n    width: 90%;\r\n    flex-wrap: wrap;\r\n    display: flex;\r\n    gap: 10px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Name = styled.h3`\r\n    display: flex;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst ThinkGivers = ({ init }) => {\r\n    return (\r\n        <Container style={{opacity: !init && \"0\"}}>\r\n            <ThanksTitle>생각을 함께 나눠주신 분들</ThanksTitle>\r\n            {Sponsor.thinkShare.map((thinkperson, index) => (\r\n                <ThanksName key={index}>\r\n                    <Name>{thinkperson}</Name>님\r\n                </ThanksName>\r\n            ))}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ThinkGivers;","export default __webpack_public_path__ + \"static/media/Soul and Mind - E's Jammy Jams.43e78e83.mp3\";","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { faBackward, faForward, faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { useInterval } from \"components/hooks/UseInterval\";\r\nimport bgm from \"assets/music/Soul and Mind - E's Jammy Jams.mp3\";\r\n\r\nconst PlayBox = styled.button`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    bottom: 20px;\r\n    opacity: 30%;\r\n    background-color: transparent;\r\n    border: none;\r\n    transition: 1s all ease-in-out;\r\n    z-index: 9;\r\n    :hover {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst PlayInput = styled.input`\r\n  -webkit-appearance: none;\r\n  margin-right: 15px;\r\n  width: 100%;\r\n  height: 6px;\r\n  border-radius: 7px;\r\n  background-size: 50% 100%;\r\n  background-repeat: no-repeat;\r\n  background-color: white;\r\n  ::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: 10px;\r\n    width: 10px;\r\n    border-radius: 50%;\r\n    background: white;\r\n    cursor: ew-resize;\r\n    box-shadow: 0 0 2px 0 #555;\r\n    transition: background .3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst PlayBtnBox = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n    gap: 5px;\r\n`;\r\n\r\nconst PlayBtn = styled.button`\r\n    background-color: transparent;\r\n    border: none;\r\n    color: white;\r\n    transition: 1s all ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst MusicComponent = ({init, setInit, setCommentState}) => {\r\n    const [speed, setSpeed] = useState(0);\r\n    const [scroll, setScroll] = useState(0);\r\n    const [bgmJazz] = useState(new Audio(bgm));\r\n\r\n    const onScroll = e => {\r\n        setSpeed(0);\r\n    }\r\n\r\n    const onScrollChange = e => {\r\n        e.preventDefault();\r\n        setScroll(e.target.value);\r\n        window.scrollTo(0, e.target.value);\r\n    }\r\n\r\n    const scriptPlay = () => {\r\n        window.scrollBy({ top: `${speed}`, behavior: 'smooth'});\r\n    }\r\n\r\n    const onClickPlay = e => {\r\n        if (speed === 0) {\r\n            if (!init) {\r\n                setInit(true)\r\n                setSpeed(isMobile ? 10 : 1)\r\n                setTimeout(() => {\r\n                    bgmJazz.play();\r\n                }, 1000)\r\n            } else {\r\n                setSpeed(isMobile ? 10 : 1)\r\n                bgmJazz.play();\r\n            }\r\n        } else {\r\n            setSpeed(0);\r\n            bgmJazz.pause();\r\n        }\r\n    }\r\n\r\n    const onClickForward = e => {\r\n        if (isMobile) {\r\n            if (speed < 100) {\r\n                setSpeed(speed + 10)\r\n            } \r\n        } else {\r\n            if (speed < 10) {\r\n                setSpeed(speed + 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onClickBackward = e => {\r\n        if (isMobile) {\r\n            if (speed > -100) {\r\n                setSpeed(speed - 10)\r\n            }\r\n        } else {\r\n            if (speed > -10) {\r\n                setSpeed(speed - 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        if (!bgmJazz.paused && speed < 1) {\r\n            setSpeed(speed + 0.1);\r\n        }\r\n\r\n        if (speed !== 0 && window.scrollY + window.innerHeight + 1 <= document.body.scrollHeight) {\r\n            scriptPlay();\r\n            setScroll(window.screenY);\r\n        }\r\n\r\n        if (window.scrollY + window.innerHeight + 100 >= document.body.scrollHeight) {\r\n            setCommentState(true);\r\n        } else {\r\n            setCommentState(false);\r\n        }\r\n    }, 30)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('wheel', onScroll);\r\n        return () => {\r\n            clearInterval();\r\n            bgmJazz.pause();\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <PlayBox style={{bottom: init? \"20px\" : \"50vh\"}} >\r\n        {init && \r\n            <PlayInput \r\n                max={document.body.scrollHeight - window.innerHeight}\r\n                min=\"0\" \r\n                value={window.scrollY} \r\n                onChange={onScrollChange} type=\"range\" \r\n            />}\r\n            <PlayBtnBox>\r\n                {init && \r\n                    <PlayBtn onClick={onClickBackward}>\r\n                        <FontAwesomeIcon icon={faBackward} />\r\n                    </PlayBtn>\r\n                }\r\n                {speed === 0 ? (\r\n                    <PlayBtn style={{fontSize: !init && \"30px\"}} onClick={onClickPlay}>\r\n                        <FontAwesomeIcon icon={faPlay} />\r\n                    </PlayBtn>\r\n                ) : ( \r\n                    <PlayBtn onClick={onClickPlay}>\r\n                        <FontAwesomeIcon icon={faPause} />\r\n                    </PlayBtn>\r\n                )}\r\n                {init && \r\n                    <PlayBtn onClick={onClickForward}>\r\n                        <FontAwesomeIcon icon={faForward} />\r\n                    </PlayBtn>\r\n                }\r\n            </PlayBtnBox>\r\n        </PlayBox>\r\n    );\r\n};\r\n\r\nexport default MusicComponent;","import { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n    const intervalRef = useRef(null);\r\n    const savedCallback = useRef(callback);\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n    useEffect(() => {\r\n      const tick = () => savedCallback.current();\r\n      if (typeof delay === 'number') {\r\n        intervalRef.current = window.setInterval(tick, delay);\r\n        return () => window.clearInterval(intervalRef.current);\r\n      }\r\n    }, [delay]);\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SpecialThanksTo from \"components/credit/SpecialThanksTo\";\r\nimport Sponsors from \"components/credit/Sponsors\";\r\nimport Thankyou from \"components/credit/Thankyou\";\r\nimport ThinkGivers from \"components/credit/ThinkGivers\";\r\nimport MusicComponent from \"components/credit/MusicComponent\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 50px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: black;\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n    color: white;\r\n    padding: 100vh 0;\r\n    ::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 1.5rem;\r\n    color: var(--gold);\r\n`;\r\n\r\nconst Credit = () => {\r\n    const [init, setInit] = useState(false);\r\n    const [commentState, setCommentState] = useState(false);\r\n\r\n    return (\r\n        <Container>\r\n            <MusicComponent init={init} setInit={setInit} commentState={commentState} setCommentState={setCommentState} />\r\n\r\n            <Title style={{opacity: !init && \"0\"}}>서랍장 명예의 전당</Title>\r\n            {/* 컴포넌트로 분리함 */}\r\n            <Sponsors init={init} />\r\n            <ThinkGivers init={init} />\r\n            <SpecialThanksTo init={init} />\r\n            <Thankyou commentState={commentState} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Credit;","import { faCommentAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    background-color: rgba(255,255,255,0.7);\r\n    width: 95%;\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst NoteTitle = styled.h3`\r\n    font-size: 0.9rem;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst NoteContent = styled.div`\r\n    display: flex;\r\n    gap: 5px;\r\n    font-size: 0.9rem;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst NoteWriter = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NoteTime = styled.span`\r\n    top: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NotesList = ({noteData}) => {\r\n    const history = useHistory();\r\n\r\n    const onClickAnswer = () => {\r\n        history.push(`/notes/user/${noteData.writer}/${noteData.answerId}`)\r\n    }\r\n\r\n    const Time = new Date(noteData.createdAt) \r\n    const year = Time.getFullYear();\r\n    const month = Time.getMonth() + 1;\r\n    const day = Time.getDate();\r\n    const date = `${year}년 ${month < 10 ? \"0\" + month : month}월 ${day < 10 ? \"0\"+day : day}일`\r\n    const lastTime = (Date.now() - noteData.createdAt) / 1000 / 60\r\n    const lastMinutes = Math.round(lastTime)\r\n    const lastHours = Math.round(lastTime / 60)\r\n    const lastDays = Math.round(lastHours / 24)\r\n\r\n    return (\r\n        <Container>\r\n            <NoteTitle>\r\n                '{noteData.answer.length > 9 ? noteData.answer.slice(0, 10) + \"...\" : noteData.answer}'에서 시작된 쪽지\r\n            </NoteTitle>\r\n            <NoteContent onClick={onClickAnswer}>\r\n                <FontAwesomeIcon icon={faCommentAlt} size=\"sm\" /> {noteData.noteContent}\r\n            </NoteContent>\r\n            <NoteTime>\r\n                {lastMinutes < 60 \r\n                    ? `${lastMinutes}분 전` \r\n                    : lastHours < 24 \r\n                    ? `${lastHours}시간 전`\r\n                    : lastDays > 7\r\n                        ? `${date}`\r\n                        : `${lastDays}일 전`\r\n                }\r\n            </NoteTime>\r\n            <NoteWriter>\r\n                - {noteData.writerName}\r\n            </NoteWriter>    \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotesList;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport NotesList from \"components/note/NotesList\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding-top: 30px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst NotesContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst NotesAnswer = ({userObj}) => {\r\n    const {id} = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userName, setUserName] = useState('');\r\n    const [notesCategory, setNotesCategory] = useState([]);\r\n\r\n    const getNotes = () => {\r\n        dbService.collection(\"notes\").where(\"receiver\", \"==\", `${userObj.uid}`).where(\"writer\", \"==\", `${id}`).onSnapshot(querySnapshot => {\r\n            let notesCategoryData = [];\r\n            let notesCategoryAnswer = [];\r\n            const notesArray = querySnapshot.docs.map(doc => ({\r\n                ...doc.data()\r\n            })\r\n            )\r\n            notesArray.sort((a, b) => {\r\n                if(a.createdAt > b.createdAt) return -1;\r\n                if(a.createdAt === b.createdAt) return 0;\r\n                if(a.createdAt < b.createdAt) return 1;\r\n            });\r\n            for (let i = 0; i < notesArray.length; i++) {\r\n                if (!notesCategoryData.includes(notesArray[i].answerId)) {\r\n                    notesCategoryData.push(notesArray[i].answerId);\r\n                    notesCategoryAnswer.push(notesArray[i]);\r\n                }\r\n            }\r\n            setUserName(notesArray[0].writerName)\r\n            setNotesCategory(notesCategoryAnswer)\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? <Loading />\r\n            :\r\n            <>\r\n            <Title>{userName}님과의 쪽지들</Title>\r\n            <NotesContainer>\r\n                {notesCategory.map(category => \r\n                    <NotesList noteData={category} />\r\n                )\r\n                }\r\n            </NotesContainer>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotesAnswer;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    background-color: rgba(255,255,255,0.7);\r\n    min-width: 120px;\r\n    padding: 15px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst NoteContent = styled.div`\r\n    font-size: 1rem;\r\n    padding: 10px 0;\r\n`;\r\n\r\nconst NoteWriter = styled.span`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NoteTime = styled.span`\r\n    top: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    font-size: 0.7rem;\r\n    opacity: 80%;\r\n`;\r\n\r\nconst NoteDetail = ({noteData, userObj}) => {\r\n\r\n    const Time = new Date(noteData.createdAt) \r\n    const year = Time.getFullYear();\r\n    const month = Time.getMonth() + 1;\r\n    const day = Time.getDate();\r\n    const date = `${year}년 ${month < 10 ? \"0\" + month : month}월 ${day < 10 ? \"0\"+day : day}일`\r\n    const lastTime = (Date.now() - noteData.createdAt) / 1000 / 60\r\n    const lastMinutes = Math.round(lastTime)\r\n    const lastHours = Math.round(lastTime / 60)\r\n    const lastDays = Math.round(lastHours / 24)\r\n\r\n    return (\r\n        <Container style={{alignSelf: noteData.writer === userObj.uid ? \"flex-end\" : \"flex-start\"}} >\r\n            <NoteContent>\r\n                {noteData.noteContent}\r\n            </NoteContent>\r\n            <NoteTime>\r\n                {lastMinutes < 60 \r\n                    ? `${lastMinutes}분 전` \r\n                    : lastHours < 24 \r\n                    ? `${lastHours}시간 전`\r\n                    : lastDays > 7\r\n                        ? `${date}`\r\n                        : `${lastDays}일 전`\r\n                }\r\n            </NoteTime>\r\n            <NoteWriter>\r\n                - {noteData.writerName}\r\n            </NoteWriter>    \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NoteDetail;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport NoteDetail from \"components/note/NoteDetail\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    padding-top: 30px;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    margin: 20px;\r\n    display: flex;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n    font-family: Kyobo Handwriting;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst NotesContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    max-height: 80vh;\r\n`;\r\n\r\nconst NotesAnswer = ({userObj}) => {\r\n    const {id, answerId} = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [notesData, setNotesData] = useState('');\r\n    const [question, setQuestion] = useState('');\r\n\r\n    const getNotes = () => {\r\n        dbService.collection(\"notes\").where(\"receiver\", \"in\", [`${userObj.uid}`, `${id}`]).where(\"answerId\", \"==\", `${answerId}`).onSnapshot(querySnapshot => {\r\n            const notesArray = querySnapshot.docs.map(doc => ({\r\n                ...doc.data()\r\n            })\r\n            )\r\n            notesArray.sort((a, b) => {\r\n                if(a.createdAt < b.createdAt) return -1;\r\n                if(a.createdAt === b.createdAt) return 0;\r\n                if(a.createdAt > b.createdAt) return 1;\r\n            });\r\n            setNotesData(notesArray);\r\n            setQuestion(notesArray[0].answer);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            {isLoading \r\n            ? <Loading />\r\n            :\r\n            <>\r\n            <Title>{question}로부터 시작된 쪽지</Title>\r\n            <NotesContainer>\r\n                {notesData.map(note => (\r\n                    <NoteDetail noteData={note} userObj={userObj} />\r\n                ))}\r\n            </NotesContainer>\r\n            </>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotesAnswer;","import { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Welcome = styled(animated.div)`\r\n    color: white;\r\n    font-size: 1.2rem;\r\n    text-align: center;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst Farewell = styled.div`\r\n    color: white;\r\n    font-size: 1.2rem;\r\n    text-align: center;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst ManualPic = styled.img`\r\n    height: 100vh;\r\n`;\r\n\r\nconst Page = styled.span`\r\n    position: fixed;\r\n    bottom: 20px;\r\n    left: 45%;\r\n    right: 45%;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1rem;\r\n    transition: all 0.5s ease-in-out;\r\n    font-family: Kyobo Handwriting;\r\n    width: 10%;\r\n`;\r\n\r\nconst StartBtn = styled.button`\r\n    position: fixed;\r\n    top: 20px;\r\n    right: 15px;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1rem;\r\n    transition: all 0.5s ease-in-out;\r\n    font-family: Kyobo Handwriting;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst NextBtn = styled.button`\r\n    position: fixed;\r\n    top: 50%;\r\n    right: 10px;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst PrevBtn = styled.button`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 10px;\r\n    background: none;\r\n    color: white;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst Manual = ({ userObj, refreshFirst }) => {\r\n    const history = useHistory();\r\n    const [page, setPage] = useState(-1);\r\n\r\n    const animation = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            y: 10\r\n        },\r\n        to: {\r\n            opacity: 1,\r\n            y: 0\r\n        }\r\n    })\r\n\r\n    const onClickNext = () => {\r\n        if (page < 15) setPage(page + 1);\r\n    }\r\n\r\n    const onClickPrev = () => {\r\n        if (page > -1) setPage(page - 1);\r\n    }\r\n\r\n    const onClickStart = async () => {\r\n        await dbService.collection(\"users\").doc(`${userObj.uid}`).update({\r\n            isFirst: false\r\n        })\r\n        refreshFirst(false);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {page === -1 && \r\n                <Welcome style={animation}>\r\n                    안녕하세요! <br />\r\n                    '누군가의 서랍장'에 오신 것을 <br />\r\n                    환영합니다!\r\n                </Welcome>\r\n            }\r\n            {page === 0 && \r\n                <Welcome style={animation}>\r\n                    끝까지 보지 않고 시작하시려면 <br />\r\n                    우측 상단의 '시작하기' 버튼을 <br />\r\n                    눌러주세요. 감사합니다. <br />\r\n                </Welcome>\r\n            }\r\n            {page > 14 &&\r\n                <Farewell>\r\n                    설명서는 설정 메뉴에서 <br />\r\n                    언제든지 다시 보실 수 있습니다. <br />\r\n                    감사합니다. 행복하시면 좋겠습니다 :)\r\n                </Farewell>\r\n            }\r\n            <StartBtn style={{bottom: page === 15 && \"-30%\", right: page === 15 && \"40%\"}} onClick={onClickStart}>시작하기</StartBtn>\r\n            {page !== -1 &&\r\n                <PrevBtn onClick={onClickPrev}>\r\n                    <FontAwesomeIcon icon={faChevronLeft} />\r\n                </PrevBtn>\r\n            }\r\n            {page !== 15 &&\r\n                <NextBtn onClick={onClickNext}>\r\n                    <FontAwesomeIcon icon={faChevronRight} />\r\n                </NextBtn>\r\n            }\r\n            {page > 0 && page < 15 &&\r\n                <>\r\n                    <ManualPic src={`https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/manual/${page}.jpg`} alt=\"\" />\r\n                    <Page>{`${page} / 14`}</Page>\r\n                </>\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Manual;","import { faPencilAlt, faSave, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    background: white;\r\n    opacity: 80%;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    margin: 5px;\r\n    color: black;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst EditInput = styled.textarea`\r\n    height: 1rem;\r\n`;\r\n\r\nconst Content = styled.div``;\r\n\r\nconst IconContainer = styled.div`\r\n    display: flex;\r\n    gap: 5px;\r\n    opacity: 70%;\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    transition: all 0.5s ease-in-out;\r\n    :hover {\r\n        cursor: pointer;\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    gap: 5px;\r\n    font-size: 0.7rem;\r\n`;\r\nconst Writer = styled.span``;\r\nconst Time = styled.span``;\r\n\r\nconst Comment = ({userObj, note}) => {\r\n    const [editState, setEditState] = useState(false);\r\n    const [editContent, setEditContent] = useState('');\r\n\r\n    const dttm = new Date(note.createdAt) \r\n    const year = dttm.getFullYear();\r\n    const month = dttm.getMonth() + 1;\r\n    const day = dttm.getDate();\r\n    const date = `${year}년 ${month < 10 ? \"0\"+month : month}월 ${day < 10 ? \"0\"+day : day}일`\r\n    const lastTime = (Date.now() - note.createdAt) / 1000 / 60\r\n    const lastMinutes = Math.round(lastTime)\r\n    const lastHours = Math.round(lastTime / 60)\r\n    const lastDays = Math.round(lastHours / 24)\r\n\r\n    const onChange = e => {\r\n        setEditContent(e.target.value);\r\n    }\r\n\r\n    const onClickEdit = () => {\r\n        if (!editState) {\r\n            setEditContent(note.noteContent);\r\n        } else if (editContent !== note.noteContent) {\r\n            window.confirm('메모를 수정하시겠어요?') &&\r\n            dbService.collection(\"notes\").doc(`${note.noteId}`).update({\r\n                noteContent: editContent\r\n            })\r\n        }\r\n        setEditState(!editState);\r\n    }\r\n\r\n    const onClickDelete = () => {\r\n        window.confirm('메모를 떼시겠어요?') &&\r\n        dbService.collection(\"notes\").doc(`${note.noteId}`).delete();\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Content>\r\n                {editState\r\n                    ? <EditInput onChange={onChange} value={editContent} />\r\n                    : note.noteContent\r\n                }\r\n            </Content>\r\n            <InfoContainer>\r\n                <Writer>\r\n                    {note.writerName}\r\n                </Writer>\r\n                <Time>\r\n                    {lastMinutes < 60 \r\n                    ? `${lastMinutes}분 전` \r\n                    : lastHours < 24 \r\n                    ? `${lastHours}시간 전`\r\n                    : lastDays > 7\r\n                        ? `${date}`\r\n                        : `${lastDays}일 전`\r\n                    }\r\n                    {note.editedAt && \"(수정됨)\"}\r\n                </Time>\r\n                {userObj.uid === note.writer && <IconContainer>\r\n                    <Icon onClick={onClickEdit}>\r\n                        {editState \r\n                        ? <FontAwesomeIcon icon={faSave} />\r\n                        : <FontAwesomeIcon icon={faPencilAlt} />\r\n                        }\r\n                    </Icon>\r\n                    <Icon onClick={onClickDelete}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Icon>\r\n                </IconContainer>}\r\n            </InfoContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Comment;","import { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Answer from \"components/answer/Answer\";\r\nimport Comment from \"components/comment/Comment\";\r\nimport Loading from \"components/loading/Loading\";\r\nimport { dbService } from \"utils/fBase\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  width: 90%;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: white;\r\n  font-size: 1.2rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst NotesConatiner = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 0.9rem;\r\n  margin: 10px;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n  display: flex;\r\n  position: fixed;\r\n  bottom: 30px;\r\n  left: 20px;\r\n  border: none;\r\n  background: none;\r\n  color: white;\r\n  font-size: 1rem;\r\n  transition: all 0.5s ease-in-out;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: var(--gold);\r\n  }\r\n`;\r\n\r\nconst AnswerDetail = ({userObj, refreshFriends, refreshBookmarks}) => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [answer, setAnswer] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n\r\n  const getNotes = async () => {\r\n    dbService.collection(\"notes\").where(\"answerId\", \"==\", id).onSnapshot(querySnapshot => {\r\n      const data = querySnapshot.docs.map(doc => doc.data());\r\n      data.sort((a ,b) => \r\n        b.createdAt - a.createdAt\r\n      )\r\n      setNotes(data);\r\n    })\r\n    setIsLoading(false)\r\n  }\r\n\r\n  const getAnswer = async () => {\r\n    await dbService.collection(\"answers\").where(\"answerId\", \"==\", `${id}`).get().then(querySnapshot => {\r\n       const data = querySnapshot.docs.map(doc => doc.data());\r\n       setAnswer(...data);\r\n      }).catch(error => {\r\n        console.log(\"error\", error)\r\n      })\r\n      getNotes();\r\n    }\r\n\r\n    useEffect(() => {\r\n      getAnswer();\r\n    }, [])\r\n\r\n    return (\r\n      <Container>\r\n        {isLoading \r\n        ? <Loading />\r\n        :\r\n        <>\r\n          <Title>\r\n            {answer.answer.slice(0,9)}{answer.answer.length > 9 ? \"...\" : \"\"}\r\n          </Title>\r\n          <Answer answer={answer} userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n          <NotesConatiner>\r\n            {notes.length !== 0 \r\n            ?\r\n            notes.map(note => <Comment key={note.noteId} userObj={userObj} note={note} />)\r\n            : \"아직 달린 메모가 없습니다.\"\r\n            }\r\n          </NotesConatiner>\r\n          <BackBtn onClick={() => {history.goBack()}}>\r\n            <FontAwesomeIcon icon={faChevronLeft} />\r\n          </BackBtn>\r\n        </>\r\n        }\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  export default AnswerDetail;\r\n  ","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 20px;\r\n`;\r\n\r\nconst Blink = keyframes`\r\n    0% {\r\n        opacity: 100%;\r\n    }\r\n    50% {\r\n        opacity: 30%;\r\n    }\r\n    100% {\r\n        opacity: 100%;\r\n    }\r\n`;\r\n\r\nconst Bulb = styled.img`\r\n    position: absolute;\r\n    height: 35vh;\r\n    width: auto;\r\n    top: 0;\r\n    animation: ${Blink} 2s ease-in-out infinite;\r\n`;\r\n\r\nconst Notice = styled.span`\r\n    color: white;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    text-decoration: none;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst NotFound = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container>\r\n           <Bulb class=\"loading__bulb\" src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/img/loading_bulb.png\" alt=\"\" />\r\n           <Notice>\r\n               이 칸에는 아무 것도 없네요!\r\n           </Notice>\r\n           <BackBtn onClick={() => {history.goBack()}}>\r\n                나의 서랍장으로 돌아가기\r\n            </BackBtn>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Home from \"pages/Home\";\r\nimport Auth from \"pages/Auth\";\r\nimport MyAnswers from \"pages/MyAnswers\";\r\nimport QuestionDetail from \"pages/QuestionDetail\";\r\nimport QuestionRegister from \"pages/QuestionRegister\";\r\nimport Questions from \"pages/Questions\";\r\nimport Navigation from \"pages/Navigation\";\r\nimport Settings from \"pages/Settings\";\r\nimport Community from \"pages/Community\";\r\nimport UserAnswers from \"pages/UserAnswers\";\r\nimport SignOut from \"pages/SignOut\";\r\nimport Credit from \"pages/Credit\";\r\nimport NotesUser from \"pages/NotesUser\";\r\nimport NotesAnswer from \"pages/NotesAnswer\";\r\nimport Manual from \"pages/Manual\";\r\nimport AnswerDetail from \"pages/AnswerDetail\";\r\nimport NotFound from \"components/error/NotFound\";\r\n\r\nconst AppRouter = ({ questionArray, isLoggedIn, userObj, refreshUser, refreshFriends, answerCount, refreshBookmarks, refreshBio, refreshFirst }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn ? \r\n            ( <> \r\n                <Navigation />\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} answerCount={answerCount} />\r\n                    </Route>\r\n                    <Route exact path=\"/auth\" >\r\n                        <Auth />\r\n                    </Route>\r\n                    <Route exact path=\"/community\" >\r\n                        <Community userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/notes/user/:id\" >\r\n                        <NotesUser userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/notes/user/:id/:answerId\" >\r\n                        <NotesAnswer userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/answer/:id\" >\r\n                        <AnswerDetail userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/myanswers\" >\r\n                        <MyAnswers questionArray={questionArray} userObj={userObj} refreshBio={refreshBio} />\r\n                    </Route>\r\n                    <Route exact path=\"/questions\" >\r\n                        <Questions questionArray={questionArray} userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/question/:id\" >\r\n                        <QuestionDetail userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/useranswer/:id\" >\r\n                        <UserAnswers userObj={userObj} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} />\r\n                    </Route>\r\n                    <Route exact path=\"/settings\" >\r\n                        <Settings refreshUser={refreshUser} userObj={userObj} refreshBio={refreshBio} />\r\n                    </Route>\r\n                    <Route exact path=\"/manual\">\r\n                        <Manual userObj={userObj} refreshFirst={refreshFirst} />\r\n                    </Route>                    \r\n                    <Route exact path=\"/credit\">\r\n                        <Credit />\r\n                    </Route>\r\n                    <Route exact path=\"/signout\" >\r\n                        <SignOut />\r\n                    </Route>\r\n                    <Route exact path=\"/questionregister\" >\r\n                        {userObj.uid === \"oaQ2Ruq5mVZbFDb9t5E2fukKhox2\"\r\n                            ? <QuestionRegister userObj={userObj} />\r\n                            : <NotFound />\r\n                        }                            \r\n                    </Route>\r\n                    <Route>\r\n                        <NotFound />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n            ) : (\r\n            <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","export const ErrorComment = [\r\n    \"앗 실수로 주인장의 주방을 열어버렸어요!\",\r\n    \"앗 실수로 주인장의 침실이 열어버렸어요!\",\r\n    \"앗 실수로 주인장의 욕실문을 열어버렸네요!\",\r\n    \"앗 실수로 다른 문을 열어버렸어요!\"\r\n]","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ErrorComment } from \"components/DB/ErrorDB\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 95vh;\r\n    gap: 15px;\r\n`;\r\n\r\nconst Pic = styled.img`\r\n    width: 50%;\r\n`;\r\n\r\nconst Notice = styled.div`\r\n    font-family: Kyobo Handwriting;\r\n    color: white;\r\n    text-align: center;\r\n    line-height: 160%;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n    font-size: 0.7rem;\r\n    border-radius: 15px;\r\n    padding: 5px 10px;\r\n    border: 1px solid rgba(255,255,255,0.5);\r\n    color: white;\r\n    background-color: transparent;\r\n    font-family: Kyobo Handwriting;\r\n    transition: 0.5s all ease-in-out;\r\n    text-decoration: none;\r\n    :hover {\r\n        cursor: pointer;\r\n        border: 1px solid var(--gold);\r\n        color: var(--gold);\r\n    }\r\n`;\r\n\r\nconst ErrorPage = () => {\r\n    const [error, setError] = useState();\r\n\r\n    const onClick = () => {\r\n        window.location.replace(\"/\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        setError(ErrorComment[Math.floor(Math.random() * ErrorComment.length)])\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Pic src=\"https://cdn.jsdelivr.net/gh/vangona/answer_community/src/assets/img/error_mouse.png\" />\r\n            <Notice>\r\n                {error} {<br />}\r\n                에러가 주인장에게 전달되었습니다. <br/>\r\n            </Notice>\r\n            <BackBtn onClick={onClick}>\r\n                나의 서랍장으로 돌아가기\r\n            </BackBtn>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React from \"react\";\r\nimport ErrorPage from \"./ErrorPage\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasError: true, error };\r\n    }\r\n\r\n    render() {\r\n        const { hasError } = this.state;\r\n        if (hasError) {\r\n            return <ErrorPage />;\r\n        }\r\n\r\n        const { children } = this.props;\r\n        return children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import firebase from \"firebase\"\r\n\r\nexport const setToken = async () => {\r\n    if (!firebase.messaging.isSupported()) {\r\n        console.log(\"isSupported: \", firebase.messaging.isSupported())\r\n        return null;\r\n    } else {\r\n        const messaging = firebase.messaging();\r\n        const token = await messaging.getToken()\r\n        .then(() => {\r\n            return messaging.getToken()\r\n        }).catch((err) => {\r\n            console.log('error : ', err);\r\n            return null;\r\n        })\r\n        .then((token) => {\r\n            messaging.onMessage(payload => {\r\n                alert(payload.notification.body)\r\n            })\r\n            return token;\r\n        })\r\n        .catch((err) => {\r\n            console.log('error : ', err);\r\n            return null;\r\n        })\r\n        return token;\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\nimport { isMobile } from \"react-device-detect\";\nimport AppRouter from \"components/Router\";\nimport Loading from \"components/loading/Loading\";\nimport ErrorBoundary from \"components/error/ErrorBoundary\";\nimport { setToken } from \"lib/Messaginginit\";\nimport { authService, dbService } from \"utils/fBase\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  font-family: Kyobo Handwriting;\n`;\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [answerCount, setAnswerCount] = useState('');\n  const [bioData, setBioData] = useState('');\n\n  const questionArray = [\n    {\n        question : \"결정을 잘 하시나요?\",\n        questionId : \"b8f300df-0fff-4fd0-a066-3c5bafe6d024\"\n    }, \n    {\n        question: \"괜찮아요?\",\n        questionId: \"ce35b720-8cbf-43af-aae6-914403c99789\"\n    },\n    {\n        question: \"그리운가요?\",\n        questionId: \"9428cfbc-2a42-48aa-8e2f-42700e928af4\"\n    },\n    {\n        question: \"꼭 가보고 싶은 곳이 있나요?\",\n        questionId: \"16a9a4c6-d1d9-4977-97ec-1fca76dc7b9c\"\n    },\n    {\n        question: \"꿈이 있나요?\",\n        questionId: \"00d1e249-bd6a-452c-81a4-458b30640945\"\n    },\n    {\n        question: \"누군가에게 말하기 어려운 것이 있다면 여기에 적어보세요.\",\n        questionId: \"f08c3f4a-13b7-4d6a-bf2b-901df73e5751\"\n    },\n    {\n        question: \"느낌을 사기위해 무언가를 지불해본 적이 있나요?\",\n        questionId: \"09770edd-b174-44de-a314-95a83eaa613e\"\n    },\n    {\n        question: \"답답한가요?\",\n        questionId: \"840ce86f-8a9e-444d-b1c1-8dd589c200ab\"\n    },\n    {\n        question: \"당신께 사랑은 무엇인가요?\",\n        questionId: \"4adc09d4-5a43-45b9-a525-d77454fa70a5\"\n    },\n    {\n        question: \"당신께 행복은 무엇인가요?\",\n        questionId: \"4f24a89a-3155-435b-84cb-82c731037942\"\n    },\n    {\n        question: \"당신께도 질문이 있나요?\",\n        questionId: \"88b121a4-e8ab-4d2d-99d3-7fec0876d439\"\n    },\n    {\n        question: \"당신은 누구인가요?\",\n        questionId: \"fa92f9e9-853a-4332-8bc6-79567fa23db5\"\n    },\n    {\n        question: \"당신은 어떤 답장을 쓰고 싶으신가요?\",\n        questionId: \"38beaf3b-90f3-4463-bfed-b5f416459280\"\n    },\n    {\n        question: \"대화가 힘들때가 있나요?\",\n        questionId: \"e459723f-00cb-43c5-8486-6d021433aea1\"\n    },\n    {\n        question: \"두려운가요?\",\n        questionId: \"e4741c08-ad4b-4328-952f-755db960fd38\"\n    },\n    {\n        question: \"모순이 있나요?\",\n        questionId: \"f8e4799a-aa4a-4b04-8e9d-667fb1a1d512\"\n    },\n    {\n        question: \"무엇이라 불리고 싶나요?\",\n        questionId: \"b6e8e867-1483-4249-89c1-9bb4a32517a8\"\n    },\n    {\n        question: \"밤을 좋아하나요?\",\n        questionId: \"d1e623a3-1d3e-45fb-9f3a-e737d9675766\"\n    },\n    {\n        question: \"번외가 있나요?\",\n        questionId: \"c7209c46-b4c0-40d5-ad1c-c420ccb0b9dc\"\n    },\n    {\n        question: \"사랑이란 무엇일까요?\",\n        questionId: \"2075b151-ed2d-4813-953e-a59a1f2d5bc6\"\n    },\n    {\n        question: \"사랑하고 있나요?\",\n        questionId: \"a06a2a77-1d1d-434c-a25d-38b6b4a5d2da\"\n    },\n    {\n        question: \"사랑한다고 말해보세요.\",\n        questionId: \"085e6ddd-7498-4a67-a894-1c42acc1c36a\"\n    },\n    {\n        question: \"생각보다 중요하지 않았던 것이 있었나요?\",\n        questionId: \"1f726ded-2c33-4803-9c5c-23cb63045667\"\n    },\n    {\n        question: \"솔직한가요?\",\n        questionId: \"109366f3-5429-4764-af23-e941e06b6e56\"\n    },\n    {\n        question: \"어리광부리고 싶다면 여기에 부려보세요.\",\n        questionId: \"d79dcd7f-e346-4b8d-9c96-50e8841efe54\"\n    },\n    {\n        question: \"어릴 때 무얼하고 놀았는지 기억나나요?\",\n        questionId: \"4303d851-1cb9-4e99-bfa5-a8735da2914a\"\n    },\n    {\n        question: \"얼었던 것이 녹으면 무엇이 되나요?\",\n        questionId: \"02a8706b-03c3-446c-9500-df3dc8fae4b1\"\n    },\n    {\n        question: \"오늘 하늘은 무슨 색이었나요?\",\n        questionId: \"55b33e10-36a5-4d24-af30-c8fa8bf13113\"\n    },\n    {\n        question: \"용서할 수 있나요?\",\n        questionId: \"640d40e5-8bee-49a8-ac49-f0879defa381\"\n    },\n    {\n        question: \"이끌려본적이 있나요?\",\n        questionId: \"ca706d16-6248-42f2-9826-77a9d8f7f94e\"\n    },\n    {\n        question: \"이상형을 그려보세요.\",\n        questionId: \"f11f02b9-88fb-4632-bdde-f824df368199\"\n    },\n    {\n        question: \"이해받고 있나요?\",\n        questionId: \"69b10746-2ee8-4941-b4d6-b943d6af7960\"\n    },\n    {\n        question: \"잊었던 단어가 있나요?\",\n        questionId: \"2d6d5007-4a8b-4176-8b1b-9556d66a2b05\"\n    },\n    {\n        question: \"정말 소통하고 있나요?\",\n        questionId: \"5dc5d43e-9642-4272-a2cc-5724ef9e95f2\"\n    },\n    {\n        question: \"좋아하는 공간이 있나요?\",\n        questionId: \"5690fbae-3972-4dfc-a21c-d6a3be147b9c\"\n    },\n    {\n        question: \"즐거웠던 순간을 적어보세요.\",\n        questionId: \"4e996e57-2dd3-47a2-b34d-d996678d3f25\"\n    },\n    {\n        question: \"지금, 무슨 생각을 하시나요?\",\n        questionId: \"e57084db-75c3-419c-b34b-fc42088e8d48\"\n    },\n    {\n        question: \"지금, 무엇을 원하시나요?\",\n        questionId: \"4ddb5a9b-415a-44f6-83a6-c86455b2ca7a\"\n    },\n    {\n        question: \"지금, 어떤 감정을 느끼시나요?\",\n        questionId: \"1fe19a57-445c-49ec-bc6b-d5e4aaed4410\"\n    },\n    {\n        question: \"쫓기고 있나요?\",\n        questionId: \"b1d88547-3c58-4a79-a4a1-a9cca797b06f\"\n    },\n    {\n        question: \"큰 일이 닥친다면?\",\n        questionId: \"c483234f-4d47-4786-b28d-29633b1f7644\"\n    },\n    {\n        question: \"편지를 받은 기억이 있나요?\",\n        questionId: \"88b4306d-91b8-43cc-ae82-67457d41d4e3\"\n    },\n    {\n        question: \"표현하지 못하는 것이 있나요?\",\n        questionId: \"a4be7cc2-a279-4715-bbbd-7e5a72f9d20c\"\n    },\n    {\n        question: \"힘들었던 순간은 여기에 두고 가도록해요.\",\n        questionId: \"e7ffd573-2901-45d5-9c79-42bebaa1ea4b\"\n    },\n]\n\n    const requestToken = async (user) => {\n        let token = await setToken();\n        if (token !== JSON.parse(localStorage.getItem(\"drawerToken\"))) {\n            dbService.collection(\"users\").doc(`${user.uid}`).update({\n                token\n            })\n            localStorage.setItem(\"drawerToken\", JSON.stringify(token))\n        }\n    }\n\n  useEffect(() => {\n    if (isMobile) {\n        const htmlCss = document.querySelector(\"html\")\n        htmlCss.style.fontSize = \"19px\";\n    }\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        if (\"serviceWorker\" in navigator) {\n            requestToken(user);\n        }\n\n        dbService.collection(\"main\").doc(\"counts\")\n        .onSnapshot((snapshot) => {\n            const countData = snapshot.data();\n            setAnswerCount(countData.answers);\n            localStorage.setItem(\"drawerAnswers\", JSON.stringify(countData.answers));\n        });\n\n        await dbService.collection('profiles').doc(`${user.uid}`).get()\n        .then((snapshot) => {\n            if (snapshot) {\n                const { bio } = snapshot.data();\n                setBioData(bio);\n            }\n        }).catch(() => {\n            setBioData('');\n        });\n\n        await dbService.collection(\"users\").doc(`${user.uid}`).get()\n        .then(snapshot => {\n            const userData = snapshot.data();\n            setUserObj({\n                uid: user.uid,\n                friends : userData.friends,\n                bookmarks : userData.bookmarks,\n                isPassword : userData.isPassword,\n                isFirst: userData.isFirst,\n                bio: bioData,\n                displayName: userData.displayName ? userData.displayName : \"익명\",\n                updateProfile: (args) => user.updateProfile(args),\n                })\n            setInit(true)\n        })\n        \n      } else {\n        setUserObj(null)\n        setInit(true)\n      }\n    })\n  }, [init])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      friends: user.friends,\n      bookmarks: user.bookmarks,\n      isFirst: user.isFirst,\n      bio: user.bio,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  const refreshFriends = (userObj, friends) => {\n    const user = authService.currentUser;\n    setUserObj({\n      ...userObj,\n      friends,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  const refreshBookmarks = (userObj, bookmarks) => {\n    const user = authService.currentUser;\n    setUserObj({\n      ...userObj,\n      bookmarks,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  const refreshBio = (bio) => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      bio,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  const refreshFirst = (isFirst) => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      isPassword: user.isPassword,\n      isFirst,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n\n  return (\n    <ErrorBoundary>\n        <Container>\n        <GlobalStyle />\n        {init \n            ? \n            <>\n                <AppRouter questionArray={questionArray} isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} refreshFriends={refreshFriends} refreshBookmarks={refreshBookmarks} refreshBio={refreshBio} refreshFirst={refreshFirst} answerCount={answerCount} />\n            </>\n            : <Loading />\n        }\n        </Container>\n`    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport \"styles/styles.css\"\nimport * as serviceWorker from \"utils/serviceWorkerRegistration\";\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nSentry.init({\n  dsn: \"https://fcd371c95b264c58b9ada1ed4d63c6e9@o1065943.ingest.sentry.io/6058254\",\n  integrations: [new Integrations.BrowserTracing()],\n\n  // Set tracesSampleRate to 1.0 to capture 100%\n  // of transactions for performance monitoring.\n  // We recommend adjusting this value in production\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (\"serviceWorker\" in navigator) {\n  serviceWorker.register()\n}\n"],"sourceRoot":""}